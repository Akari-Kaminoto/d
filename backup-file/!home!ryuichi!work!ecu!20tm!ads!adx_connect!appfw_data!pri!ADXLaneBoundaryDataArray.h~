#ifndef DATA_DEFINITION_ADXLANEBOUNDARYDATAARRAY_H
#define DATA_DEFINITION_ADXLANEBOUNDARYDATAARRAY_H

#include "CarState.h"
#include "LaneBoundaryData.h"
#include "appfw.h"
#include "system_constants.h"
#include <stddef.h>

#define ADXLANEBOUNDARYDATAARRAY_DATAINFO                                      \
  "{\"name\": \"ADXLaneBoundaryDataArray\", \"description\": "                 \
  "\"\u30ec\u30fc\u30f3\u5883\u754c\u60c5\u5831\u914d\u5217\", \"members\": "  \
  "[{\"name\": \"pose\", \"type\": " CARSTATE_DATAINFO                         \
  ", \"description\": \"\u8eca\u4e21\u60c5\u5831\", \"ignore_naming_rule\": "  \
  "true}, {\"name\": \"lane_boundary_data\", "                                 \
  "\"type\": " LANEBOUNDARYDATA_DATAINFO                                       \
  ", \"dimension\": [6], \"description\": "                                    \
  "\"\u30ec\u30fc\u30f3\u5883\u754c\u60c5\u5831\", \"ignore_naming_rule\": "   \
  "true}], \"ignore_naming_rule\": true, \"ads\": false, "                     \
  "\"name_snake_case\": \"adx_lane_boundary_data_array\"}"

#ifdef __cplusplus
extern "C" {
#endif

// ADXLaneBoundaryDataArray.hで定義されている型をシリアライズした時のバイト数
#define ADXLANEBOUNDARYDATAARRAY_SERIALIZED_SIZE                               \
  (CARSTATE_SERIALIZED_SIZE + LANEBOUNDARYDATA_SERIALIZED_SIZE * (6))

// 定数の定義
#define ADX_LANE_BOUNDARY_DATA_ARRAY_LANE_BOUNDARY_DATA_DIM1 ((size_t)6)

/* レーン境界情報配列 */
typedef struct {
  CarState pose;                          /* 車両情報 */
  LaneBoundaryData lane_boundary_data[6]; /* レーン境界情報 */
} ADXLaneBoundaryDataArray;

size_t SerializeADXLaneBoundaryDataArray(void *buffer,
                                         ADXLaneBoundaryDataArray *data,
                                         size_t max_buffer_size);
size_t SerializeADXLaneBoundaryDataArrayAutoRelease(void *buffer, void *data,
                                                    size_t max_buffer_size);
size_t DeserializeADXLaneBoundaryDataArray(ADXLaneBoundaryDataArray *data,
                                           void *buffer);
bool IsEqualADXLaneBoundaryDataArray(ADXLaneBoundaryDataArray *data1,
                                     ADXLaneBoundaryDataArray *data2);
void InitializeADXLaneBoundaryDataArray(ADXLaneBoundaryDataArray *data);
void InitializeDefaultOnlyADXLaneBoundaryDataArray(
    ADXLaneBoundaryDataArray *data);

#ifdef __cplusplus
}
#endif

#endif // DATA_DEFINITION_ADXLANEBOUNDARYDATAARRAY_H
