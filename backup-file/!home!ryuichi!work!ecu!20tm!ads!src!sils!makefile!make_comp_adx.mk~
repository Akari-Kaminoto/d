# /* $Id: make_comp.mk 1.4.1.1 2015/06/01 19:20:52JST DT_A259006 Exp  $ */
.DEFAULT_GOAL = all

# /***************************************************************************/
# /* 環境 Path Config                                                        */
# /***************************************************************************/
# /*------------------------------------*/
# /* Makefile & Command Path            */
# /*------------------------------------*/
# /* コンパイル対象対象とするコンポーネントのディレクトリパスを */
# /* 外部から与えること                                         */
# MAKE_DIR        := #このMakefileが置かれたディレクトリパス(絶対パス)
# TARGET_COMP_DIR := #コンパイル対象対象とするコンポーネントのソース格納ディレクトリパス(TOP_DIRからの相対パス)

# /***************************************************************************/
# /* Include Common                                                          */
# /***************************************************************************/
include ${MAKE_DIR}/makedef.mk
include ${MAKE_DIR}/option.mk

# /***************************************************************************/
# /* Config                                                                  */
# /***************************************************************************/
OBJ_DIR_COMP    := ${OBJ_DIR}/${TARGET_COMP_DIR}
TMP_DEL_COMP    := ${TMP_DEL_DIR}/${TARGET_COMP_DIR}

TARGET_COMP     := $(notdir ${TARGET_COMP_DIR})
TARGET_COMP_LIB := ${OBJ_DIR_COMP}/${COMP_LIB_PREFIX}${TARGET_COMP}${COMP_LIB_SUFFIX}

ifeq ($(ECU_PROPER), 1)
TARGET_COMP_DIR_ABS   := ${TOP_DIR}/../${TARGET_COMP_DIR}
else
TARGET_COMP_DIR_ABS   := ${TOP_DIR}/${TARGET_COMP_DIR}
endif
TARGET_COMP_MK        := ${TARGET_COMP_DIR_ABS}/_make_list_${TARGET_COMP}.mk
TARGET_COMP_MK_DEPEND := ${TARGET_COMP_DIR_ABS}/_make_list_${TARGET_COMP}.dep

ERROR_LOG       := ${OBJ_DIR_COMP}/${TARGET_COMP}${COMP_ERR_SUFFIX}

ERROR_LOG_CMD   =  2>&1 | tee $@.errlog >&2
# /***************************************************************************/
# /* Target Object                                                           */
# /***************************************************************************/
# /* 初期化 */
SOURCE_CPP       =
SOURCE_OPT_SIZE  =
SOURCE_OPT_SPEED =
SOURCE_OPT_SPF   =
SOURCE_ASM1      =
SOURCE_ASM2      =
COMP_LIBS        =
SOURCE_NON_ERASE =

# /* ↑の定義を各コンポーネントの設定で上書き */
include ${TARGET_COMP_MK}

# /* ソースファイル名をオブジェクトファイル名に変換  */
OBJS := \
    ${SOURCE_CPP:.cpp=.o5}  \
    ${SOURCE_OPT_SIZE:.c=.o1}  \
    ${SOURCE_OPT_SPEED:.c=.o2} \

# /* 絶対パスに変換 */
TARGET_OBJS := $(addprefix ${OBJ_DIR_COMP}/,${OBJS})
TARGET_LIBS := $(addprefix ${TARGET_COMP_DIR_ABS}/,${COMP_LIBS})

# /***************************************************************************/
# /* 依存関係                                                                */
# /***************************************************************************/
# /* 依存関係定義ファイルが生成されていない場合は何もせずスキップ */
-include ${TARGET_COMP_MK_DEPEND}

# /***************************************************************************/
# /* Make Target                                                             */
# /***************************************************************************/
.PHONY : all clean clean_except_lib depend  directory asmlist errlog \
         _src_st _delete_src_ _delete_src_not_h_ \
	errlog_soc1

# /*------------------------------------*/
# /* all                                */
# /*------------------------------------*/
all : \
    ${TARGET_COMP_LIB} \
    ${TARGET_COMP_OPT}

# /*------------------------------------*/
# /* clean                              */
# /*------------------------------------*/
clean :
	-rm -r -f ${OBJ_DIR_COMP}

# /*------------------------------------*/
# /* clean (lib を除く)                 */
# /*------------------------------------*/
clean_except_lib :
	 @echo "Clean :" ${OBJ_DIR_COMP}" ->.o* .lst .dbo .errlog .log Sub Folder"
	-@rm    -f ${TARGET_OBJS}
	-@rm    -f $(addsuffix .lst,${TARGET_OBJS})
	-@rm    -f $(addsuffix .dbo,$(basename ${TARGET_OBJS}))
	-@rm    -f $(addsuffix .errlog,${TARGET_OBJS} ${TARGET_COMP_LIB})
	-@rm    -f ${ERROR_LOG}
	-@rm -r -f ${OBJ_DIR_SUB_MAKE}

# /*------------------------------------*/
# /* depend                             */
# /*------------------------------------*/
depend : ${TARGET_OBJS}
	 cat `find ${OBJ_DIR_COMP} -name "*.d"` | \
     sed -e "s/$(subst /,\/,${OBJ_DIR_COMP})/\$${OBJ_DIR_COMP}/g" \
         -e "s/$(subst /,\/,${TOP_DIR})/\$${TOP_DIR}/g"  \
         -e "s/[A-Z]://g" > ${TARGET_COMP_MK_DEPEND}_tmp ; \
     mv ${TARGET_COMP_MK_DEPEND}_tmp ${TARGET_COMP_MK_DEPEND}

# /*------------------------------------*/
# /* directory                          */
# /*------------------------------------*/
directory :
	-@mkdir -p ${OBJ_DIR_COMP} ${OBJ_DIR_SUB_MAKE}

# /*------------------------------------*/
# /* Error Log                          */
# /*------------------------------------*/
errlog : ${ERROR_LOG}

# /*------------------------------------*/
# /* 【!!注意!!】Source File Delete     */
# /*------------------------------------*/
_src_st_ : $(addsuffix ._st,${SOURCE_NON_ERASE})

_delete_src_ : _src_st_
	 @echo "delete : ${TARGET_COMP_DIR}"
	-@rm -r -f ${TARGET_COMP_DIR_ABS}

_delete_src_not_h_ :
	 @echo "delete(except .h) : ${TARGET_COMP_DIR}"
	-@find ${TARGET_COMP_DIR_ABS} -type f -not -name "*.h" -delete

# /***************************************************************************/
# /* Make Rule                                                               */
# /***************************************************************************/
# /*------------------------------------*/
# /* Compile & Assemble                 */
# /*------------------------------------*/
# /* 共通処理マクロ                     */
CC_PROLOGUE    = ${DISP_PROC} "│    " $<
CC_IFLAGS     := $(addprefix -I,${INCLUDE_ROOT})
CC_IFLAGS     += $(addprefix -I,${INCLUDE_COMPO})
# /* SILS用共通処理マクロ                     */
ifeq ($(ECU_TYPE),SoC1)
CC_IFLAGS     += $(addprefix -I,${INCLUDE_ROOT_SOC1})
else ifeq ($(ECU_TYPE),SoC2)
CC_IFLAGS     += $(addprefix -I,${INCLUDE_ROOT_SOC2})
else ifeq ($(ECU_TYPE),MCU1)
CC_IFLAGS     += $(addprefix -I,${INCLUDE_ROOT_MCU1})
else ifeq ($(ECU_TYPE),MCU2)
CC_IFLAGS     += $(addprefix -I,${INCLUDE_ROOT_MCU2})
else
endif
CC_IN_OUT      = -o $@ $<
ifneq ($(MAKECMDGOALS),depend)
CC_OPT_COMMON  = ${CC_IFLAGS}               ${CC_IN_OUT} ${ERROR_LOG_CMD}
else
CC_OPT_COMMON  = ${CC_IFLAGS} ${DEPEND_OPT} ${CC_IN_OUT}
endif


# /* CPP				                */
${OBJ_DIR_COMP}/%.o5 : ${TARGET_COMP_DIR_ABS}/${REF_DIR}/%.cpp
	@${CC_PROLOGUE}
	 ${CCPP} ${CFLAGS_COMPO} ${CFLAGS_SIZE}    ${CC_OPT_COMMON}

# /* 最適化：サイズ優先                 */
${OBJ_DIR_COMP}/%.o1 : ${TARGET_COMP_DIR_ABS}/${REF_DIR}/%.c
	@${CC_PROLOGUE}
	 ${CC}  ${CFLAGS_COMPO} ${CFLAGS_SIZE}    ${CC_OPT_COMMON}

# /* 最適化：速度優先                   */
${OBJ_DIR_COMP}/%.o2 : ${TARGET_COMP_DIR_ABS}/${REF_DIR}/%.c
	@${CC_PROLOGUE}
	 ${CC} ${INCLUDE_COMPO} ${CFLAGS_COMPO} ${CFLAGS_SPEED}   ${CC_OPT_COMMON}

# /*------------------------------------*/
# /* アセンブラリストファイル           */
# /*------------------------------------*/
# /* 共通処理マクロ                     */
ASMLIST_PROLOGUE = ${DISP_PROC} "│    " $(<F) "(asm list)"

${OBJ_DIR_COMP}/%.lst : ${OBJ_DIR_COMP}/%
	@${ASMLIST_PROLOGUE}
	 ${ASMLIST} ${ASMLISTFLAGS} $(shell cygpath -m $<) > $@

# /*------------------------------------*/
# /* Archive                            */
# /*------------------------------------*/
${TARGET_COMP_LIB} : ${TARGET_OBJS} ${TARGET_LIBS}
	@${CMD_PROLOGUE}
	 ${AX} ${AXFLAGS} $@ ${TARGET_OBJS} ${TARGET_LIBS} ${ERROR_LOG_CMD}
	@${CMD_EPILOGUE}

# /*------------------------------------*/
# /* Error Log                          */
# /*------------------------------------*/
${ERROR_LOG} : $(addsuffix .errlog,${TARGET_OBJS} ${TARGET_COMP_LIB})
	@echo "Error log is summarized (${TARGET_COMP_DIR})"
	@echo    "*********************************************************" >  ${ERROR_LOG} ; \
	 echo    "* Component       : "${TARGET_COMP_DIR}                    >> ${ERROR_LOG} ; \
	 echo -n "* Summarized Date : "                                      >> ${ERROR_LOG} ; \
	 date                                                                >> ${ERROR_LOG} ; \
	 echo    "*********************************************************" >> ${ERROR_LOG} ; \
	 cat $^ >> ${ERROR_LOG}

# /*------------------------------------*/
# /* Source Temporary Store             */
# /*------------------------------------*/
%._st :
	@echo "  keep : " $(basename $@)
	@mkdir -p $(dir ${TMP_DEL_COMP}/$@)
	@mv $(addprefix ${TARGET_COMP_DIR_ABS}/,$(basename $@)) $(dir ${TMP_DEL_COMP}/$@)

# /**** End of File **********************************************************/
