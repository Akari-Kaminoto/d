#ifndef DATA_DEFINITION_TELELINEDATA_H
#define DATA_DEFINITION_TELELINEDATA_H

#include "CarState.h"
#include "LineData.h"
#include "LineData.h"
#include "appfw.h"
#include "system_constants.h"
#include <stddef.h>

#define TELELINEDATA_DATAINFO                                                  \
  "{\"name\": \"TeleLineData\", \"description\": "                             \
  "\"\u9060\u65b9\u533a\u753b\u7dda\u60c5\u5831\", \"members\": [{\"name\": "  \
  "\"available_flag\", \"type\": \"bool\", \"default\": \"0.0\", "             \
  "\"description\": \"\u5229\u7528\u53ef\u5426\u30d5\u30e9\u30b0\", \"min\": " \
  "0, \"max\": 1}, {\"name\": \"cam_height\", \"type\": \"uint16_t\", "        \
  "\"default\": \"0.0\", \"unit\": \"mm\", \"description\": "                  \
  "\"\u30ab\u30e1\u30e9\u9ad8\u3055\", \"min\": 0, \"max\": 65535, \"lsb\": "  \
  "1}, {\"name\": \"cam_tire_dist\", \"type\": \"int16_t\", \"default\": "     \
  "\"0.0\", \"unit\": \"mm\", \"description\": "                               \
  "\"\u30ab\u30e1\u30e9\u524d\u8f2a\u9593\u8ddd\u96e2\", \"min\": -32768, "    \
  "\"max\": 32767, \"lsb\": 1}, {\"name\": \"left_line_data\", "               \
  "\"type\": " LINEDATA_DATAINFO                                               \
  ", \"dimension\": [1860], \"description\": "                                 \
  "\"\u533a\u753b\u7dda\u5019\u88dc\u70b9\uff08\u5de6\uff09\"}, {\"name\": "   \
  "\"cam_lateral_dist\", \"type\": \"int16_t\", \"default\": \"0.0\", "        \
  "\"unit\": \"mm\", \"description\": "                                        \
  "\"\u30ab\u30e1\u30e9\u6a2a\u4f4d\u7f6e\", \"min\": -32768, \"max\": "       \
  "32767, \"lsb\": 1}, {\"name\": \"right_line_data\", "                       \
  "\"type\": " LINEDATA_DATAINFO                                               \
  ", \"dimension\": [1860], \"description\": "                                 \
  "\"\u533a\u753b\u7dda\u5019\u88dc\u70b9\uff08\u53f3\uff09\"}, {\"name\": "   \
  "\"cam_image_width\", \"type\": \"uint16_t\", \"default\": \"0.0\", "        \
  "\"unit\": \"pixel\", \"description\": "                                     \
  "\"\u30ab\u30e1\u30e9\u753b\u50cf\u5e45\", \"min\": 0, \"max\": 65535, "     \
  "\"lsb\": 1}, {\"name\": \"longitudinal_correct\", \"type\": \"float\", "    \
  "\"default\": \"0.0\", \"unit\": \"m\", \"description\": "                   \
  "\"\u7e26\u4f4d\u7f6e\u88dc\u6b63\u91cf\"}, {\"name\": "                     \
  "\"cam_image_height\", \"type\": \"uint16_t\", \"default\": \"0.0\", "       \
  "\"unit\": \"pixel\", \"description\": "                                     \
  "\"\u30ab\u30e1\u30e9\u753b\u50cf\u9ad8\u3055\", \"min\": 0, \"max\": "      \
  "65535, \"lsb\": 1}, {\"name\": \"offset\", \"type\": \"int16_t\", "         \
  "\"default\": \"0.0\", \"unit\": \"\uff4d\", \"description\": "              \
  "\"\u30aa\u30d5\u30bb\u30c3\u30c8\", \"min\": -32768, \"max\": 32767, "      \
  "\"lsb\": 0.001}, {\"name\": \"focal_length\", \"type\": \"uint32_t\", "     \
  "\"default\": \"0.0\", \"unit\": \"pixel\", \"description\": "               \
  "\"\u7126\u70b9\u8ddd\u96e2\", \"min\": 0, \"max\": 4294967295, \"lsb\": "   \
  "0.001}, {\"name\": \"yaw\", \"type\": \"int16_t\", \"default\": \"0.0\", "  \
  "\"unit\": \"rad\", \"description\": \"\u30e8\u30fc\u89d2\", \"min\": "      \
  "-32768, \"max\": 32767, \"lsb\": 0.0001}, {\"name\": \"static_foe_x\", "    \
  "\"type\": \"uint16_t\", \"default\": \"0.0\", \"unit\": \"pixel\", "        \
  "\"description\": \"\u9759\u7684FOE x\u5ea7\u6a19\", \"min\": 0, \"max\": "  \
  "65535, \"lsb\": 0.1}, {\"name\": \"curvature\", \"type\": \"int16_t\", "    \
  "\"default\": \"0.0\", \"unit\": \"1/m\", \"description\": "                 \
  "\"\u66f2\u7387\", \"min\": -32768, \"max\": 32767}, {\"name\": "            \
  "\"static_foe_y\", \"type\": \"uint16_t\", \"default\": \"0.0\", \"unit\": " \
  "\"pixel\", \"description\": \"\u9759\u7684FOE y\u5ea7\u6a19\", \"min\": "   \
  "0, \"max\": 65535, \"lsb\": 0.1}, {\"name\": \"curvature_change_rate\", "   \
  "\"type\": \"int16_t\", \"default\": \"0.0\", \"unit\": \"1/m\", "           \
  "\"description\": \"\u66f2\u7387\u5909\u5316\u7387\", \"min\": -32768, "     \
  "\"max\": 32767}, {\"name\": \"static_foe_state\", \"type\": \"uint8_t\", "  \
  "\"default\": \"0.0\", \"description\": "                                    \
  "\"\u9759\u7684FOE\u5b66\u7fd2\u72b6\u614b\", \"min\": 0, \"max\": 2, "      \
  "\"lsb\": 1}, {\"name\": \"dynamic_foe_x\", \"type\": \"uint16_t\", "        \
  "\"default\": \"0.0\", \"unit\": \"pixel\", \"description\": "               \
  "\"\u52d5\u7684FOE x\u5ea7\u6a19\", \"min\": 0, \"max\": 65535, \"lsb\": "   \
  "0.1}, {\"name\": \"dynamic_foe_y\", \"type\": \"uint16_t\", \"default\": "  \
  "\"0.0\", \"unit\": \"pixel\", \"description\": \"\u52d5\u7684FOE "          \
  "y\u5ea7\u6a19\", \"min\": 0, \"max\": 65535, \"lsb\": 0.1}, {\"name\": "    \
  "\"dynamic_foe_flag\", \"type\": \"bool\", \"default\": \"0.0\", "           \
  "\"description\": \"\u52d5\u7684FOE\u7b97\u51fa\u30d5\u30e9\u30b0\", "       \
  "\"min\": 0, \"max\": 1, \"lsb\": 1}, {\"name\": \"init_roll\", \"type\": "  \
  "\"int16_t\", \"default\": \"0.0\", \"unit\": \"deg\", \"description\": "    \
  "\"\u521d\u671f\u30ed\u30fc\u30eb\u89d2\", \"min\": -32768, \"max\": "       \
  "32767, \"lsb\": 0.01}, {\"name\": \"car_pose_loc\", "                       \
  "\"type\": " CARSTATE_DATAINFO                                               \
  ", \"description\": \"\u81ea\u8eca\u60c5\u5831\"}], \"ads\": false, "        \
  "\"name_snake_case\": \"tele_line_data\"}"

#ifdef __cplusplus
extern "C" {
#endif

// TeleLineData.hで定義されている型をシリアライズした時のバイト数
#define TELELINEDATA_SERIALIZED_SIZE                                           \
  (1 + 2 + 2 + LINEDATA_SERIALIZED_SIZE * (1860) + 2 +                         \
   LINEDATA_SERIALIZED_SIZE * (1860) + 2 + 4 + 2 + 2 + 4 + 2 + 2 + 2 + 2 + 2 + \
   1 + 2 + 2 + 1 + 2 + CARSTATE_SERIALIZED_SIZE)

// 定数の定義
#define TELE_LINE_DATA_AVAILABLE_FLAG_MIN ((bool)0)
#define TELE_LINE_DATA_AVAILABLE_FLAG_MAX ((bool)1)
#define TELE_LINE_DATA_CAM_HEIGHT_MIN ((uint16_t)0)
#define TELE_LINE_DATA_CAM_HEIGHT_MAX ((uint16_t)65535)
#define TELE_LINE_DATA_CAM_TIRE_DIST_MIN ((int16_t)-32768)
#define TELE_LINE_DATA_CAM_TIRE_DIST_MAX ((int16_t)32767)
#define TELE_LINE_DATA_LEFT_LINE_DATA_DIM1 ((size_t)1860)
#define TELE_LINE_DATA_CAM_LATERAL_DIST_MIN ((int16_t)-32768)
#define TELE_LINE_DATA_CAM_LATERAL_DIST_MAX ((int16_t)32767)
#define TELE_LINE_DATA_RIGHT_LINE_DATA_DIM1 ((size_t)1860)
#define TELE_LINE_DATA_CAM_IMAGE_WIDTH_MIN ((uint16_t)0)
#define TELE_LINE_DATA_CAM_IMAGE_WIDTH_MAX ((uint16_t)65535)
#define TELE_LINE_DATA_CAM_IMAGE_HEIGHT_MIN ((uint16_t)0)
#define TELE_LINE_DATA_CAM_IMAGE_HEIGHT_MAX ((uint16_t)65535)
#define TELE_LINE_DATA_OFFSET_MIN ((int16_t)-32768)
#define TELE_LINE_DATA_OFFSET_MAX ((int16_t)32767)
#define TELE_LINE_DATA_FOCAL_LENGTH_MIN ((uint32_t)0)
#define TELE_LINE_DATA_FOCAL_LENGTH_MAX ((uint32_t)4294967295)
#define TELE_LINE_DATA_YAW_MIN ((int16_t)-32768)
#define TELE_LINE_DATA_YAW_MAX ((int16_t)32767)
#define TELE_LINE_DATA_STATIC_FOE_X_MIN ((uint16_t)0)
#define TELE_LINE_DATA_STATIC_FOE_X_MAX ((uint16_t)65535)
#define TELE_LINE_DATA_CURVATURE_MIN ((int16_t)-32768)
#define TELE_LINE_DATA_CURVATURE_MAX ((int16_t)32767)
#define TELE_LINE_DATA_STATIC_FOE_Y_MIN ((uint16_t)0)
#define TELE_LINE_DATA_STATIC_FOE_Y_MAX ((uint16_t)65535)
#define TELE_LINE_DATA_CURVATURE_CHANGE_RATE_MIN ((int16_t)-32768)
#define TELE_LINE_DATA_CURVATURE_CHANGE_RATE_MAX ((int16_t)32767)
#define TELE_LINE_DATA_STATIC_FOE_STATE_MIN ((uint8_t)0)
#define TELE_LINE_DATA_STATIC_FOE_STATE_MAX ((uint8_t)2)
#define TELE_LINE_DATA_DYNAMIC_FOE_X_MIN ((uint16_t)0)
#define TELE_LINE_DATA_DYNAMIC_FOE_X_MAX ((uint16_t)65535)
#define TELE_LINE_DATA_DYNAMIC_FOE_Y_MIN ((uint16_t)0)
#define TELE_LINE_DATA_DYNAMIC_FOE_Y_MAX ((uint16_t)65535)
#define TELE_LINE_DATA_DYNAMIC_FOE_FLAG_MIN ((bool)0)
#define TELE_LINE_DATA_DYNAMIC_FOE_FLAG_MAX ((bool)1)
#define TELE_LINE_DATA_INIT_ROLL_MIN ((int16_t)-32768)
#define TELE_LINE_DATA_INIT_ROLL_MAX ((int16_t)32767)

/* 遠方区画線情報 */
typedef struct {
  bool available_flag;            /* 利用可否フラグ */
  uint16_t cam_height;            /* カメラ高さ */
  int16_t cam_tire_dist;          /* カメラ前輪間距離 */
  LineData left_line_data[1860];  /* 区画線候補点（左） */
  int16_t cam_lateral_dist;       /* カメラ横位置 */
  LineData right_line_data[1860]; /* 区画線候補点（右） */
  uint16_t cam_image_width;       /* カメラ画像幅 */
  float longitudinal_correct;     /* 縦位置補正量 */
  uint16_t cam_image_height;      /* カメラ画像高さ */
  int16_t offset;                 /* オフセット */
  uint32_t focal_length;          /* 焦点距離 */
  int16_t yaw;                    /* ヨー角 */
  uint16_t static_foe_x;          /* 静的FOE x座標 */
  int16_t curvature;              /* 曲率 */
  uint16_t static_foe_y;          /* 静的FOE y座標 */
  int16_t curvature_change_rate;  /* 曲率変化率 */
  uint8_t static_foe_state;       /* 静的FOE学習状態 */
  uint16_t dynamic_foe_x;         /* 動的FOE x座標 */
  uint16_t dynamic_foe_y;         /* 動的FOE y座標 */
  bool dynamic_foe_flag;          /* 動的FOE算出フラグ */
  int16_t init_roll;              /* 初期ロール角 */
  CarState car_pose_loc;          /* 自車情報 */
} TeleLineData;

size_t SerializeTeleLineData(void *buffer, TeleLineData *data,
                             size_t max_buffer_size);
size_t DeserializeTeleLineData(TeleLineData *data, void *buffer);
size_t SerializeTeleLineDataAutoRelease(void *buffer, void *data,
                                        size_t max_buffer_size);
size_t DeserializeTeleLineDataForDumper(void *data, void *buffer);
bool IsEqualTeleLineData(TeleLineData *data1, TeleLineData *data2);
void InitializeTeleLineData(TeleLineData *data);
void InitializeDefaultOnlyTeleLineData(TeleLineData *data);

#ifdef __cplusplus
}
#endif

#endif // DATA_DEFINITION_TELELINEDATA_H
