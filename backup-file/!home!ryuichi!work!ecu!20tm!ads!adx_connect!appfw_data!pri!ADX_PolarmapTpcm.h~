#ifndef DATA_DEFINITION_ADX_POLARMAPTPCM_H
#define DATA_DEFINITION_ADX_POLARMAPTPCM_H

#include "CarState.h"
#include "TpcmPolarFreeSpaceInfo.h"
#include "appfw.h"
#include "system_constants.h"
#include <stddef.h>

#define ADX_POLARMAPTPCM_DATAINFO                                              \
  "{\"name\": \"ADX_PolarmapTpcm\", \"description\": "                         \
  "\"\u30dd\u30fc\u30e9\u30de\u30c3\u30d7 (\u671b\u9060)\", \"members\": "     \
  "[{\"name\": \"adx_pm_tpcm_car_state\", \"type\": " CARSTATE_DATAINFO        \
  ", \"description\": \"\u81ea\u8eca\u4f4d\u7f6e\u60c5\u5831\", "              \
  "\"ignore_naming_rule\": true}, {\"name\": "                                 \
  "\"adx_pm_tpcm_free_space_info\", "                                          \
  "\"type\": " TPCMPOLARFREESPACEINFO_DATAINFO                                 \
  ", \"dimension\": [800], \"description\": "                                  \
  "\"\u30d5\u30ea\u30fc\u30b9\u30da\u30fc\u30b9\u8a8d\u8b58\u60c5\u5831\", "   \
  "\"ignore_naming_rule\": true}], \"ignore_naming_rule\": true, \"ads\": "    \
  "false, \"name_snake_case\": \"adx_polarmap_tpcm\"}"

#ifdef __cplusplus
extern "C" {
#endif

// ADX_PolarmapTpcm.hで定義されている型をシリアライズした時のバイト数
#define ADX_POLARMAPTPCM_SERIALIZED_SIZE                                       \
  (CARSTATE_SERIALIZED_SIZE + TPCMPOLARFREESPACEINFO_SERIALIZED_SIZE * (800))

// 定数の定義
#define ADX_POLARMAP_TPCM_ADX_PM_TPCM_FREE_SPACE_INFO_DIM1 ((size_t)800)

/* ポーラマップ (望遠) */
typedef struct {
  CarState adx_pm_tpcm_car_state; /* 自車位置情報 */
  TpcmPolarFreeSpaceInfo
      adx_pm_tpcm_free_space_info[800]; /* フリースペース認識情報 */
} ADX_PolarmapTpcm;

size_t SerializeADX_PolarmapTpcm(void *buffer, ADX_PolarmapTpcm *data,
                                 size_t max_buffer_size);
size_t SerializeADX_PolarmapTpcmAutoRelease(void *buffer, void *data,
                                            size_t max_buffer_size);
size_t DeserializeADX_PolarmapTpcm(ADX_PolarmapTpcm *data, void *buffer);
bool IsEqualADX_PolarmapTpcm(ADX_PolarmapTpcm *data1, ADX_PolarmapTpcm *data2);
void InitializeADX_PolarmapTpcm(ADX_PolarmapTpcm *data);
void InitializeDefaultOnlyADX_PolarmapTpcm(ADX_PolarmapTpcm *data);

#ifdef __cplusplus
}
#endif

#endif // DATA_DEFINITION_ADX_POLARMAPTPCM_H
