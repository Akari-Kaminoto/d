#ifndef DATA_DEFINITION_FRLIDARPOLARMAPCOM_H
#define DATA_DEFINITION_FRLIDARPOLARMAPCOM_H

#include "LidarMapOrientation.h"
#include "LidarMapOrientation.h"
#include "appfw.h"
#include "system_constants.h"
#include <stddef.h>

#define FRLIDARPOLARMAPCOM_DATAINFO                                            \
  "{\"name\": \"FrLidarPolarMapCom\", \"description\": "                       \
  "\"\u524d\u65b9LiDAR\u6975\u5ea7\u6a19map\", \"members\": [{\"name\": "      \
  "\"first_orientation\", \"type\": " LIDARMAPORIENTATION_DATAINFO             \
  ", \"dimension\": [183], \"description\": "                                  \
  "\"\u7acb\u4f53\u7269\u306e\u65b9\u4f4d\u60c5\u5831\", "                     \
  "\"ignore_naming_rule\": true}, {\"name\": \"second_orientation\", "         \
  "\"type\": " LIDARMAPORIENTATION_DATAINFO                                    \
  ", \"dimension\": [183], \"description\": "                                  \
  "\"\u6700\u4e0b\u30ec\u30a4\u30e4\u306e\u65b9\u4f4d\u60c5\u5831\", "         \
  "\"ignore_naming_rule\": true}], \"ignore_naming_rule\": true, \"ads\": "    \
  "false, \"name_snake_case\": \"fr_lidar_polar_map_com\"}"

#ifdef __cplusplus
extern "C" {
#endif

// FrLidarPolarMapCom.hで定義されている型をシリアライズした時のバイト数
#define FRLIDARPOLARMAPCOM_SERIALIZED_SIZE                                     \
  (LIDARMAPORIENTATION_SERIALIZED_SIZE * (183) +                               \
   LIDARMAPORIENTATION_SERIALIZED_SIZE * (183))

// 定数の定義
#define FR_LIDAR_POLAR_MAP_COM_FIRST_ORIENTATION_DIM1 ((size_t)183)
#define FR_LIDAR_POLAR_MAP_COM_SECOND_ORIENTATION_DIM1 ((size_t)183)

/* 前方LiDAR極座標map */
typedef struct {
  LidarMapOrientation first_orientation[183]; /* 立体物の方位情報 */
  LidarMapOrientation second_orientation[183]; /* 最下レイヤの方位情報 */
} FrLidarPolarMapCom;

size_t SerializeFrLidarPolarMapCom(void *buffer, FrLidarPolarMapCom *data,
                                   size_t max_buffer_size);
size_t DeserializeFrLidarPolarMapCom(FrLidarPolarMapCom *data, void *buffer);
size_t SerializeFrLidarPolarMapComAutoRelease(void *buffer, void *data,
                                              size_t max_buffer_size);
size_t DeserializeFrLidarPolarMapComForDumper(void *data, void *buffer);
bool IsEqualFrLidarPolarMapCom(FrLidarPolarMapCom *data1,
                               FrLidarPolarMapCom *data2);
void InitializeFrLidarPolarMapCom(FrLidarPolarMapCom *data);
void InitializeDefaultOnlyFrLidarPolarMapCom(FrLidarPolarMapCom *data);

#ifdef __cplusplus
}
#endif

#endif // DATA_DEFINITION_FRLIDARPOLARMAPCOM_H
