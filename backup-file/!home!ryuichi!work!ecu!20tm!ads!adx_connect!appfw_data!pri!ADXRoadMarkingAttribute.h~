#ifndef DATA_DEFINITION_ADXROADMARKINGATTRIBUTE_H
#define DATA_DEFINITION_ADXROADMARKINGATTRIBUTE_H

#include "RoadMarkingDirection.h"
#include "RoadMarkingSpeedLimitStatus.h"
#include "appfw.h"
#include "system_constants.h"
#include <stddef.h>

#define ADXROADMARKINGATTRIBUTE_DATAINFO                                       \
  "{\"name\": \"ADXRoadMarkingAttribute\", \"description\": "                  \
  "\"\u8def\u9762\u6a19\u793a\u610f\u5473\", \"members\": [{\"name\": "        \
  "\"road_marking_meanings\", \"type\": \"uint8_t\", \"description\": "        \
  "\"\u8def\u9762\u6a19\u793a\u7a2e\u985e\", \"min\": 0, \"max\": 255, "       \
  "\"ignore_naming_rule\": true}, {\"name\": \"rm_speed_limit_status\", "      \
  "\"type\": " ROADMARKINGSPEEDLIMITSTATUS_DATAINFO                            \
  ", \"description\": \"\u5236\u9650\u901f\u5ea6\u60c5\u5831\", "              \
  "\"ignore_naming_rule\": true}, {\"name\": \"rm_direction\", "               \
  "\"type\": " ROADMARKINGDIRECTION_DATAINFO                                   \
  ", \"description\": "                                                        \
  "\"\u901a\u884c\u65b9\u5411\u5225\u901a\u884c\u533a\u5206\u6a19\u8b58\", "   \
  "\"ignore_naming_rule\": true}], \"ignore_naming_rule\": true, \"ads\": "    \
  "false, \"name_snake_case\": \"adx_road_marking_attribute\"}"

#ifdef __cplusplus
extern "C" {
#endif

// ADXRoadMarkingAttribute.hで定義されている型をシリアライズした時のバイト数
#define ADXROADMARKINGATTRIBUTE_SERIALIZED_SIZE                                \
  (1 + ROADMARKINGSPEEDLIMITSTATUS_SERIALIZED_SIZE +                           \
   ROADMARKINGDIRECTION_SERIALIZED_SIZE)

// 定数の定義
#define ADX_ROAD_MARKING_ATTRIBUTE_ROAD_MARKING_MEANINGS_MIN ((uint8_t)0)
#define ADX_ROAD_MARKING_ATTRIBUTE_ROAD_MARKING_MEANINGS_MAX ((uint8_t)255)

/* 路面標示意味 */
typedef struct {
  uint8_t road_marking_meanings;                     /* 路面標示種類 */
  RoadMarkingSpeedLimitStatus rm_speed_limit_status; /* 制限速度情報 */
  RoadMarkingDirection rm_direction; /* 通行方向別通行区分標識 */
} ADXRoadMarkingAttribute;

size_t SerializeADXRoadMarkingAttribute(void *buffer,
                                        ADXRoadMarkingAttribute *data,
                                        size_t max_buffer_size);
size_t SerializeADXRoadMarkingAttributeAutoRelease(void *buffer, void *data,
                                                   size_t max_buffer_size);
size_t DeserializeADXRoadMarkingAttribute(ADXRoadMarkingAttribute *data,
                                          void *buffer);
bool IsEqualADXRoadMarkingAttribute(ADXRoadMarkingAttribute *data1,
                                    ADXRoadMarkingAttribute *data2);
void InitializeADXRoadMarkingAttribute(ADXRoadMarkingAttribute *data);
void InitializeDefaultOnlyADXRoadMarkingAttribute(
    ADXRoadMarkingAttribute *data);

#ifdef __cplusplus
}
#endif

#endif // DATA_DEFINITION_ADXROADMARKINGATTRIBUTE_H
