#ifndef DATA_DEFINITION_ADX_TRAFFICLIGHTDATA_H
#define DATA_DEFINITION_ADX_TRAFFICLIGHTDATA_H

#include "CarState.h"
#include "TrafficLightStatus.h"
#include "appfw.h"
#include "system_constants.h"
#include <stddef.h>

#define ADX_TRAFFICLIGHTDATA_DATAINFO                                          \
  "{\"name\": \"ADX_TrafficLightData\", \"description\": "                     \
  "\"\u4fe1\u53f7\u60c5\u5831\", \"members\": [{\"name\": "                    \
  "\"adx_traffic_signal_car_state\", \"type\": " CARSTATE_DATAINFO             \
  ", \"description\": \"\u81ea\u8eca\u4f4d\u7f6e\u60c5\u5831\", "              \
  "\"ignore_naming_rule\": true}, {\"name\": \"number_of_traffic_lights\", "   \
  "\"type\": \"uint8_t\", \"unit\": \"\u500b\", \"description\": "             \
  "\"\u8a8d\u8b58\u500b\u6570\", \"min\": 0, \"max\": 8, "                     \
  "\"ignore_naming_rule\": true}, {\"name\": \"adx_traffic_light_status\", "   \
  "\"type\": " TRAFFICLIGHTSTATUS_DATAINFO                                     \
  ", \"dimension\": [32], \"description\": \"\u4fe1\u53f7\u60c5\u5831\", "     \
  "\"ignore_naming_rule\": true}], \"ignore_naming_rule\": true, \"ads\": "    \
  "false, \"name_snake_case\": \"adx_traffic_light_data\"}"

#ifdef __cplusplus
extern "C" {
#endif

// ADX_TrafficLightData.hで定義されている型をシリアライズした時のバイト数
#define ADX_TRAFFICLIGHTDATA_SERIALIZED_SIZE                                   \
  (CARSTATE_SERIALIZED_SIZE + 1 + TRAFFICLIGHTSTATUS_SERIALIZED_SIZE * (32))

// 定数の定義
#define ADX_TRAFFIC_LIGHT_DATA_NUMBER_OF_TRAFFIC_LIGHTS_MIN ((uint8_t)0)
#define ADX_TRAFFIC_LIGHT_DATA_NUMBER_OF_TRAFFIC_LIGHTS_MAX ((uint8_t)8)
#define ADX_TRAFFIC_LIGHT_DATA_ADX_TRAFFIC_LIGHT_STATUS_DIM1 ((size_t)32)

/* 信号情報 */
typedef struct {
  CarState adx_traffic_signal_car_state;           /* 自車位置情報 */
  uint8_t number_of_traffic_lights;                /* 認識個数 */
  TrafficLightStatus adx_traffic_light_status[32]; /* 信号情報 */
} ADX_TrafficLightData;

size_t SerializeADX_TrafficLightData(void *buffer, ADX_TrafficLightData *data,
                                     size_t max_buffer_size);
size_t SerializeADX_TrafficLightDataAutoRelease(void *buffer, void *data,
                                                size_t max_buffer_size);
size_t DeserializeADX_TrafficLightData(ADX_TrafficLightData *data,
                                       void *buffer);
bool IsEqualADX_TrafficLightData(ADX_TrafficLightData *data1,
                                 ADX_TrafficLightData *data2);
void InitializeADX_TrafficLightData(ADX_TrafficLightData *data);
void InitializeDefaultOnlyADX_TrafficLightData(ADX_TrafficLightData *data);

#ifdef __cplusplus
}
#endif

#endif // DATA_DEFINITION_ADX_TRAFFICLIGHTDATA_H
