#ifndef DATA_DEFINITION_ADX_TPCMSTATE_H
#define DATA_DEFINITION_ADX_TPCMSTATE_H

#include "ADX_LaneRecognitionUnstable.h"
#include "ADX_ObjectRecognitionFailure.h"
#include "CarState.h"
#include "appfw.h"
#include "system_constants.h"
#include <stddef.h>

#define ADX_TPCMSTATE_DATAINFO                                                 \
  "{\"name\": \"ADX_TpcmState\", \"description\": "                            \
  "\"\u30ab\u30e1\u30e9\u72b6\u614b\u60c5\u5831 (\u671b\u9060)\", "            \
  "\"members\": [{\"name\": \"adx_tpcm_car_state\", "                          \
  "\"type\": " CARSTATE_DATAINFO                                               \
  ", \"description\": \"\u81ea\u8eca\u4f4d\u7f6e\u60c5\u5831\", "              \
  "\"ignore_naming_rule\": true}, {\"name\": "                                 \
  "\"adx_tpcm_hardware_failure_type\", \"type\": \"uint32_t\", "               \
  "\"description\": "                                                          \
  "\"ADX\u671b\u9060\u30ab\u30e1\u30e9\u30cf\u30fc\u30c9\u6545\u969c\u5206"    \
  "\u985e\", \"min\": 1, \"max\": 4294967295, \"default\": \"0\", "            \
  "\"ignore_naming_rule\": true}, {\"name\": \"adx_tpcm_failure_flag\", "      \
  "\"type\": \"uint32_t\", \"description\": "                                  \
  "\"ADX\u671b\u9060\u30ab\u30e1\u30e9\u6545\u969c\u30d5\u30e9\u30b0\", "      \
  "\"min\": 1, \"max\": 4294967295, \"default\": \"0\", "                      \
  "\"ignore_naming_rule\": true}, {\"name\": \"adx_tpcm_unstable_flag\", "     \
  "\"type\": \"uint32_t\", \"description\": "                                  \
  "\"ADX\u671b\u9060\u30ab\u30e1\u30e9\u4e0d\u8abf\u30d5\u30e9\u30b0\", "      \
  "\"min\": 1, \"max\": 4294967295, \"default\": \"0\", "                      \
  "\"ignore_naming_rule\": true}, {\"name\": \"adx_tpcm_object_failure\", "    \
  "\"type\": " ADX_OBJECTRECOGNITIONFAILURE_DATAINFO                           \
  ", \"description\": "                                                        \
  "\"ADX\u671b\u9060\u30ab\u30e1\u30e9\u7269\u6a19\u8a8d\u8b58\u4e0d\u8abf"    \
  "\u8981\u56e0\", \"ignore_naming_rule\": true}, {\"name\": "                 \
  "\"adx_tpcm_lane_unstable\", "                                               \
  "\"type\": " ADX_LANERECOGNITIONUNSTABLE_DATAINFO                            \
  ", \"description\": "                                                        \
  "\"ADX\u671b\u9060\u30ab\u30e1\u30e9\u30ec\u30fc\u30f3\u8a8d\u8b58\u4e0d"    \
  "\u8abf\u8981\u56e0\", \"ignore_naming_rule\": true}], "                     \
  "\"ignore_naming_rule\": true, \"ads\": false, \"name_snake_case\": "        \
  "\"adx_tpcm_state\"}"

#ifdef __cplusplus
extern "C" {
#endif

// ADX_TpcmState.hで定義されている型をシリアライズした時のバイト数
#define ADX_TPCMSTATE_SERIALIZED_SIZE                                          \
  (CARSTATE_SERIALIZED_SIZE + 4 + 4 + 4 +                                      \
   ADX_OBJECTRECOGNITIONFAILURE_SERIALIZED_SIZE +                              \
   ADX_LANERECOGNITIONUNSTABLE_SERIALIZED_SIZE)

// 定数の定義
#define ADX_TPCM_STATE_ADX_TPCM_HARDWARE_FAILURE_TYPE_MIN ((uint32_t)1)
#define ADX_TPCM_STATE_ADX_TPCM_HARDWARE_FAILURE_TYPE_MAX ((uint32_t)4294967295)
#define ADX_TPCM_STATE_ADX_TPCM_FAILURE_FLAG_MIN ((uint32_t)1)
#define ADX_TPCM_STATE_ADX_TPCM_FAILURE_FLAG_MAX ((uint32_t)4294967295)
#define ADX_TPCM_STATE_ADX_TPCM_UNSTABLE_FLAG_MIN ((uint32_t)1)
#define ADX_TPCM_STATE_ADX_TPCM_UNSTABLE_FLAG_MAX ((uint32_t)4294967295)

/* カメラ状態情報 (望遠) */
typedef struct {
  CarState adx_tpcm_car_state;             /* 自車位置情報 */
  uint32_t adx_tpcm_hardware_failure_type; /* ADX望遠カメラハード故障分類 */
  uint32_t adx_tpcm_failure_flag;  /* ADX望遠カメラ故障フラグ */
  uint32_t adx_tpcm_unstable_flag; /* ADX望遠カメラ不調フラグ */
  ADX_ObjectRecognitionFailure
      adx_tpcm_object_failure; /* ADX望遠カメラ物標認識不調要因 */
  ADX_LaneRecognitionUnstable
      adx_tpcm_lane_unstable; /* ADX望遠カメラレーン認識不調要因 */
} ADX_TpcmState;

size_t SerializeADX_TpcmState(void *buffer, ADX_TpcmState *data,
                              size_t max_buffer_size);
size_t SerializeADX_TpcmStateAutoRelease(void *buffer, void *data,
                                         size_t max_buffer_size);
size_t DeserializeADX_TpcmState(ADX_TpcmState *data, void *buffer);
bool IsEqualADX_TpcmState(ADX_TpcmState *data1, ADX_TpcmState *data2);
void InitializeADX_TpcmState(ADX_TpcmState *data);
void InitializeDefaultOnlyADX_TpcmState(ADX_TpcmState *data);

#ifdef __cplusplus
}
#endif

#endif // DATA_DEFINITION_ADX_TPCMSTATE_H
