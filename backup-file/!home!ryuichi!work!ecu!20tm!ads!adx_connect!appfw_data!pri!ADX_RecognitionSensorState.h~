#ifndef DATA_DEFINITION_ADX_RECOGNITIONSENSORSTATE_H
#define DATA_DEFINITION_ADX_RECOGNITIONSENSORSTATE_H

#include "ADX_FR_SensorStatus.h"
#include "ADX_FR_SensorStatus.h"
#include "ADX_IncmState.h"
#include "ADX_LR_SensorStatus.h"
#include "ADX_LR_SensorStatus.h"
#include "ADX_LcmState.h"
#include "ADX_TpcmState.h"
#include "appfw.h"
#include "system_constants.h"
#include <stddef.h>

#define ADX_RECOGNITIONSENSORSTATE_DATAINFO                                    \
  "{\"name\": \"ADX_RecognitionSensorState\", \"description\": "               \
  "\"ADX\u8a8d\u8b58\u30bb\u30f3\u30b5\u72b6\u614b\u60c5\u5831\", "            \
  "\"members\": [{\"name\": \"adx_lcm_status\", "                              \
  "\"type\": " ADX_LCMSTATE_DATAINFO                                           \
  ", \"description\": \"\u30ab\u30e1\u30e9\u72b6\u614b\u60c5\u5831 "           \
  "(\u30ed\u30b1\u30ab\u30e1)\", \"ignore_naming_rule\": true}, {\"name\": "   \
  "\"adx_tpcm_status\", \"type\": " ADX_TPCMSTATE_DATAINFO                     \
  ", \"description\": \"\u30ab\u30e1\u30e9\u72b6\u614b\u60c5\u5831 "           \
  "(\u671b\u9060)\", \"ignore_naming_rule\": true}, {\"name\": "               \
  "\"adx_incm_status\", \"type\": " ADX_INCMSTATE_DATAINFO                     \
  ", \"description\": \"\u30ab\u30e1\u30e9\u72b6\u614b\u60c5\u5831 "           \
  "(\u96fb\u5b50\u30a4\u30f3\u30ca\u30fc)\", \"ignore_naming_rule\": true}, "  \
  "{\"name\": \"adx_fr_sensor_status\", "                                      \
  "\"type\": " ADX_FR_SENSORSTATUS_DATAINFO                                    \
  ", \"description\": "                                                        \
  "\"\u524d\u65b9\u30bb\u30f3\u30b5\u72b6\u614b\u60c5\u5831 (Fr-LiDAR)\", "    \
  "\"ignore_naming_rule\": true}, {\"name\": \"adx_lt_sensor_status\", "       \
  "\"type\": " ADX_LR_SENSORSTATUS_DATAINFO                                    \
  ", \"description\": "                                                        \
  "\"\u5de6\u65b9\u30bb\u30f3\u30b5\u72b6\u614b\u60c5\u5831 (Lt-LiDAR)\", "    \
  "\"ignore_naming_rule\": true}, {\"name\": \"adx_rt_sensor_status\", "       \
  "\"type\": " ADX_LR_SENSORSTATUS_DATAINFO                                    \
  ", \"description\": "                                                        \
  "\"\u53f3\u65b9\u30bb\u30f3\u30b5\u72b6\u614b\u60c5\u5831 (Rt-LiDAR)\", "    \
  "\"ignore_naming_rule\": true}, {\"name\": \"adx_rr_sensor_status\", "       \
  "\"type\": " ADX_FR_SENSORSTATUS_DATAINFO                                    \
  ", \"description\": "                                                        \
  "\"\u5f8c\u65b9\u30bb\u30f3\u30b5\u72b6\u614b\u60c5\u5831 (Rr-LiDAR)\", "    \
  "\"ignore_naming_rule\": true}], \"ignore_naming_rule\": true, \"ads\": "    \
  "false, \"name_snake_case\": \"adx_recognition_sensor_state\"}"

#ifdef __cplusplus
extern "C" {
#endif

// ADX_RecognitionSensorState.hで定義されている型をシリアライズした時のバイト数
#define ADX_RECOGNITIONSENSORSTATE_SERIALIZED_SIZE                             \
  (ADX_LCMSTATE_SERIALIZED_SIZE + ADX_TPCMSTATE_SERIALIZED_SIZE +              \
   ADX_INCMSTATE_SERIALIZED_SIZE + ADX_FR_SENSORSTATUS_SERIALIZED_SIZE +       \
   ADX_LR_SENSORSTATUS_SERIALIZED_SIZE + ADX_LR_SENSORSTATUS_SERIALIZED_SIZE + \
   ADX_FR_SENSORSTATUS_SERIALIZED_SIZE)

// 定数の定義

/* ADX認識センサ状態情報 */
typedef struct {
  ADX_LcmState adx_lcm_status;   /* カメラ状態情報 (ロケカメ) */
  ADX_TpcmState adx_tpcm_status; /* カメラ状態情報 (望遠) */
  ADX_IncmState adx_incm_status; /* カメラ状態情報 (電子インナー) */
  ADX_FR_SensorStatus adx_fr_sensor_status; /* 前方センサ状態情報 (Fr-LiDAR) */
  ADX_LR_SensorStatus adx_lt_sensor_status; /* 左方センサ状態情報 (Lt-LiDAR) */
  ADX_LR_SensorStatus adx_rt_sensor_status; /* 右方センサ状態情報 (Rt-LiDAR) */
  ADX_FR_SensorStatus adx_rr_sensor_status; /* 後方センサ状態情報 (Rr-LiDAR) */
} ADX_RecognitionSensorState;

size_t SerializeADX_RecognitionSensorState(void *buffer,
                                           ADX_RecognitionSensorState *data,
                                           size_t max_buffer_size);
size_t DeserializeADX_RecognitionSensorState(ADX_RecognitionSensorState *data,
                                             void *buffer);
size_t SerializeADX_RecognitionSensorStateAutoRelease(void *buffer, void *data,
                                                      size_t max_buffer_size);
size_t DeserializeADX_RecognitionSensorStateForDumper(void *data, void *buffer);
bool IsEqualADX_RecognitionSensorState(ADX_RecognitionSensorState *data1,
                                       ADX_RecognitionSensorState *data2);
void InitializeADX_RecognitionSensorState(ADX_RecognitionSensorState *data);
void InitializeDefaultOnlyADX_RecognitionSensorState(
    ADX_RecognitionSensorState *data);

#ifdef __cplusplus
}
#endif

#endif // DATA_DEFINITION_ADX_RECOGNITIONSENSORSTATE_H
