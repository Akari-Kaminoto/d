#ifndef DATA_DEFINITION_FRLIDARENTITYDATA_H
#define DATA_DEFINITION_FRLIDARENTITYDATA_H

#include "Position2D.h"
#include "Position2D.h"
#include "Size2D.h"
#include "Size2D.h"
#include "Velocity2D.h"
#include "Velocity2D.h"
#include "appfw.h"
#include "system_constants.h"
#include <stddef.h>

#define FRLIDARENTITYDATA_DATAINFO                                             \
  "{\"name\": \"FrLidarEntityData\", \"description\": "                        \
  "\"FrLiDAR\u7269\u6a19\", \"members\": [{\"name\": \"age\", \"type\": "      \
  "\"int32_t\", \"description\": "                                             \
  "\"\u7269\u6a19\u306e\u89b3\u6e2c\u56de\u6570\", \"min\": 0, \"max\": "      \
  "65535, \"ignore_naming_rule\": true}, {\"name\": \"bounding_box_flag\", "   \
  "\"type\": \"uint16_t\", \"description\": "                                  \
  "\"\u5916\u63a5\u77e9\u5f62\u30d5\u30e9\u30b0\", \"min\": 0, \"max\": "      \
  "65535, \"ignore_naming_rule\": true}, {\"name\": \"hidden_age\", "          \
  "\"type\": \"uint8_t\", \"description\": "                                   \
  "\"\u7269\u6a19\u304c\u30ed\u30b9\u30c8\u3057\u3066\u304b\u3089\u306e\u89b3" \
  "\u6e2c\u6642\u9593\", \"min\": 0, \"max\": 255, \"ignore_naming_rule\": "   \
  "true}, {\"name\": \"rect_box_center\", \"type\": " POSITION2D_DATAINFO      \
  ", \"description\": \"\u77e9\u5f62box\u306e\u4e2d\u5fc3\", "                 \
  "\"ignore_naming_rule\": true}, {\"name\": \"rect_box_size\", "              \
  "\"type\": " SIZE2D_DATAINFO                                                 \
  ", \"description\": \"\u77e9\u5f62box\u306e\u30b5\u30a4\u30ba\", "           \
  "\"ignore_naming_rule\": true}, {\"name\": \"bounding_box_center\", "        \
  "\"type\": " POSITION2D_DATAINFO                                             \
  ", \"description\": \"\u5916\u63a5\u77e9\u5f62box\u306e\u4e2d\u5fc3\", "     \
  "\"ignore_naming_rule\": true}, {\"name\": \"bounding_box_size\", "          \
  "\"type\": " SIZE2D_DATAINFO ", \"description\": "                           \
                               "\"\u5916\u63a5\u77e9\u5f62box\u306e\u30b5"     \
                               "\u30a4\u30ba\", \"ignore_naming_rule\": "      \
                               "true}, {\"name\": \"abs_velocity\", "          \
                               "\"type\": " VELOCITY2D_DATAINFO                \
  ", \"description\": \"\u7d76\u5bfe\u901f\u5ea6\", \"ignore_naming_rule\": "  \
  "true}, {\"name\": \"rel_velocity\", \"type\": " VELOCITY2D_DATAINFO         \
  ", \"description\": \"\u76f8\u5bfe\u901f\u5ea6\", \"ignore_naming_rule\": "  \
  "true}, {\"name\": \"object_flags\", \"type\": \"uint64_t\", "               \
  "\"description\": "                                                          \
  "\"\u7269\u6a19\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u60c5\u5831\", "         \
  "\"min\": 0, \"max\": 4294967295, \"ignore_naming_rule\": true}, "           \
  "{\"name\": \"layer\", \"type\": \"uint8_t\", \"dimension\": [6], "          \
  "\"description\": \"\u30ec\u30a4\u30e4\u30fc\u60c5\u5831\", \"min\": 0, "    \
  "\"max\": 255, \"ignore_naming_rule\": true}, {\"name\": "                   \
  "\"new_object_flag\", \"type\": \"uint8_t\", \"description\": "              \
  "\"\u65b0\u898f\u30d5\u30e9\u30b0\", \"min\": 0, \"max\": 1, "               \
  "\"ignore_naming_rule\": true}, {\"name\": \"tracking_flag\", \"type\": "    \
  "\"uint8_t\", \"description\": "                                             \
  "\"\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u30d5\u30e9\u30b0\", \"min\": 0, "   \
  "\"max\": 1, \"ignore_naming_rule\": true}, {\"name\": "                     \
  "\"moving_object_flag\", \"type\": \"uint8_t\", \"description\": "           \
  "\"\u79fb\u52d5\u7269\u30d5\u30e9\u30b0\", \"min\": 0, \"max\": 1, "         \
  "\"ignore_naming_rule\": true}, {\"name\": \"extrapolation_flag\", "         \
  "\"type\": \"uint8_t\", \"description\": "                                   \
  "\"\u5916\u633f\u30d5\u30e9\u30b0\", \"min\": 0, \"max\": 1, "               \
  "\"ignore_naming_rule\": true}, {\"name\": \"early_output_flag\", "          \
  "\"type\": \"uint8_t\", \"description\": "                                   \
  "\"\u65e9\u51fa\u3057\u30d5\u30e9\u30b0\", \"min\": 0, \"max\": 1, "         \
  "\"ignore_naming_rule\": true}, {\"name\": \"fov_edge_flag_right\", "        \
  "\"type\": \"uint8_t\", \"description\": "                                   \
  "\"\u53f3\u8996\u91ce\u7aef\u306b\u5b58\u5728\", \"min\": 0, \"max\": 1, "   \
  "\"ignore_naming_rule\": true}, {\"name\": \"fov_edge_flag_left\", "         \
  "\"type\": \"uint8_t\", \"description\": "                                   \
  "\"\u5de6\u8996\u91ce\u7aef\u306b\u5b58\u5728\", \"min\": 0, \"max\": 1, "   \
  "\"ignore_naming_rule\": true}, {\"name\": \"over_head_object_flag\", "      \
  "\"type\": \"uint8_t\", \"description\": "                                   \
  "\"\u4e0a\u65b9\u69cb\u9020\u7269\u30d5\u30e9\u30b0\", \"min\": 0, "         \
  "\"max\": 1, \"ignore_naming_rule\": true}, {\"name\": "                     \
  "\"road_side_object_flag\", \"type\": \"uint8_t\", \"description\": "        \
  "\"\u8def\u5074\u7269\u30d5\u30e9\u30b0\", \"min\": 0, \"max\": 1, "         \
  "\"ignore_naming_rule\": true}, {\"name\": \"split_object_flag\", "          \
  "\"type\": \"uint8_t\", \"description\": "                                   \
  "\"\u7269\u6a19\u5272\u308c\u30d5\u30e9\u30b0\", \"min\": 0, \"max\": 1, "   \
  "\"ignore_naming_rule\": true}, {\"name\": \"shape_chage_flag\", \"type\": " \
  "\"uint8_t\", \"description\": "                                             \
  "\"\u5f62\u72b6\u6025\u5909\u30d5\u30e9\u30b0\", \"min\": 0, \"max\": 1, "   \
  "\"ignore_naming_rule\": true}], \"ignore_naming_rule\": true, \"ads\": "    \
  "false, \"name_snake_case\": \"fr_lidar_entity_data\"}"

#ifdef __cplusplus
extern "C" {
#endif

// FrLidarEntityData.hで定義されている型をシリアライズした時のバイト数
#define FRLIDARENTITYDATA_SERIALIZED_SIZE                                      \
  (4 + 2 + 1 + POSITION2D_SERIALIZED_SIZE + SIZE2D_SERIALIZED_SIZE +           \
   POSITION2D_SERIALIZED_SIZE + SIZE2D_SERIALIZED_SIZE +                       \
   VELOCITY2D_SERIALIZED_SIZE + VELOCITY2D_SERIALIZED_SIZE + 8 + 1 * (6) + 1 + \
   1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1)

// 定数の定義
#define FR_LIDAR_ENTITY_DATA_AGE_MIN ((int32_t)0)
#define FR_LIDAR_ENTITY_DATA_AGE_MAX ((int32_t)65535)
#define FR_LIDAR_ENTITY_DATA_BOUNDING_BOX_FLAG_MIN ((uint16_t)0)
#define FR_LIDAR_ENTITY_DATA_BOUNDING_BOX_FLAG_MAX ((uint16_t)65535)
#define FR_LIDAR_ENTITY_DATA_HIDDEN_AGE_MIN ((uint8_t)0)
#define FR_LIDAR_ENTITY_DATA_HIDDEN_AGE_MAX ((uint8_t)255)
#define FR_LIDAR_ENTITY_DATA_OBJECT_FLAGS_MIN ((uint64_t)0)
#define FR_LIDAR_ENTITY_DATA_OBJECT_FLAGS_MAX ((uint64_t)4294967295)
#define FR_LIDAR_ENTITY_DATA_LAYER_MIN ((uint8_t)0)
#define FR_LIDAR_ENTITY_DATA_LAYER_MAX ((uint8_t)255)
#define FR_LIDAR_ENTITY_DATA_LAYER_DIM1 ((size_t)6)
#define FR_LIDAR_ENTITY_DATA_NEW_OBJECT_FLAG_MIN ((uint8_t)0)
#define FR_LIDAR_ENTITY_DATA_NEW_OBJECT_FLAG_MAX ((uint8_t)1)
#define FR_LIDAR_ENTITY_DATA_TRACKING_FLAG_MIN ((uint8_t)0)
#define FR_LIDAR_ENTITY_DATA_TRACKING_FLAG_MAX ((uint8_t)1)
#define FR_LIDAR_ENTITY_DATA_MOVING_OBJECT_FLAG_MIN ((uint8_t)0)
#define FR_LIDAR_ENTITY_DATA_MOVING_OBJECT_FLAG_MAX ((uint8_t)1)
#define FR_LIDAR_ENTITY_DATA_EXTRAPOLATION_FLAG_MIN ((uint8_t)0)
#define FR_LIDAR_ENTITY_DATA_EXTRAPOLATION_FLAG_MAX ((uint8_t)1)
#define FR_LIDAR_ENTITY_DATA_EARLY_OUTPUT_FLAG_MIN ((uint8_t)0)
#define FR_LIDAR_ENTITY_DATA_EARLY_OUTPUT_FLAG_MAX ((uint8_t)1)
#define FR_LIDAR_ENTITY_DATA_FOV_EDGE_FLAG_RIGHT_MIN ((uint8_t)0)
#define FR_LIDAR_ENTITY_DATA_FOV_EDGE_FLAG_RIGHT_MAX ((uint8_t)1)
#define FR_LIDAR_ENTITY_DATA_FOV_EDGE_FLAG_LEFT_MIN ((uint8_t)0)
#define FR_LIDAR_ENTITY_DATA_FOV_EDGE_FLAG_LEFT_MAX ((uint8_t)1)
#define FR_LIDAR_ENTITY_DATA_OVER_HEAD_OBJECT_FLAG_MIN ((uint8_t)0)
#define FR_LIDAR_ENTITY_DATA_OVER_HEAD_OBJECT_FLAG_MAX ((uint8_t)1)
#define FR_LIDAR_ENTITY_DATA_ROAD_SIDE_OBJECT_FLAG_MIN ((uint8_t)0)
#define FR_LIDAR_ENTITY_DATA_ROAD_SIDE_OBJECT_FLAG_MAX ((uint8_t)1)
#define FR_LIDAR_ENTITY_DATA_SPLIT_OBJECT_FLAG_MIN ((uint8_t)0)
#define FR_LIDAR_ENTITY_DATA_SPLIT_OBJECT_FLAG_MAX ((uint8_t)1)
#define FR_LIDAR_ENTITY_DATA_SHAPE_CHAGE_FLAG_MIN ((uint8_t)0)
#define FR_LIDAR_ENTITY_DATA_SHAPE_CHAGE_FLAG_MAX ((uint8_t)1)

/* FrLiDAR物標 */
typedef struct {
  int32_t age;                /* 物標の観測回数 */
  uint16_t bounding_box_flag; /* 外接矩形フラグ */
  uint8_t hidden_age; /* 物標がロストしてからの観測時間 */
  Position2D rect_box_center;     /* 矩形boxの中心 */
  Size2D rect_box_size;           /* 矩形boxのサイズ */
  Position2D bounding_box_center; /* 外接矩形boxの中心 */
  Size2D bounding_box_size;       /* 外接矩形boxのサイズ */
  Velocity2D abs_velocity;        /* 絶対速度 */
  Velocity2D rel_velocity;        /* 相対速度 */
  uint64_t object_flags;          /* 物標のステータス情報 */
  uint8_t layer[6];               /* レイヤー情報 */
  uint8_t new_object_flag;        /* 新規フラグ */
  uint8_t tracking_flag;          /* トラッキングフラグ */
  uint8_t moving_object_flag;     /* 移動物フラグ */
  uint8_t extrapolation_flag;     /* 外挿フラグ */
  uint8_t early_output_flag;      /* 早出しフラグ */
  uint8_t fov_edge_flag_right;    /* 右視野端に存在 */
  uint8_t fov_edge_flag_left;     /* 左視野端に存在 */
  uint8_t over_head_object_flag;  /* 上方構造物フラグ */
  uint8_t road_side_object_flag;  /* 路側物フラグ */
  uint8_t split_object_flag;      /* 物標割れフラグ */
  uint8_t shape_chage_flag;       /* 形状急変フラグ */
} FrLidarEntityData;

size_t SerializeFrLidarEntityData(void *buffer, FrLidarEntityData *data,
                                  size_t max_buffer_size);
size_t SerializeFrLidarEntityDataAutoRelease(void *buffer, void *data,
                                             size_t max_buffer_size);
size_t DeserializeFrLidarEntityData(FrLidarEntityData *data, void *buffer);
bool IsEqualFrLidarEntityData(FrLidarEntityData *data1,
                              FrLidarEntityData *data2);
void InitializeFrLidarEntityData(FrLidarEntityData *data);
void InitializeDefaultOnlyFrLidarEntityData(FrLidarEntityData *data);

#ifdef __cplusplus
}
#endif

#endif // DATA_DEFINITION_FRLIDARENTITYDATA_H
