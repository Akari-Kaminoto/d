/****************************************************************************/
/* ファイル名	: appfw_recv_func.c                                           */
/*--------------------------------------------------------------------------*/
/* モジュール名	: appfw_recv                                                */
/*--------------------------------------------------------------------------*/
/* 機能			: 機能呼び出し                                                  */
/*--------------------------------------------------------------------------*/
/* 備考			:                                                               */
/*--------------------------------------------------------------------------*/
/****************************************************************************/
/*	  Include                                                               */
/****************************************************************************/
#undef __STRICT_ANSI__
#include <arpa/inet.h>
#include <errno.h>
#include <fcntl.h>
#include <inttypes.h>
#include <netinet/in.h>
#include <poll.h>
#include <sils/common/type_sils.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/select.h>
#include <sys/socket.h>
#include <unistd.h>

#include <dif/common/dif_struct_common.h>
#include <sils/mng/schdl_config.h>
#include "../../appfw_data/pub/appfw_data.h"
#include "../pub/appfw_recv_func.h"

/**DIF_FUNC_HEADER_INCLUDE_LIST_START**/
#include <sils/dif/adxcon_recv_01/dif_funclv_dif_adxcon_recv_01.h>
#include <sils/dif/adxcon_recv_02/dif_funclv_dif_adxcon_recv_02.h>
#include <sils/dif/adxcon_recv_03/dif_funclv_dif_adxcon_recv_03.h>
#include <sils/dif/adxcon_recv_04/dif_funclv_dif_adxcon_recv_04.h>
#include <sils/dif/adxcon_recv_05/dif_funclv_dif_adxcon_recv_05.h>
#include <sils/dif/adxcon_recv_06/dif_funclv_dif_adxcon_recv_06.h>
#include <sils/dif/adxcon_recv_07/dif_funclv_dif_adxcon_recv_07.h>
#include <sils/dif/adxcon_recv_08/dif_funclv_dif_adxcon_recv_08.h>
#include <sils/dif/adxcon_recv_09/dif_funclv_dif_adxcon_recv_09.h>
#include <sils/dif/adxcon_recv_10/dif_funclv_dif_adxcon_recv_10.h>
#include <sils/dif/adxcon_recv_11/dif_funclv_dif_adxcon_recv_11.h>
#include <sils/dif/adxcon_recv_12/dif_funclv_dif_adxcon_recv_12.h>
#include <sils/dif/adxcon_recv_13/dif_funclv_dif_adxcon_recv_13.h>
#include <sils/dif/adxcon_recv_14/dif_funclv_dif_adxcon_recv_14.h>
#include <sils/dif/adxcon_recv_15/dif_funclv_dif_adxcon_recv_15.h>
#include <sils/dif/adxcon_recv_16/dif_funclv_dif_adxcon_recv_16.h>
#include <sils/dif/adxcon_recv_17/dif_funclv_dif_adxcon_recv_17.h>
#include <sils/dif/adxcon_recv_18/dif_funclv_dif_adxcon_recv_18.h>
#include <sils/dif/adxcon_recv_19/dif_funclv_dif_adxcon_recv_19.h>
#include <sils/dif/adxcon_recv_20/dif_funclv_dif_adxcon_recv_20.h>
#include <sils/dif/adxcon_recv_21/dif_funclv_dif_adxcon_recv_21.h>
#include <sils/dif/adxcon_recv_22/dif_funclv_dif_adxcon_recv_22.h>
#include <sils/dif/adxcon_recv_23/dif_funclv_dif_adxcon_recv_23.h>
#include <sils/dif/adxcon_recv_24/dif_funclv_dif_adxcon_recv_24.h>
#include <sils/dif/adxcon_recv_25/dif_funclv_dif_adxcon_recv_25.h>
#include <sils/dif/adxcon_recv_26/dif_funclv_dif_adxcon_recv_26.h>
#include <sils/dif/adxcon_recv_27/dif_funclv_dif_adxcon_recv_27.h>
#include <sils/dif/adxcon_recv_28/dif_funclv_dif_adxcon_recv_28.h>
#include <sils/dif/adxcon_recv_29/dif_funclv_dif_adxcon_recv_29.h>
#include <sils/dif/adxcon_recv_30/dif_funclv_dif_adxcon_recv_30.h>
#include <sils/dif/adxcon_recv_31/dif_funclv_dif_adxcon_recv_31.h>
#include <sils/dif/adxcon_recv_32/dif_funclv_dif_adxcon_recv_32.h>
#include <sils/dif/adxcon_recv_33/dif_funclv_dif_adxcon_recv_33.h>
#include <sils/dif/adxcon_recv_34/dif_funclv_dif_adxcon_recv_34.h>
#include <sils/dif/adxcon_recv_35/dif_funclv_dif_adxcon_recv_35.h>
#include <sils/dif/adxcon_recv_36/dif_funclv_dif_adxcon_recv_36.h>
#include <sils/dif/adxcon_recv_37/dif_funclv_dif_adxcon_recv_37.h>
#include <sils/dif/adxcon_recv_38/dif_funclv_dif_adxcon_recv_38.h>
#include <sils/dif/adxcon_recv_39/dif_funclv_dif_adxcon_recv_39.h>
#include <sils/dif/adxcon_recv_40/dif_funclv_dif_adxcon_recv_40.h>
#include <sils/dif/adxcon_recv_41/dif_funclv_dif_adxcon_recv_41.h>
#include <sils/dif/adxcon_recv_42/dif_funclv_dif_adxcon_recv_42.h>
#include <sils/dif/adxcon_recv_43/dif_funclv_dif_adxcon_recv_43.h>
#include <sils/dif/adxcon_recv_44/dif_funclv_dif_adxcon_recv_44.h>
#include <sils/dif/adxcon_recv_45/dif_funclv_dif_adxcon_recv_45.h>
#include <sils/dif/adxcon_recv_46/dif_funclv_dif_adxcon_recv_46.h>
#include <sils/dif/adxcon_recv_47/dif_funclv_dif_adxcon_recv_47.h>
/**DIF_FUNC_HEADER_INCLUDE_LIST_END**/

/**DIF_RAM_HEADER_INCLUDE_LIST_START**/
#include <sils/dif/adxcon_recv_01/dif_global_ram_adxcon_recv_01.h>
#include <sils/dif/adxcon_recv_02/dif_global_ram_adxcon_recv_02.h>
#include <sils/dif/adxcon_recv_03/dif_global_ram_adxcon_recv_03.h>
#include <sils/dif/adxcon_recv_04/dif_global_ram_adxcon_recv_04.h>
#include <sils/dif/adxcon_recv_05/dif_global_ram_adxcon_recv_05.h>
#include <sils/dif/adxcon_recv_06/dif_global_ram_adxcon_recv_06.h>
#include <sils/dif/adxcon_recv_07/dif_global_ram_adxcon_recv_07.h>
#include <sils/dif/adxcon_recv_08/dif_global_ram_adxcon_recv_08.h>
#include <sils/dif/adxcon_recv_09/dif_global_ram_adxcon_recv_09.h>
#include <sils/dif/adxcon_recv_10/dif_global_ram_adxcon_recv_10.h>
#include <sils/dif/adxcon_recv_11/dif_global_ram_adxcon_recv_11.h>
#include <sils/dif/adxcon_recv_12/dif_global_ram_adxcon_recv_12.h>
#include <sils/dif/adxcon_recv_13/dif_global_ram_adxcon_recv_13.h>
#include <sils/dif/adxcon_recv_14/dif_global_ram_adxcon_recv_14.h>
#include <sils/dif/adxcon_recv_15/dif_global_ram_adxcon_recv_15.h>
#include <sils/dif/adxcon_recv_16/dif_global_ram_adxcon_recv_16.h>
#include <sils/dif/adxcon_recv_17/dif_global_ram_adxcon_recv_17.h>
#include <sils/dif/adxcon_recv_18/dif_global_ram_adxcon_recv_18.h>
#include <sils/dif/adxcon_recv_19/dif_global_ram_adxcon_recv_19.h>
#include <sils/dif/adxcon_recv_20/dif_global_ram_adxcon_recv_20.h>
#include <sils/dif/adxcon_recv_21/dif_global_ram_adxcon_recv_21.h>
#include <sils/dif/adxcon_recv_22/dif_global_ram_adxcon_recv_22.h>
#include <sils/dif/adxcon_recv_23/dif_global_ram_adxcon_recv_23.h>
#include <sils/dif/adxcon_recv_24/dif_global_ram_adxcon_recv_24.h>
#include <sils/dif/adxcon_recv_25/dif_global_ram_adxcon_recv_25.h>
#include <sils/dif/adxcon_recv_26/dif_global_ram_adxcon_recv_26.h>
#include <sils/dif/adxcon_recv_27/dif_global_ram_adxcon_recv_27.h>
#include <sils/dif/adxcon_recv_28/dif_global_ram_adxcon_recv_28.h>
#include <sils/dif/adxcon_recv_29/dif_global_ram_adxcon_recv_29.h>
#include <sils/dif/adxcon_recv_30/dif_global_ram_adxcon_recv_30.h>
#include <sils/dif/adxcon_recv_31/dif_global_ram_adxcon_recv_31.h>
#include <sils/dif/adxcon_recv_32/dif_global_ram_adxcon_recv_32.h>
#include <sils/dif/adxcon_recv_33/dif_global_ram_adxcon_recv_33.h>
#include <sils/dif/adxcon_recv_34/dif_global_ram_adxcon_recv_34.h>
#include <sils/dif/adxcon_recv_35/dif_global_ram_adxcon_recv_35.h>
#include <sils/dif/adxcon_recv_36/dif_global_ram_adxcon_recv_36.h>
#include <sils/dif/adxcon_recv_37/dif_global_ram_adxcon_recv_37.h>
#include <sils/dif/adxcon_recv_38/dif_global_ram_adxcon_recv_38.h>
#include <sils/dif/adxcon_recv_39/dif_global_ram_adxcon_recv_39.h>
#include <sils/dif/adxcon_recv_40/dif_global_ram_adxcon_recv_40.h>
#include <sils/dif/adxcon_recv_41/dif_global_ram_adxcon_recv_41.h>
#include <sils/dif/adxcon_recv_42/dif_global_ram_adxcon_recv_42.h>
#include <sils/dif/adxcon_recv_43/dif_global_ram_adxcon_recv_43.h>
#include <sils/dif/adxcon_recv_44/dif_global_ram_adxcon_recv_44.h>
#include <sils/dif/adxcon_recv_45/dif_global_ram_adxcon_recv_45.h>
#include <sils/dif/adxcon_recv_46/dif_global_ram_adxcon_recv_46.h>
#include <sils/dif/adxcon_recv_47/dif_global_ram_adxcon_recv_47.h>
#include <sils/dif/adxcon_test_recv_01/dif_global_ram_adxcon_test_recv_01.h>
#include <sils/dif/adxcon_test_recv_02/dif_global_ram_adxcon_test_recv_02.h>
#include <sils/dif/adxcon_test_recv_03/dif_global_ram_adxcon_test_recv_03.h>
#include <sils/dif/adxcon_test_recv_04/dif_global_ram_adxcon_test_recv_04.h>
#include <sils/dif/adxcon_test_recv_05/dif_global_ram_adxcon_test_recv_05.h>
#include <sils/dif/adxcon_test_recv_06/dif_global_ram_adxcon_test_recv_06.h>
#include <sils/dif/adxcon_test_recv_07/dif_global_ram_adxcon_test_recv_07.h>
#include <sils/dif/adxcon_test_recv_08/dif_global_ram_adxcon_test_recv_08.h>
#include <sils/dif/adxcon_test_recv_09/dif_global_ram_adxcon_test_recv_09.h>
#include <sils/dif/adxcon_test_recv_10/dif_global_ram_adxcon_test_recv_10.h>
#include <sils/dif/adxcon_test_recv_11/dif_global_ram_adxcon_test_recv_11.h>
#include <sils/dif/adxcon_test_recv_12/dif_global_ram_adxcon_test_recv_12.h>
#include <sils/dif/adxcon_test_recv_13/dif_global_ram_adxcon_test_recv_13.h>
#include <sils/dif/adxcon_test_recv_14/dif_global_ram_adxcon_test_recv_14.h>
#include <sils/dif/adxcon_test_recv_15/dif_global_ram_adxcon_test_recv_15.h>
#include <sils/dif/adxcon_test_recv_16/dif_global_ram_adxcon_test_recv_16.h>
#include <sils/dif/adxcon_test_recv_17/dif_global_ram_adxcon_test_recv_17.h>
#include <sils/dif/adxcon_test_recv_18/dif_global_ram_adxcon_test_recv_18.h>
#include <sils/dif/adxcon_test_recv_19/dif_global_ram_adxcon_test_recv_19.h>
#include <sils/dif/adxcon_test_recv_20/dif_global_ram_adxcon_test_recv_20.h>
#include <sils/dif/adxcon_test_recv_21/dif_global_ram_adxcon_test_recv_21.h>
#include <sils/dif/adxcon_test_recv_22/dif_global_ram_adxcon_test_recv_22.h>
#include <sils/dif/adxcon_test_recv_23/dif_global_ram_adxcon_test_recv_23.h>
#include <sils/dif/adxcon_test_recv_24/dif_global_ram_adxcon_test_recv_24.h>
#include <sils/dif/adxcon_test_recv_25/dif_global_ram_adxcon_test_recv_25.h>
#include <sils/dif/adxcon_test_recv_26/dif_global_ram_adxcon_test_recv_26.h>
#include <sils/dif/adxcon_test_recv_27/dif_global_ram_adxcon_test_recv_27.h>
#include <sils/dif/adxcon_test_recv_28/dif_global_ram_adxcon_test_recv_28.h>
#include <sils/dif/adxcon_test_recv_29/dif_global_ram_adxcon_test_recv_29.h>
#include <sils/dif/adxcon_test_recv_30/dif_global_ram_adxcon_test_recv_30.h>
#include <sils/dif/adxcon_test_recv_31/dif_global_ram_adxcon_test_recv_31.h>
#include <sils/dif/adxcon_test_recv_32/dif_global_ram_adxcon_test_recv_32.h>
#include <sils/dif/adxcon_test_recv_33/dif_global_ram_adxcon_test_recv_33.h>
#include <sils/dif/adxcon_test_recv_34/dif_global_ram_adxcon_test_recv_34.h>
#include <sils/dif/adxcon_test_recv_35/dif_global_ram_adxcon_test_recv_35.h>
#include <sils/dif/adxcon_test_recv_36/dif_global_ram_adxcon_test_recv_36.h>
#include <sils/dif/adxcon_test_recv_37/dif_global_ram_adxcon_test_recv_37.h>
#include <sils/dif/adxcon_test_recv_38/dif_global_ram_adxcon_test_recv_38.h>
#include <sils/dif/adxcon_test_recv_39/dif_global_ram_adxcon_test_recv_39.h>
#include <sils/dif/adxcon_test_recv_40/dif_global_ram_adxcon_test_recv_40.h>
#include <sils/dif/adxcon_test_recv_41/dif_global_ram_adxcon_test_recv_41.h>
#include <sils/dif/adxcon_test_recv_42/dif_global_ram_adxcon_test_recv_42.h>
#include <sils/dif/adxcon_test_recv_43/dif_global_ram_adxcon_test_recv_43.h>
#include <sils/dif/adxcon_test_recv_44/dif_global_ram_adxcon_test_recv_44.h>
#include <sils/dif/adxcon_test_recv_45/dif_global_ram_adxcon_test_recv_45.h>
#include <sils/dif/adxcon_test_recv_46/dif_global_ram_adxcon_test_recv_46.h>
#include <sils/dif/adxcon_test_recv_47/dif_global_ram_adxcon_test_recv_47.h>
/**DIF_RAM_HEADER_INCLUDE_LIST_END**/

/****************************************************************************/
/*					スタティック関数宣言 */
/****************************************************************************/
#define APPFW_RECV_PORT 15010

#define HEADER_DELIMITER 0xffffffff
#define HEADER_SIZE 12
#define ACCEPT_TIMEOUT 10                           // sec
#define RECEIVE_TIMEOUT 10                          // sec
#define ACCEPT_TIMEOUT_MS (ACCEPT_TIMEOUT * 1000)   // msec
#define RECEIVE_TIMEOUT_MS (RECEIVE_TIMEOUT * 1000) // msec

#define MIN(a, b) ((a) < (b) ? (a) : (b))
#define MAX(a, b) ((a) > (b) ? (a) : (b))

static int sock                    = -1;
static int sock_accept             = -1;
static bool sock_connected         = false;
static uint8_t *temp_recv_buf      = NULL;
static uint8_t *temp_serialize_buf = NULL;
static size_t max_buf_size         = 0;

/**BUFFER_COUNT_DEFINE_START**/
#define BUFFER_LIST_COUNT (47)
/**BUFFER_COUNT_DEFINE_END**/
uint8_t appfw_recv_timestamp[BUFFER_LIST_COUNT]       = {0};
uint8_t appfw_recv_timestamp_cache[BUFFER_LIST_COUNT] = {0};

typedef union {
  /**BUFFER_SIZE_LIST_START**/
  char m0[ADXDIGSMINFO_SERIALIZED_SIZE];
  char m1[ADXDIGSMSTATUS_SERIALIZED_SIZE];
  char m2[ADXINCMOBJINFO_SERIALIZED_SIZE];
  char m3[ADXLCMOBJINFO_SERIALIZED_SIZE];
  char m4[ADXLOCSMSTATUS_SERIALIZED_SIZE];
  char m5[ADXROADMARKINGATTRIBUTE_SERIALIZED_SIZE];
  char m6[ADXTPCMOBJINFO_SERIALIZED_SIZE];
  char m7[ADX_APPSTATEAIPLN_SERIALIZED_SIZE];
  char m8[ADX_APPSTATEDLRCG_SERIALIZED_SIZE];
  char m9[ADX_APPSTATELANEPOE_SERIALIZED_SIZE];
  char m10[ADX_APPSTATEMAP_SERIALIZED_SIZE];
  char m11[ADX_APPSTATERESOURSEMANAGER_SERIALIZED_SIZE];
  char m12[ADX_APPSTETEDATAUPLOADER_SERIALIZED_SIZE];
  char m13[ADX_DIAGSTATE_SERIALIZED_SIZE];
  char m14[ADX_ET_SERIALIZED_SIZE];
  char m15[ADX_GRIDMAPLCM_SERIALIZED_SIZE];
  char m16[ADX_GRIDMAPTPCM_SERIALIZED_SIZE];
  char m17[ADX_INCMOBJECTDATA_SERIALIZED_SIZE];
  char m18[ADX_INCMSTATE_SERIALIZED_SIZE];
  char m19[ADX_LCMOBJECTDATA_SERIALIZED_SIZE];
  char m20[ADX_LCMSTATE_SERIALIZED_SIZE];
  char m21[ADX_SIGNDATA_SERIALIZED_SIZE];
  char m22[ADX_TPCMOBJECTDATA_SERIALIZED_SIZE];
  char m23[ADX_TPCMSTATE_SERIALIZED_SIZE];
  char m24[ADX_TRAFFICLIGHTDATA_SERIALIZED_SIZE];
  char m25[TELESIGNDATA_SERIALIZED_SIZE];
  char m26[TELELINEDATA_SERIALIZED_SIZE];
  char m27[EINNERLINEDATA_SERIALIZED_SIZE];
  char m28[ADX_FRLIDAROBJDATAINCGENERALPATH_SERIALIZED_SIZE];
  char m29[ADX_INCMOBJECTDATA_INT_SERIALIZED_SIZE];
  char m30[ADX_LCMOBJECTDATA_INT_SERIALIZED_SIZE];
  char m31[ADX_POLARMAPLCM_SERIALIZED_SIZE];
  char m32[ADX_POLARMAPTPCM_SERIALIZED_SIZE];
  char m33[ADX_RECOGNITIONSENSORSTATE_SERIALIZED_SIZE];
  char m34[ADX_RECOGNITIONSENSORSTATEFAILURE_SERIALIZED_SIZE];
  char m35[ADX_TPCMOBJECTDATA_INT_SERIALIZED_SIZE];
  char m36[ADXLANEDATAARRAY_SERIALIZED_SIZE];
  char m37[ADXLANEBOUNDARYDATAARRAY_SERIALIZED_SIZE];
  char m38[ADX_ECUPLANNEROUTPUTRESULT_SERIALIZED_SIZE];
  char m39[DLRLIDARSTATUSINFO_SERIALIZED_SIZE];
  char m40[DLRLIDARSTATUSINFO_SERIALIZED_SIZE];
  char m41[DLRLIDARSTATUSINFO_SERIALIZED_SIZE];
  char m42[DLRLIDARSTATUSINFO_SERIALIZED_SIZE];
  char m43[ADX_LCMSTATE_SERIALIZED_SIZE];
  char m44[ADX_TPCMSTATE_SERIALIZED_SIZE];
  char m45[ADX_INCMSTATE_SERIALIZED_SIZE];
  char m46[DLRSMSTATUSINFO_SERIALIZED_SIZE];
  /**BUFFER_SIZE_LIST_END**/
} BufferSizeList;

/**RECV_DATA_LIST_START**/
ADXDigsmInfo *recv_adx_digsm_info = (ADXDigsmInfo *)&adxcon_recv_01_st_g_adx_digsm_info;
ADXDigsmStatus *recv_adx_digsm_status = (ADXDigsmStatus *)&adxcon_recv_02_st_g_adx_digsm_status;
ADXIncmObjInfo *recv_adx_incm_obj_info = (ADXIncmObjInfo *)&adxcon_recv_03_st_g_adx_incm_obj_info;
ADXLcmObjInfo *recv_adx_lcm_obj_info = (ADXLcmObjInfo *)&adxcon_recv_04_st_g_adx_lcm_obj_info;
ADXLocSmStatus *recv_adx_loc_sm_status = (ADXLocSmStatus *)&adxcon_recv_05_st_g_adx_loc_sm_status;
ADXRoadMarkingAttribute *recv_adx_road_marking_attribute = (ADXRoadMarkingAttribute *)&adxcon_recv_06_st_g_adx_road_marking_attribute;
ADXTpcmObjInfo *recv_adx_tpcm_obj_info = (ADXTpcmObjInfo *)&adxcon_recv_07_st_g_adx_tpcm_obj_info;
ADX_AppStateAIPln *recv_adx_app_state_ai_pln = (ADX_AppStateAIPln *)&adxcon_recv_08_st_g_adx_app_state_ai_pln;
ADX_AppStateDLrcg *recv_adx_app_state_dl_rcg = (ADX_AppStateDLrcg *)&adxcon_recv_09_st_g_adx_app_state_d_lrcg;
ADX_AppStateLanePOE *recv_adx_app_state_lane_poe = (ADX_AppStateLanePOE *)&adxcon_recv_10_st_g_adx_app_state_lane_poe;
ADX_AppStateMap *recv_adx_app_state_map = (ADX_AppStateMap *)&adxcon_recv_11_st_g_adx_app_state_map;
ADX_AppStateResourseManager *recv_adx_app_state_resourse_manager = (ADX_AppStateResourseManager *)&adxcon_recv_12_st_g_adx_app_state_resourse_manager;
ADX_AppSteteDataUploader *recv_adx_app_stete_data_uploader = (ADX_AppSteteDataUploader *)&adxcon_recv_13_st_g_adx_app_stete_data_uploader;
ADX_DiagState *recv_adx_diag_state = (ADX_DiagState *)&adxcon_recv_14_st_g_adx_diag_state;
ADX_ET *recv_adx_et = (ADX_ET *)&adxcon_recv_15_st_g_adx_et;
ADX_GridmapLcm *recv_adx_gridmap_lcm = (ADX_GridmapLcm *)&adxcon_recv_16_st_g_adx_gridmap_lcm;
ADX_GridmapTpcm *recv_adx_gridmap_tpcm = (ADX_GridmapTpcm *)&adxcon_recv_17_st_g_adx_gridmap_tpcm;
ADX_IncmObjectData *recv_adx_incm_object_data = (ADX_IncmObjectData *)&adxcon_recv_18_st_g_adx_incm_object_data;
ADX_IncmState *recv_adx_incm_state = (ADX_IncmState *)&adxcon_recv_19_st_g_adx_incm_state;
ADX_LcmObjectData *recv_adx_lcm_object_data = (ADX_LcmObjectData *)&adxcon_recv_20_st_g_adx_lcm_object_data;
ADX_LcmState *recv_adx_lcm_state = (ADX_LcmState *)&adxcon_recv_21_st_g_adx_lcm_state;
ADX_SignData *recv_adx_sign_data = (ADX_SignData *)&adxcon_recv_22_st_g_adx_sign_data;
ADX_TpcmObjectData *recv_adx_tpcm_object_data = (ADX_TpcmObjectData *)&adxcon_recv_23_st_g_adx_tpcm_object_data;
ADX_TpcmState *recv_adx_tpcm_state = (ADX_TpcmState *)&adxcon_recv_24_st_g_adx_tpcm_state;
ADX_TrafficLightData *recv_adx_traffic_light_data = (ADX_TrafficLightData *)&adxcon_recv_25_st_g_adx_traffic_light_data;
TeleSignData *recv_LOC_52_03_tele_sign_data = (TeleSignData *)&adxcon_recv_26_st_g_tele_sign_data;
TeleLineData *recv_LOC_52_02_tele_line_data = (TeleLineData *)&adxcon_recv_27_st_g_tele_line_data;
EInnerLineData *recv_einner_line_data = (EInnerLineData *)&adxcon_recv_28_st_g_e_inner_line_data;
ADX_FrLidarObjDataIncGeneralPath *recv_adx_fr_lidar_obj_data_inc_general_path = (ADX_FrLidarObjDataIncGeneralPath *)&adxcon_recv_29_st_g_adx_fr_lidar_obj_data_inc_general_path;
ADX_IncmObjectData_Int *recv_adx_incm_objectdata_int = (ADX_IncmObjectData_Int *)&adxcon_recv_30_st_g_adx_incm_object_data_int;
ADX_LcmObjectData_Int *recv_adx_lcm_objectdata_int = (ADX_LcmObjectData_Int *)&adxcon_recv_31_st_g_adx_lcm_object_data_int;
ADX_PolarmapLcm *recv_adx_polarmap_lcm = (ADX_PolarmapLcm *)&adxcon_recv_32_st_g_adx_polarmap_lcm;
ADX_PolarmapTpcm *recv_adx_polarmap_tpcm = (ADX_PolarmapTpcm *)&adxcon_recv_33_st_g_adx_polarmap_tpcm;
ADX_RecognitionSensorState *recv_adx_recognition_sensor_state = (ADX_RecognitionSensorState *)&adxcon_recv_34_st_g_adx_recognition_sensor_state;
ADX_RecognitionSensorStateFailure *recv_adx_recognition_sensor_state_failure = (ADX_RecognitionSensorStateFailure *)&adxcon_recv_35_st_g_adx_recognition_sensor_state_failure;
ADX_TpcmObjectData_Int *recv_adx_tpcm_objectdata_int = (ADX_TpcmObjectData_Int *)&adxcon_recv_36_st_g_adx_tpcm_object_data_int;
ADXLaneDataArray *recv_adx_lane_data_array = (ADXLaneDataArray *)&adxcon_recv_37_st_g_adx_lane_data_array;
ADXLaneBoundaryDataArray *recv_adx_lane_boundary_data_array = (ADXLaneBoundaryDataArray *)&adxcon_recv_38_st_g_adx_lane_boundary_data_array;
ADX_EcuPlannerOutputResult *recv_adx_ecu_pl_output_result = (ADX_EcuPlannerOutputResult *)&adxcon_recv_39_st_g_adx_ecu_planner_output_result;
DlrLidarStatusInfo *recv_dlr_frlidar_status_info = (DlrLidarStatusInfo *)&adxcon_recv_40_st_g_dlr_lidar_status_info;
DlrLidarStatusInfo *recv_dlr_rrlidar_status_info = (DlrLidarStatusInfo *)&adxcon_recv_41_st_g_dlr_lidar_status_info2;
DlrLidarStatusInfo *recv_dlr_ltlidar_status_info = (DlrLidarStatusInfo *)&adxcon_recv_42_st_g_dlr_lidar_status_info3;
DlrLidarStatusInfo *recv_dlr_rtlidar_status_info = (DlrLidarStatusInfo *)&adxcon_recv_43_st_g_dlr_lidar_status_info4;
ADX_LcmState *recv_adx_dlr_lcm_state   = (ADX_LcmState *)&adxcon_recv_44_st_g_adx_lcm_state2;
ADX_TpcmState *recv_adx_dlr_tpcm_state = (ADX_TpcmState *)&adxcon_recv_45_st_g_adx_tpcm_state2;
ADX_IncmState *recv_adx_dlr_incm_state = (ADX_IncmState *)&adxcon_recv_46_st_g_adx_incm_state2;
DlrsmStatusInfo *recv_dlr_sm_status_info = (DlrsmStatusInfo *)&adxcon_recv_47_st_g_dlrsm_status_info;
/**RECV_DATA_LIST_END**/

typedef size_t (*deserialize_func_ptr)(void *data, void *buffer);

typedef void (*dif_func_ptr)(void);

typedef struct {
  uint32_t data_label;
  void *output_buffer;
  deserialize_func_ptr des_func;
  uint32_t serialized_size;
  dif_func_ptr dif_set_func;
} DataInfo;

/****************************************************************************/
/* 関数名		:	fn_appfw_recv_init                                            */
/*--------------------------------------------------------------------------*/
/* 機能			:	appfw_recv_init                                               */
/*--------------------------------------------------------------------------*/
/* 引数			: なし                                                          */
/*--------------------------------------------------------------------------*/
/* 戻り値		: なし                                                          */
/****************************************************************************/
VD fn_appfw_recv_init(VD) {
  LINUX_PRINT_OUT("%s:%d start-------------\n", __FUNCTION__, __LINE__);

  struct sockaddr_in addr;

  // socket初期化
  sock = socket(AF_INET, SOCK_STREAM, 0);
  if (sock < 0) {
    Slog_Error("socket failed.");
    return;
  }
  int yes = 1;
  setsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (const char *)&yes, sizeof(yes));

  // port初期化
  addr.sin_family      = AF_INET;
  addr.sin_port        = htons(APPFW_RECV_PORT);
  addr.sin_addr.s_addr = INADDR_ANY;
  if (bind(sock, (struct sockaddr *)&addr, sizeof(addr)) != 0) {
    Slog_Error("bind error.");
    return;
  }
  if (listen(sock, 1) != 0) {
    Slog_Error("listen error.");
    return;
  }

  LINUX_PRINT_OUT("%s:%d end-------------\n", __FUNCTION__, __LINE__);
  return;
}

/****************************************************************************/
/* 関数名		:	fn_appfw_recv_compute                                         */
/*--------------------------------------------------------------------------*/
/* 機能			:	fn_appfw_recv_compute                                         */
/*--------------------------------------------------------------------------*/
/* 引数			: なし                                                          */
/*--------------------------------------------------------------------------*/
/* 戻り値		: なし                                                          */
/****************************************************************************/
VD fn_appfw_recv_compute(VD) {
  LINUX_PRINT_OUT("%s:%d start-------------\n", __FUNCTION__, __LINE__);

  size_t i;

  DataInfo data_info_list[] = {
      /**DATA_INFO_LIST_START**/
      {kIoDataLabelADXDigsmInfo, (void *)&adxcon_test_recv_01_st_g_adx_digsm_info, (deserialize_func_ptr)&DeserializeADXDigsmInfo, ADXDIGSMINFO_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_01},
      {kIoDataLabelADXDigsmStatus, (void *)&adxcon_test_recv_02_st_g_adx_digsm_status, (deserialize_func_ptr)&DeserializeADXDigsmStatus, ADXDIGSMSTATUS_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_02},
      {kIoDataLabelADXIncmObjInfo, (void *)&adxcon_test_recv_03_st_g_adx_incm_obj_info, (deserialize_func_ptr)&DeserializeADXIncmObjInfo, ADXINCMOBJINFO_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_03},
      {kIoDataLabelADXLcmObjInfo, (void *)&adxcon_test_recv_04_st_g_adx_lcm_obj_info, (deserialize_func_ptr)&DeserializeADXLcmObjInfo, ADXLCMOBJINFO_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_04},
      {kIoDataLabelADXLocSmStatus, (void *)&adxcon_test_recv_05_st_g_adx_loc_sm_status, (deserialize_func_ptr)&DeserializeADXLocSmStatus, ADXLOCSMSTATUS_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_05},
      {kIoDataLabelADXRoadMarkingAttribute, (void *)&adxcon_test_recv_06_st_g_adx_road_marking_attribute, (deserialize_func_ptr)&DeserializeADXRoadMarkingAttribute, ADXROADMARKINGATTRIBUTE_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_06},
      {kIoDataLabelADXTpcmObjInfo, (void *)&adxcon_test_recv_07_st_g_adx_tpcm_obj_info, (deserialize_func_ptr)&DeserializeADXTpcmObjInfo, ADXTPCMOBJINFO_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_07},
      {kIoDataLabelADX_AppStateAIPln, (void *)&adxcon_test_recv_08_st_g_adx_app_state_ai_pln, (deserialize_func_ptr)&DeserializeADX_AppStateAIPln, ADX_APPSTATEAIPLN_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_08},
      {kIoDataLabelADX_AppStateDLrcg, (void *)&adxcon_test_recv_09_st_g_adx_app_state_d_lrcg, (deserialize_func_ptr)&DeserializeADX_AppStateDLrcg, ADX_APPSTATEDLRCG_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_09},
      {kIoDataLabelADX_AppStateLanePOE, (void *)&adxcon_test_recv_10_st_g_adx_app_state_lane_poe, (deserialize_func_ptr)&DeserializeADX_AppStateLanePOE, ADX_APPSTATELANEPOE_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_10},
      {kIoDataLabelADX_AppStateMap, (void *)&adxcon_test_recv_11_st_g_adx_app_state_map, (deserialize_func_ptr)&DeserializeADX_AppStateMap, ADX_APPSTATEMAP_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_11},
      {kIoDataLabelADX_AppStateResourseManager, (void *)&adxcon_test_recv_12_st_g_adx_app_state_resourse_manager, (deserialize_func_ptr)&DeserializeADX_AppStateResourseManager, ADX_APPSTATERESOURSEMANAGER_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_12},
      {kIoDataLabelADX_AppSteteDataUploader, (void *)&adxcon_test_recv_13_st_g_adx_app_stete_data_uploader, (deserialize_func_ptr)&DeserializeADX_AppSteteDataUploader, ADX_APPSTETEDATAUPLOADER_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_13},
      {kIoDataLabelADX_DiagState, (void *)&adxcon_test_recv_14_st_g_adx_diag_state, (deserialize_func_ptr)&DeserializeADX_DiagState, ADX_DIAGSTATE_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_14},
      {kIoDataLabelADX_ET, (void *)&adxcon_test_recv_15_st_g_adx_et, (deserialize_func_ptr)&DeserializeADX_ET, ADX_ET_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_15},
      {kIoDataLabelADX_GridmapLcm, (void *)&adxcon_test_recv_16_st_g_adx_gridmap_lcm, (deserialize_func_ptr)&DeserializeADX_GridmapLcm, ADX_GRIDMAPLCM_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_16},
      {kIoDataLabelADX_GridmapTpcm, (void *)&adxcon_test_recv_17_st_g_adx_gridmap_tpcm, (deserialize_func_ptr)&DeserializeADX_GridmapTpcm, ADX_GRIDMAPTPCM_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_17},
      {kIoDataLabelADX_IncmObjectData, (void *)&adxcon_test_recv_18_st_g_adx_incm_object_data, (deserialize_func_ptr)&DeserializeADX_IncmObjectData, ADX_INCMOBJECTDATA_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_18},
      {kIoDataLabelADX_IncmState, (void *)&adxcon_test_recv_19_st_g_adx_incm_state, (deserialize_func_ptr)&DeserializeADX_IncmState, ADX_INCMSTATE_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_19},
      {kIoDataLabelADX_LcmObjectData, (void *)&adxcon_test_recv_20_st_g_adx_lcm_object_data, (deserialize_func_ptr)&DeserializeADX_LcmObjectData, ADX_LCMOBJECTDATA_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_20},
      {kIoDataLabelADX_LcmState, (void *)&adxcon_test_recv_21_st_g_adx_lcm_state, (deserialize_func_ptr)&DeserializeADX_LcmState, ADX_LCMSTATE_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_21},
      {kIoDataLabelADX_SignData, (void *)&adxcon_test_recv_22_st_g_adx_sign_data, (deserialize_func_ptr)&DeserializeADX_SignData, ADX_SIGNDATA_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_22},
      {kIoDataLabelADX_TpcmObjectData, (void *)&adxcon_test_recv_23_st_g_adx_tpcm_object_data, (deserialize_func_ptr)&DeserializeADX_TpcmObjectData, ADX_TPCMOBJECTDATA_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_23},
      {kIoDataLabelADX_TpcmState, (void *)&adxcon_test_recv_24_st_g_adx_tpcm_state, (deserialize_func_ptr)&DeserializeADX_TpcmState, ADX_TPCMSTATE_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_24},
      {kIoDataLabelADX_TrafficLightData, (void *)&adxcon_test_recv_25_st_g_adx_traffic_light_data, (deserialize_func_ptr)&DeserializeADX_TrafficLightData, ADX_TRAFFICLIGHTDATA_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_25},
      {kIoDataLabelTeleSignData, (void *)&adxcon_test_recv_26_st_g_tele_sign_data, (deserialize_func_ptr)&DeserializeTeleSignData, TELESIGNDATA_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_26},
      {kIoDataLabelTeleLineData, (void *)&adxcon_test_recv_27_st_g_tele_line_data, (deserialize_func_ptr)&DeserializeTeleLineData, TELELINEDATA_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_27},
      {kIoDataLabelEInnerLineData, (void *)&adxcon_test_recv_28_st_g_e_inner_line_data, (deserialize_func_ptr)&DeserializeEInnerLineData, EINNERLINEDATA_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_28},
      {kIoDataLabelADX_FrLidarObjDataIncGeneralPath, (void *)&adxcon_test_recv_29_st_g_adx_fr_lidar_obj_data_inc_general_path, (deserialize_func_ptr)&DeserializeADX_FrLidarObjDataIncGeneralPath, ADX_FRLIDAROBJDATAINCGENERALPATH_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_29},
      {kIoDataLabelADX_IncmObjectData_Int, (void *)&adxcon_test_recv_30_st_g_adx_incm_object_data_int, (deserialize_func_ptr)&DeserializeADX_IncmObjectData_Int, ADX_INCMOBJECTDATA_INT_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_30},
      {kIoDataLabelADX_LcmObjectData_Int, (void *)&adxcon_test_recv_31_st_g_adx_lcm_object_data_int, (deserialize_func_ptr)&DeserializeADX_LcmObjectData_Int, ADX_LCMOBJECTDATA_INT_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_31},
      {kIoDataLabelADX_PolarmapLcm, (void *)&adxcon_test_recv_32_st_g_adx_polarmap_lcm, (deserialize_func_ptr)&DeserializeADX_PolarmapLcm, ADX_POLARMAPLCM_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_32},
      {kIoDataLabelADX_PolarmapTpcm, (void *)&adxcon_test_recv_33_st_g_adx_polarmap_tpcm, (deserialize_func_ptr)&DeserializeADX_PolarmapTpcm, ADX_POLARMAPTPCM_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_33},
      {kIoDataLabelADX_RecognitionSensorState, (void *)&adxcon_test_recv_34_st_g_adx_recognition_sensor_state, (deserialize_func_ptr)&DeserializeADX_RecognitionSensorState, ADX_RECOGNITIONSENSORSTATE_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_34},
      {kIoDataLabelADX_RecognitionSensorStateFailure, (void *)&adxcon_test_recv_35_st_g_adx_recognition_sensor_state_failure, (deserialize_func_ptr)&DeserializeADX_RecognitionSensorStateFailure, ADX_RECOGNITIONSENSORSTATEFAILURE_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_35},
      {kIoDataLabelADX_TpcmObjectData_Int, (void *)&adxcon_test_recv_36_st_g_adx_tpcm_object_data_int, (deserialize_func_ptr)&DeserializeADX_TpcmObjectData_Int, ADX_TPCMOBJECTDATA_INT_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_36},
      {kIoDataLabelADXLaneDataArray, (void *)&adxcon_test_recv_37_st_g_adx_lane_data_array, (deserialize_func_ptr)&DeserializeADXLaneDataArray, ADXLANEDATAARRAY_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_37},
      {kIoDataLabelADXLaneBoundaryDataArray, (void *)&adxcon_test_recv_38_st_g_adx_lane_boundary_data_array, (deserialize_func_ptr)&DeserializeADXLaneBoundaryDataArray, ADXLANEBOUNDARYDATAARRAY_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_38},
      {kIoDataLabelADX_EcuPlannerOutputResult, (void *)&adxcon_test_recv_39_st_g_adx_ecu_planner_output_result, (deserialize_func_ptr)&DeserializeADX_EcuPlannerOutputResult, ADX_ECUPLANNEROUTPUTRESULT_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_39},
      {kIoDataLabelDlrLidarStatusInfo, (void *)&adxcon_test_recv_40_st_g_dlr_lidar_status_info, (deserialize_func_ptr)&DeserializeDlrLidarStatusInfo, DLRLIDARSTATUSINFO_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_40},
      {kIoDataLabelDlrLidarStatusInfo2, (void *)&adxcon_test_recv_41_st_g_dlr_lidar_status_info2, (deserialize_func_ptr)&DeserializeDlrLidarStatusInfo, DLRLIDARSTATUSINFO_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_41},
      {kIoDataLabelDlrLidarStatusInfo3, (void *)&adxcon_test_recv_42_st_g_dlr_lidar_status_info3, (deserialize_func_ptr)&DeserializeDlrLidarStatusInfo, DLRLIDARSTATUSINFO_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_42},
      {kIoDataLabelDlrLidarStatusInfo4, (void *)&adxcon_test_recv_43_st_g_dlr_lidar_status_info4, (deserialize_func_ptr)&DeserializeDlrLidarStatusInfo, DLRLIDARSTATUSINFO_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_43},
      {kIoDataLabelADX_LcmState2, (void *)&adxcon_test_recv_44_st_g_adx_lcm_state2, (deserialize_func_ptr)&DeserializeADX_LcmState, ADX_LCMSTATE_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_44},
      {kIoDataLabelADX_TpcmState2, (void *)&adxcon_test_recv_45_st_g_adx_tpcm_state2, (deserialize_func_ptr)&DeserializeADX_TpcmState, ADX_TPCMSTATE_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_45},
      {kIoDataLabelADX_IncmState2, (void *)&adxcon_test_recv_46_st_g_adx_incm_state2, (deserialize_func_ptr)&DeserializeADX_IncmState, ADX_INCMSTATE_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_46},
      {kIoDataLabelDlrsmStatusInfo, (void *)&adxcon_test_recv_47_st_g_dlrsm_status_info, (deserialize_func_ptr)&DeserializeDlrsmStatusInfo, DLRSMSTATUSINFO_SERIALIZED_SIZE, (dif_func_ptr)&fn_dataout_dif_adxcon_recv_47},
      /**DATA_INFO_LIST_END**/
  };

  size_t data_info_list_count = (size_t)(sizeof(data_info_list) / sizeof(DataInfo));

  if (sock < 0) {
    Slog_Error("socket error.");
    return;
  }

  //未接続時は接続要求を待つ
  if (sock_connected == false) {
    struct pollfd fds = {0};
    fds.fd            = sock;
    fds.events        = POLLIN | POLLERR;
    int pret          = poll(&fds, 1, ACCEPT_TIMEOUT_MS);
    if (pret < 0 || (fds.revents & POLLIN) == 0) {
      //接続要求待ちタイムアウト or エラー -> retry
      return;
    }

    //接続要求あり
    struct sockaddr_in client;
    socklen_t len = (socklen_t)sizeof(client);
    sock_accept   = accept(sock, (struct sockaddr *)&client, (socklen_t *)&len);
    if (sock_accept < 0) {
      Slog_Error("accept error.");
      return;
    }
    sock_connected = true;
    Slog_Info("connected.");
  }

  //受信
  uint32_t header_len_received = 0;
  uint32_t data_len_expect     = 0;
  uint32_t data_len_received   = 0;
  uint32_t data_label          = 0;
  char header_buf[HEADER_SIZE] = {0};

  while (1) {
    struct pollfd fds = {0};
    fds.fd            = sock_accept;
    fds.events        = POLLIN | POLLERR;
    int pret          = poll(&fds, 1, RECEIVE_TIMEOUT_MS);
    if (pret == 0 && (fds.revents & POLLIN) == 0) {
      // timeout
      if ((header_len_received > 0) || (data_len_received > 0)) {
        //メッセージ受信途中のタイムアウトはエラー
        Slog_Error("receiving timeout error");
      }
      return;
    }
    if (pret < 0) {
      if (errno == EINTR) {
        Slog_Debug("poll() EINTR");
        continue;
      }
      Slog_Error("poll: %s", strerror(errno));
      return;
    }

    if (header_len_received < HEADER_SIZE) {
      //ヘッダの抽出
      uint32_t len_read  = HEADER_SIZE - header_len_received;
      errno              = 0;
      int32_t len_result = (int32_t)read(sock_accept, &header_buf[header_len_received], len_read);
      if (len_result == 0) {
        //コネクション切断
        Slog_Info("connection closed. ret:0, %s", strerror(errno));
        sock_connected = false;
        close(sock_accept);
        sock_accept = -1;
        return;
      } else if (len_result < 0) {
        if (errno == EINTR) {
          Slog_Debug("read() EINTR");
          continue;
        }
        //ソケットエラー
        Slog_Info("connection closed. %s", strerror(errno));
        sock_connected = false;
        close(sock_accept);
        sock_accept = -1;
        return;
      }
      header_len_received += (uint32_t)len_result;
      if (header_len_received == HEADER_SIZE) {
        uint32_t delim = (*((uint32_t *)(void *)&header_buf[0]));
        if (delim == HEADER_DELIMITER) {
          //ヘッダがそろったらデータ長とIDを取得
          data_label      = (*((uint32_t *)(void *)&header_buf[4]));
          data_len_expect = (*((uint32_t *)(void *)&header_buf[8]));
          //未定義の大きいデータが送信された場合は一旦バッファを拡張（データラベル判定時に破棄する）
          if (max_buf_size < data_len_expect) {
            free(temp_recv_buf);
            max_buf_size  = data_len_expect;
            temp_recv_buf = malloc(max_buf_size);
          }
          if (data_len_expect <= 0) {
            //データサイズのエラー
            Slog_Error("data size error.");
            return;
          }
        } else {
          //ヘッダのデリミタ照合エラー
          Slog_Error("unknown header delimiter");
          return;
        }
      }
    } else if (data_len_expect > 0) {
      //データの抽出
      uint32_t len_read  = data_len_expect - data_len_received;
      int32_t len_result = (int32_t)read(sock_accept, &temp_recv_buf[data_len_received], len_read);
      if (len_result <= 0) {
        if (errno == EINTR) {
          Slog_Debug("read() EINTR");
          continue;
        }
        //ソケットエラーかデータ受信途中でコネクション切断エラー
        Slog_Error("read error. %s", strerror(errno));
        sock_connected = false;
        close(sock_accept);
        sock_accept = -1;
        return;
      }
      data_len_received += (uint32_t)len_result;
      if (data_len_received == data_len_expect) {

        //１パケット受信完了
        bool found = false;
        for (i = 0; i < data_info_list_count; i++) {
          if (data_label == data_info_list[i].data_label) {
            found = true;
            if (data_len_received == data_info_list[i].serialized_size) {
              (data_info_list[i].des_func)(data_info_list[i].output_buffer, (void *)temp_recv_buf);

              // appfw_test_recvにグローバル変数を渡す
              (data_info_list[i].dif_set_func)();

              // appfw_test_recvに更新通知
              appfw_recv_timestamp[i]++;

              // fn_appfw_test_recv_compute()のトリガ呼び出し
              fn_schdl_api_send_trig(CEN_SCHDL_TRIG_APPFW_TEST_RECV_DATA);

              break;
            } else {
              Slog_Error("incompatible data size. (data label %d)", data_label);
              break;
            }
          }
        }
        if (found == false) {
          Slog_Error("unknown data label (%d)", data_label);
        }
        LINUX_PRINT_OUT("%s:%d end-------------\n", __FUNCTION__, __LINE__);
        return;
      }
    }
  }

  LINUX_PRINT_OUT("%s:%d end-------------\n", __FUNCTION__, __LINE__);
  return;
}
