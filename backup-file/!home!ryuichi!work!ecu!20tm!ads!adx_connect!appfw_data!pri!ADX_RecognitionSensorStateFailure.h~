#ifndef DATA_DEFINITION_ADX_RECOGNITIONSENSORSTATEFAILURE_H
#define DATA_DEFINITION_ADX_RECOGNITIONSENSORSTATEFAILURE_H

#include "ADX_ExecutiveState.h"
#include "ADX_RecognitionAppState.h"
#include "appfw.h"
#include "system_constants.h"
#include <stddef.h>

#define ADX_RECOGNITIONSENSORSTATEFAILURE_DATAINFO                             \
  "{\"name\": \"ADX_RecognitionSensorStateFailure\", \"description\": "        \
  "\"ADX\u8a8d\u8b58\u30bb\u30f3\u30b5\u6545\u969c\u72b6\u614b\u60c5\u5831\"," \
  " \"members\": [{\"name\": \"data_send_time_stamp\", \"type\": "             \
  "\"uint32_t\", \"description\": "                                            \
  "\"\u30c7\u30fc\u30bf\u9001\u4fe1\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7" \
  "\", \"unit\": \"ms\", \"min\": 0, \"max\": 4294967295, \"lsb\": 1, "        \
  "\"ignore_naming_rule\": true}, {\"name\": "                                 \
  "\"recognition_application_state\", "                                        \
  "\"type\": " ADX_RECOGNITIONAPPSTATE_DATAINFO                                \
  ", \"description\": \"ADX\u8a8d\u8b58\u30a2\u30d7\u30ea\u72b6\u614b\", "     \
  "\"ignore_naming_rule\": true}, {\"name\": \"ecutive_state\", "              \
  "\"type\": " ADX_EXECUTIVESTATE_DATAINFO                                     \
  ", \"description\": \"ADX\u5468\u8fba\u76e3\u8996\u72b6\u614b\", "           \
  "\"ignore_naming_rule\": true}, {\"name\": \"reserved\", \"type\": "         \
  "\"uint8_t\", \"dimension\": [8], \"description\": \"RESERVED\", \"min\": "  \
  "0, \"max\": 255, \"lsb\": 1, \"ignore_naming_rule\": true}], "              \
  "\"ignore_naming_rule\": true, \"ads\": false, \"name_snake_case\": "        \
  "\"adx_recognition_sensor_state_failure\"}"

#ifdef __cplusplus
extern "C" {
#endif

// ADX_RecognitionSensorStateFailure.hで定義されている型をシリアライズした時のバイト数
#define ADX_RECOGNITIONSENSORSTATEFAILURE_SERIALIZED_SIZE                      \
  (4 + ADX_RECOGNITIONAPPSTATE_SERIALIZED_SIZE +                               \
   ADX_EXECUTIVESTATE_SERIALIZED_SIZE + 1 * (8))

// 定数の定義
#define ADX_RECOGNITION_SENSOR_STATE_FAILURE_DATA_SEND_TIME_STAMP_MIN          \
  ((uint32_t)0)
#define ADX_RECOGNITION_SENSOR_STATE_FAILURE_DATA_SEND_TIME_STAMP_MAX          \
  ((uint32_t)4294967295)
#define ADX_RECOGNITION_SENSOR_STATE_FAILURE_RESERVED_MIN ((uint8_t)0)
#define ADX_RECOGNITION_SENSOR_STATE_FAILURE_RESERVED_MAX ((uint8_t)255)
#define ADX_RECOGNITION_SENSOR_STATE_FAILURE_RESERVED_DIM1 ((size_t)8)

/* ADX認識センサ故障状態情報 */
typedef struct {
  uint32_t data_send_time_stamp; /* データ送信タイムスタンプ */
  ADX_RecognitionAppState recognition_application_state; /* ADX認識アプリ状態 */
  ADX_ExecutiveState ecutive_state; /* ADX周辺監視状態 */
  uint8_t reserved[8];              /* RESERVED */
} ADX_RecognitionSensorStateFailure;

size_t SerializeADX_RecognitionSensorStateFailure(
    void *buffer, ADX_RecognitionSensorStateFailure *data,
    size_t max_buffer_size);
size_t
SerializeADX_RecognitionSensorStateFailureAutoRelease(void *buffer, void *data,
                                                      size_t max_buffer_size);
size_t DeserializeADX_RecognitionSensorStateFailure(
    ADX_RecognitionSensorStateFailure *data, void *buffer);
bool IsEqualADX_RecognitionSensorStateFailure(
    ADX_RecognitionSensorStateFailure *data1,
    ADX_RecognitionSensorStateFailure *data2);
void InitializeADX_RecognitionSensorStateFailure(
    ADX_RecognitionSensorStateFailure *data);
void InitializeDefaultOnlyADX_RecognitionSensorStateFailure(
    ADX_RecognitionSensorStateFailure *data);

#ifdef __cplusplus
}
#endif

#endif // DATA_DEFINITION_ADX_RECOGNITIONSENSORSTATEFAILURE_H
