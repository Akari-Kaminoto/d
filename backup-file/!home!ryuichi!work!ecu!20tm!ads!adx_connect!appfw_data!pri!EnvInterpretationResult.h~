#ifndef DATA_DEFINITION_ENVINTERPRETATIONRESULT_H
#define DATA_DEFINITION_ENVINTERPRETATIONRESULT_H

#include "CarInterpretationResult.h"
#include "appfw.h"
#include "system_constants.h"
#include <stddef.h>

#define ENVINTERPRETATIONRESULT_DATAINFO                                       \
  "{\"name\": \"EnvInterpretationResult\", \"description\": "                  \
  "\"\u74b0\u5883\u89e3\u91c8\u7d50\u679c\", \"members\": [{\"name\": "        \
  "\"car_interpretation\", \"type\": " CARINTERPRETATIONRESULT_DATAINFO        \
  ", \"description\": \"\u81ea\u8eca\u89e3\u91c8\u7d50\u679c\", "              \
  "\"ignore_naming_rule\": true}], \"ignore_naming_rule\": true, \"ads\": "    \
  "false, \"name_snake_case\": \"env_interpretation_result\"}"

#ifdef __cplusplus
extern "C" {
#endif

// EnvInterpretationResult.hで定義されている型をシリアライズした時のバイト数
#define ENVINTERPRETATIONRESULT_SERIALIZED_SIZE                                \
  (CARINTERPRETATIONRESULT_SERIALIZED_SIZE)

// 定数の定義

/* 環境解釈結果 */
typedef struct {
  CarInterpretationResult car_interpretation; /* 自車解釈結果 */
} EnvInterpretationResult;

size_t SerializeEnvInterpretationResult(void *buffer,
                                        EnvInterpretationResult *data,
                                        size_t max_buffer_size);
size_t SerializeEnvInterpretationResultAutoRelease(void *buffer, void *data,
                                                   size_t max_buffer_size);
size_t DeserializeEnvInterpretationResult(EnvInterpretationResult *data,
                                          void *buffer);
bool IsEqualEnvInterpretationResult(EnvInterpretationResult *data1,
                                    EnvInterpretationResult *data2);
void InitializeEnvInterpretationResult(EnvInterpretationResult *data);
void InitializeDefaultOnlyEnvInterpretationResult(
    EnvInterpretationResult *data);

#ifdef __cplusplus
}
#endif

#endif // DATA_DEFINITION_ENVINTERPRETATIONRESULT_H
