#ifndef DATA_DEFINITION_ADX_APPSTATEMAP_H
#define DATA_DEFINITION_ADX_APPSTATEMAP_H

#include "MapSmReason.h"
#include "MapSmStatus.h"
#include "appfw.h"
#include "system_constants.h"
#include <stddef.h>

#define ADX_APPSTATEMAP_DATAINFO                                               \
  "{\"name\": \"ADX_AppStateMap\", \"description\": "                          \
  "\"ADX\u30a2\u30d7\u30ea\u72b6\u614b (\u5730\u56f3\u90e8)\", \"members\": "  \
  "[{\"name\": \"map_sm_drive_mode_request\", \"type\": \"uint8_t\", "         \
  "\"description\": \"\u8d70\u884c\u30e2\u30fc\u30c9\", \"min\": 0, \"max\": " \
  "5, \"ignore_naming_rule\": true}, {\"name\": "                              \
  "\"map_sm_road_soulder_evacuation_prohibit_request\", \"type\": "            \
  "\"uint8_t\", \"description\": "                                             \
  "\"\u8def\u80a9\u9000\u907f\u7981\u6b62\u8981\u6c42\", \"min\": 0, "         \
  "\"max\": 1, \"ignore_naming_rule\": true}, {\"name\": "                     \
  "\"map_sm_limit_mode_request\", \"type\": \"uint8_t\", \"dimension\": [4], " \
  "\"description\": "                                                          \
  "\"\u6a5f\u80fd\u5236\u9650\u30e2\u30fc\u30c9\u8981\u6c42\", \"min\": 0, "   \
  "\"max\": 1, \"ignore_naming_rule\": true}, {\"name\": "                     \
  "\"map_sm_ready_status\", \"type\": \"uint8_t\", \"description\": "          \
  "\"READY\u72b6\u614b\", \"min\": 0, \"max\": 1, \"ignore_naming_rule\": "    \
  "true}, {\"name\": \"map_sm_timestamp\", \"type\": \"uint32_t\", \"unit\": " \
  "\"ms\", \"description\": "                                                  \
  "\"\u30c7\u30fc\u30bf\u9001\u4fe1\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7" \
  "\", \"min\": 0, \"max\": 4294967295, \"ignore_naming_rule\": true}, "       \
  "{\"name\": \"map_sm_status\", \"type\": " MAPSMSTATUS_DATAINFO              \
  ", \"description\": \"\u5730\u56f3\u72b6\u614b\", \"ignore_naming_rule\": "  \
  "true}, {\"name\": \"map_sm_reason\", \"type\": " MAPSMREASON_DATAINFO       \
  ", \"description\": \"\u5730\u56f3\u6545\u969c\u4e0d\u8abf\u8981\u56e0\", "  \
  "\"ignore_naming_rule\": true}], \"ignore_naming_rule\": true, \"ads\": "    \
  "false, \"name_snake_case\": \"adx_app_state_map\"}"

#ifdef __cplusplus
extern "C" {
#endif

// ADX_AppStateMap.hで定義されている型をシリアライズした時のバイト数
#define ADX_APPSTATEMAP_SERIALIZED_SIZE                                        \
  (1 + 1 + 1 * (4) + 1 + 4 + MAPSMSTATUS_SERIALIZED_SIZE +                     \
   MAPSMREASON_SERIALIZED_SIZE)

// 定数の定義
#define ADX_APP_STATE_MAP_MAP_SM_DRIVE_MODE_REQUEST_MIN ((uint8_t)0)
#define ADX_APP_STATE_MAP_MAP_SM_DRIVE_MODE_REQUEST_MAX ((uint8_t)5)
#define ADX_APP_STATE_MAP_MAP_SM_ROAD_SOULDER_EVACUATION_PROHIBIT_REQUEST_MIN  \
  ((uint8_t)0)
#define ADX_APP_STATE_MAP_MAP_SM_ROAD_SOULDER_EVACUATION_PROHIBIT_REQUEST_MAX  \
  ((uint8_t)1)
#define ADX_APP_STATE_MAP_MAP_SM_LIMIT_MODE_REQUEST_MIN ((uint8_t)0)
#define ADX_APP_STATE_MAP_MAP_SM_LIMIT_MODE_REQUEST_MAX ((uint8_t)1)
#define ADX_APP_STATE_MAP_MAP_SM_LIMIT_MODE_REQUEST_DIM1 ((size_t)4)
#define ADX_APP_STATE_MAP_MAP_SM_READY_STATUS_MIN ((uint8_t)0)
#define ADX_APP_STATE_MAP_MAP_SM_READY_STATUS_MAX ((uint8_t)1)
#define ADX_APP_STATE_MAP_MAP_SM_TIMESTAMP_MIN ((uint32_t)0)
#define ADX_APP_STATE_MAP_MAP_SM_TIMESTAMP_MAX ((uint32_t)4294967295)

/* ADXアプリ状態 (地図部) */
typedef struct {
  uint8_t map_sm_drive_mode_request; /* 走行モード */
  uint8_t
      map_sm_road_soulder_evacuation_prohibit_request; /* 路肩退避禁止要求 */
  uint8_t map_sm_limit_mode_request[4]; /* 機能制限モード要求 */
  uint8_t map_sm_ready_status;          /* READY状態 */
  uint32_t map_sm_timestamp; /* データ送信タイムスタンプ */
  MapSmStatus map_sm_status; /* 地図状態 */
  MapSmReason map_sm_reason; /* 地図故障不調要因 */
} ADX_AppStateMap;

size_t SerializeADX_AppStateMap(void *buffer, ADX_AppStateMap *data,
                                size_t max_buffer_size);
size_t SerializeADX_AppStateMapAutoRelease(void *buffer, void *data,
                                           size_t max_buffer_size);
size_t DeserializeADX_AppStateMap(ADX_AppStateMap *data, void *buffer);
bool IsEqualADX_AppStateMap(ADX_AppStateMap *data1, ADX_AppStateMap *data2);
void InitializeADX_AppStateMap(ADX_AppStateMap *data);
void InitializeDefaultOnlyADX_AppStateMap(ADX_AppStateMap *data);

#ifdef __cplusplus
}
#endif

#endif // DATA_DEFINITION_ADX_APPSTATEMAP_H
