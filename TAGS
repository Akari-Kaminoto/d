
auto-highlight-symbol/auto-highlight-symbol.el,9444
(defconst ahs-mode-versahs-mode-vers256,7876
(defgroup auto-highlight-symbol nilauto-highlight-symbol263,8061
(defcustom ahs-modesahs-modes271,8466
(defcustom ahs-suppress-log nilahs-suppress-log312,9251
(defcustom ahs-log-echo-area-only tahs-log-echo-area-only317,9375
(defcustom ahs-decorate-log tahs-decorate-log322,9526
(defcustom ahs-default-range 'ahs-range-displayahs-default-range327,9641
(defcustom ahs-edit-mode-lighter-pair '( "*" . "*" )ahs-edit-mode-lighter-pair333,9877
(defcustom ahs-select-invisible 'immediateahs-select-invisible341,10298
(defcustom auto-highlight-symbol-mode-hook nilauto-highlight-symbol-mode-hook358,11101
(defcustom ahs-edit-mode-on-hook nilahs-edit-mode-on-hook363,11239
(defcustom ahs-edit-mode-off-hook nilahs-edit-mode-off-hook368,11373
(defvar ahs-idle-timer nilahs-idle-timer373,11506
(defcustom ahs-idle-interval 1.0ahs-idle-interval376,11597
(defface ahs-faceahs-face390,11973
(defvar ahs-face 'ahs-face)ahs-face394,12129
(defface ahs-definition-faceahs-definition-face396,12158
(defvar ahs-definition-face 'ahs-definition-face)ahs-definition-face400,12344
(defface ahs-warning-faceahs-warning-face402,12395
(defvar ahs-warning-face 'ahs-warning-face)ahs-warning-face406,12521
(defface ahs-plugin-defalt-faceahs-plugin-defalt-face408,12566
(defvar ahs-plugin-defalt-face 'ahs-plugin-defalt-face)ahs-plugin-defalt-face412,12719
(defface ahs-plugin-whole-buffer-faceahs-plugin-whole-buffer-face414,12776
(defvar ahs-plugin-whole-buffer-face 'ahs-plugin-whole-buffer-face)ahs-plugin-whole-buffer-face418,12944
(defface ahs-plugin-bod-faceahs-plugin-bod-face420,13013
(defvar ahs-plugin-bod-face 'ahs-plugin-bod-face)ahs-plugin-bod-face424,13177
(defface ahs-edit-mode-faceahs-edit-mode-face426,13228
(defvar ahs-edit-mode-face 'ahs-edit-mode-face)ahs-edit-mode-face430,13369
(defcustom ahs-case-fold-search tahs-case-fold-search435,13451
(defconst ahs-default-symbol-regexp "^[0-9A-Za-z/_.,:;*+=&%|$#@!^?-]+$"ahs-default-symbol-regexp440,13583
(defcustom ahs-include ahs-default-symbol-regexpahs-include443,13696
(defcustom ahs-exclude nilahs-exclude467,14580
(defcustom ahs-face-check-include-overlay nilahs-face-check-include-overlay492,15491
(defcustom ahs-inhibit-face-listahs-inhibit-face-list497,15641
(defcustom ahs-definition-face-listahs-definition-face-list507,15923
(defvar auto-highlight-symbol-mode-map nilauto-highlight-symbol-mode-map517,16155
(defmacro ahs-onekey-edit (keys plugin-name &optional keep keymap)ahs-onekey-edit533,16909
(defmacro ahs-onekey-change (keys plugin-name &optional keymap)ahs-onekey-change557,17690
(defvar auto-highlight-symbol-mode nilauto-highlight-symbol-mode576,18263
(defvar ahs-inhibit-modification-commandsahs-inhibit-modification-commands579,18349
(defvar ahs-unhighlight-allowed-commandsahs-unhighlight-allowed-commands583,18415
(defvar ahs-range-plugin-list nilahs-range-plugin-list594,18674
(defvar ahs-search-work  nil)ahs-search-work597,18740
(defvar ahs-need-fontify nil)ahs-need-fontify598,18770
(defvar ahs-current-overlay      nil)ahs-current-overlay601,18826
(defvar ahs-current-range        nil)ahs-current-range602,18864
(defvar ahs-edit-mode-enable     nil)ahs-edit-mode-enable603,18902
(defvar ahs-highlighted          nil)ahs-highlighted604,18940
(defvar ahs-inhibit-modification nil)ahs-inhibit-modification605,18978
(defvar ahs-mode-line            nil)ahs-mode-line606,19016
(defvar ahs-onekey-range-store   nil)ahs-onekey-range-store607,19054
(defvar ahs-opened-overlay-list  nil)ahs-opened-overlay-list608,19092
(defvar ahs-overlay-list         nil)ahs-overlay-list609,19130
(defvar ahs-start-modification   nil)ahs-start-modification610,19168
(defvar ahs-start-point          nil)ahs-start-point611,19206
(defconst ahs-log-dataahs-log-data628,19887
(defmacro ahs-decorate-if (body face)ahs-decorate-if660,21435
(defmacro ahs-log-format (key)ahs-log-format665,21549
(defun ahs-log (key &rest args)ahs-log668,21617
(defmacro ahs-regist-range-plugin (plugin-name body &optional docstring)ahs-regist-range-plugin680,21909
(defun ahs-decorated-current-plugin-name ()ahs-decorated-current-plugin-name697,22567
(defun ahs-plugin-error-message (err prop range)ahs-plugin-error-message704,22807
(defun ahs-get-plugin-prop (prop range &optional arg)ahs-get-plugin-prop717,23288
(defun ahs-current-plugin-prop (prop &optional arg)ahs-current-plugin-prop745,24231
(defun ahs-valid-plugin-p (range &optional plugin-name)ahs-valid-plugin-p749,24400
(defun ahs-runnable-plugins (&optional getnext)ahs-runnable-plugins767,25039
(defun ahs-change-range-internal (range)ahs-change-range-internal791,25817
(defvar ahs-plugin-bod-start nil)ahs-plugin-bod-start818,26441
(defvar ahs-plugin-bod-end   nil)ahs-plugin-bod-end819,26475
(defcustom ahs-plugin-bod-modesahs-plugin-bod-modes821,26510
(defcustom ahs-plugin-bod-function 'ahs-plugin-ahs-bodahs-plugin-bod-function827,26718
(defmacro ahs-plugin-bod-error (err)ahs-plugin-bod-error834,27027
(defun ahs-plugin-orignal-n2d ()ahs-plugin-orignal-n2d839,27164
(defun ahs-plugin-ahs-bod ()ahs-plugin-ahs-bod848,27405
(defun ahs-start-timer ()ahs-start-timer899,29047
(defun ahs-restart-timer ()ahs-restart-timer905,29220
(defun ahs-idle-function ()ahs-idle-function915,29415
(defmacro ahs-add-overlay-face (pos face)ahs-add-overlay-face925,29723
(defun ahs-highlight-p ()ahs-highlight-p932,29945
(defun ahs-symbol-p (pred symbol &optional nodefs)ahs-symbol-p948,30579
(defun ahs-dropdown-list-p ()ahs-dropdown-list-p971,31194
(defun ahs-face-p (face faces)ahs-face-p976,31339
(defun ahs-get-overlay-face (pos)ahs-get-overlay-face985,31593
(defun ahs-prepare-highlight (symbol)ahs-prepare-highlight996,31859
(defun ahs-search-symbol (symbol search-range)ahs-search-symbol1007,32253
(defun ahs-fontify ()ahs-fontify1027,33074
(defun ahs-light-up ()ahs-light-up1073,34654
(defun ahs-highlight (symbol beg end)ahs-highlight1092,35368
(defun ahs-unhighlight (&optional force)ahs-unhighlight1112,36001
(defun ahs-highlight-current-symbol (beg end)ahs-highlight-current-symbol1120,36258
(defun ahs-remove-all-overlay ()ahs-remove-all-overlay1135,36863
(defun ahs-modification-hook (overlay after debut fin &optional length)ahs-modification-hook1149,37273
(defun ahs-edit-post-command-hook-function ()ahs-edit-post-command-hook-function1158,37617
(defun ahs-symbol-modification ()ahs-symbol-modification1173,38020
(defun ahs-edit-mode-on ()ahs-edit-mode-on1190,38690
(defun ahs-edit-mode-off (nomsg interactive)ahs-edit-mode-off1220,39758
(defun ahs-edit-mode-condition-p ()ahs-edit-mode-condition-p1249,40742
(defun ahs-onekey-edit-function (plugin-name keep)ahs-onekey-edit-function1258,40981
(defun ahs-select (pred &optional reverse onlydef)ahs-select1294,42124
(defun ahs-get-openable-overlays (overlay)ahs-get-openable-overlays1336,43875
(defun ahs-close-unnecessary-overlays ()ahs-close-unnecessary-overlays1344,44181
(defun ahs-open-necessary-overlay (overlay)ahs-open-necessary-overlay1360,44836
(defun ahs-open-invisible-overlay-temporary (overlay)ahs-open-invisible-overlay-temporary1375,45570
(defun ahs-store-property (overlay from to)ahs-store-property1384,45978
(defun ahs-forward-p        (x) (< (overlay-start ahs-current-overlay) (overlay-start x)))ahs-forward-p1390,46154
(defun ahs-backward-p       (x) (> (overlay-start ahs-current-overlay) (overlay-start x)))ahs-backward-p1391,46245
(defun ahs-definition-p     (x) (eq (overlay-get x 'face) 'ahs-definition-face))ahs-definition-p1392,46336
(defun ahs-start-point-p    (x) (equal (overlay-start x) ahs-start-point))ahs-start-point-p1393,46417
(defun ahs-inside-overlay-p (x) (and (>= (point) (overlay-start x)) (<= (point) (overlay-end x))))ahs-inside-overlay-p1394,46492
(defun ahs-inside-display-p (x) (and (>= (window-end) (overlay-start x)) (<= (window-start) (overlay-start x))))ahs-inside-display-p1395,46591
(defun ahs-hidden-p         (x) (loop for overlay in (overlays-at (overlay-start x))ahs-hidden-p1396,46704
(defun ahs-stat ()ahs-stat1403,46937
(defun ahs-stat-alert-p (status)ahs-stat-alert-p1426,47697
(defmacro ahs-decorate-number (number)ahs-decorate-number1433,47936
(defun ahs-stat-string (&optional status)ahs-stat-string1439,48110
(defun ahs-set-lighter ()ahs-set-lighter1458,48649
(defun ahs-init ()ahs-init1470,49054
(defun ahs-clear (&optional verbose)ahs-clear1477,49209
(defun ahs-mode-maybe ()ahs-mode-maybe1484,49417
(defun ahs-forward ()ahs-forward1493,49668
(defun ahs-backward ()ahs-backward1498,49782
(defun ahs-forward-definition ()ahs-forward-definition1503,49897
(defun ahs-backward-definition ()ahs-backward-definition1508,50048
(defun ahs-back-to-start ()ahs-back-to-start1513,50204
(defun ahs-change-range (&optional range nomsg)ahs-change-range1521,50404
(defun ahs-set-idle-interval (secs)ahs-set-idle-interval1538,50945
(defun ahs-display-stat ()ahs-display-stat1546,51229
(defun ahs-highlight-now ()ahs-highlight-now1565,51707
(defun ahs-goto-web ()ahs-goto-web1570,51795
(defun ahs-edit-mode (arg &optional temporary)ahs-edit-mode1578,51918
(define-globalized-minor-mode global-auto-highlight-symbol-modeglobal-auto-highlight-symbol-mode1602,52555
(define-minor-mode auto-highlight-symbol-modeauto-highlight-symbol-mode1607,52712

test.c,0

neotree/test/test-utils.el,0

neotree/test/test-vc.el,0

neotree/test/test-cmds.el,0

neotree/test/neotree-test.el,228
(defmacro neo-test--with-temp-dir (&rest body)neo-test--with-temp-dir25,832
(defun neo-test--with-temp-dir-open ()neo-test--with-temp-dir-open34,1182
(defmacro neo-test--try-open (name &rest body)neo-test--try-open40,1353

neotree/test/test-buffer.el,0

neotree/neotree.el,17212
(defconst neo-buffer-name " *NeoTree*"neo-buffer-name45,1231
(defconst neo-dirneo-dir48,1335
(defconst neo-header-height 5)neo-header-height53,1497
(defmacro neo-util--to-bool (obj)neo-util--to-bool84,2475
(defmacro neo-global--with-buffer (&rest body)neo-global--with-buffer88,2577
(defmacro neo-global--with-window (&rest body)neo-global--with-window96,2866
(defmacro neo-global--when-window (&rest body)neo-global--when-window103,3077
(defmacro neo-global--switch-to-buffer ()neo-global--switch-to-buffer109,3293
(defmacro neo-buffer--with-editing-buffer (&rest body)neo-buffer--with-editing-buffer115,3497
(defmacro neo-buffer--with-resizable-window (&rest body)neo-buffer--with-resizable-window124,3776
(defmacro neotree-make-executor (&rest fn-form)neotree-make-executor134,4094
(defgroup neotree nilneotree150,4568
(defgroup neotree-vc-options nilneotree-vc-options155,4650
(defgroup neotree-confirmations nilneotree-confirmations161,4800
(defcustom neo-window-position 'leftneo-window-position166,4922
(defcustom neo-display-action '(neo-default-display-fn)neo-display-action172,5078
(defcustom neo-create-file-auto-open nilneo-create-file-auto-open181,5386
(defcustom neo-banner-message nilneo-banner-message186,5519
(defcustom neo-show-updir-line tneo-show-updir-line191,5632
(defcustom neo-theme 'classicneo-theme196,5745
(defcustom neo-mode-line-type 'neotreeneo-mode-line-type210,6228
(defcustom neo-mode-line-custom-format nilneo-mode-line-custom-format222,6724
(defcustom neo-smart-open nilneo-smart-open228,6897
(defcustom neo-show-hidden-files nilneo-show-hidden-files233,7078
(defcustom neo-autorefresh tneo-autorefresh238,7208
(defcustom neo-window-width 25neo-window-width243,7329
(defcustom neo-window-fixed-size tneo-window-fixed-size248,7445
(defcustom neo-keymap-style 'defaultneo-keymap-style253,7598
(defcustom neo-cwd-line-style 'textneo-cwd-line-style259,7773
(defcustom neo-help-echo-style 'defaultneo-help-echo-style265,7923
(defcustom neo-click-changes-root nilneo-click-changes-root274,8284
(defcustom neo-auto-indent-point nilneo-auto-indent-point279,8447
(defcustom neo-hidden-regexp-listneo-hidden-regexp-list284,8598
(defcustom neo-enter-hook nilneo-enter-hook290,8777
(defcustom neo-after-create-hook nilneo-after-create-hook295,8885
(defcustom neo-vc-integration nilneo-vc-integration300,9008
(defcustom neo-vc-state-char-alistneo-vc-state-char-alist306,9211
(defcustom neo-confirm-change-root 'yes-or-no-pneo-confirm-change-root327,9844
(defcustom neo-confirm-create-file 'yes-or-no-pneo-confirm-create-file334,10185
(defcustom neo-confirm-create-directory 'yes-or-no-pneo-confirm-create-directory341,10500
(defcustom neo-confirm-delete-file 'yes-or-no-pneo-confirm-delete-file348,10825
(defcustom neo-confirm-delete-directory-recursively 'yes-or-no-pneo-confirm-delete-directory-recursively355,11142
(defcustom neo-confirm-kill-buffers-for-files-in-directory 'yes-or-no-pneo-confirm-kill-buffers-for-files-in-directory362,11487
(defcustom neo-toggle-window-keep-p nilneo-toggle-window-keep-p369,11855
(defcustom neo-force-change-root nilneo-force-change-root374,12012
(defcustom neo-filepath-sort-function 'string<neo-filepath-sort-function379,12137
(defface neo-banner-faceneo-banner-face390,12438
(defvar neo-banner-face 'neo-banner-face)neo-banner-face395,12688
(defface neo-header-faceneo-header-face397,12731
(defvar neo-header-face 'neo-header-face)neo-header-face402,12964
(defface neo-root-dir-faceneo-root-dir-face404,13007
(defvar neo-root-dir-face 'neo-root-dir-face)neo-root-dir-face409,13261
(defface neo-dir-link-faceneo-dir-link-face411,13308
(defvar neo-dir-link-face 'neo-dir-link-face)neo-dir-link-face416,13553
(defface neo-file-link-faceneo-file-link-face418,13600
(defvar neo-file-link-face 'neo-file-link-face)neo-file-link-face423,13833
(defface neo-button-faceneo-button-face425,13882
(defvar neo-button-face 'neo-button-face)neo-button-face429,14041
(defface neo-expand-btn-faceneo-expand-btn-face431,14084
(defvar neo-expand-btn-face 'neo-expand-btn-face)neo-expand-btn-face436,14323
(defface neo-vc-default-faceneo-vc-default-face438,14374
(defvar  neo-vc-default-face 'neo-vc-default-face)neo-vc-default-face444,14661
(defface neo-vc-user-faceneo-vc-user-face446,14713
(defvar  neo-vc-user-face 'neo-vc-user-face)neo-vc-user-face450,14919
(defface neo-vc-up-to-date-faceneo-vc-up-to-date-face452,14965
(defvar  neo-vc-up-to-date-face 'neo-vc-up-to-date-face)neo-vc-up-to-date-face457,15222
(defface neo-vc-edited-faceneo-vc-edited-face459,15280
(defvar  neo-vc-edited-face 'neo-vc-edited-face)neo-vc-edited-face464,15530
(defface neo-vc-needs-update-faceneo-vc-needs-update-face466,15580
(defvar  neo-vc-needs-update-face 'neo-vc-needs-update-face)neo-vc-needs-update-face470,15779
(defface neo-vc-needs-merge-faceneo-vc-needs-merge-face472,15841
(defvar  neo-vc-needs-merge-face 'neo-vc-needs-merge-face)neo-vc-needs-merge-face477,16091
(defface neo-vc-unlocked-changes-faceneo-vc-unlocked-changes-face479,16151
(defvar  neo-vc-unlocked-changes-face 'neo-vc-unlocked-changes-face)neo-vc-unlocked-changes-face483,16382
(defface neo-vc-added-faceneo-vc-added-face485,16452
(defvar  neo-vc-added-face 'neo-vc-added-face)neo-vc-added-face490,16701
(defface neo-vc-removed-faceneo-vc-removed-face492,16749
(defvar  neo-vc-removed-face 'neo-vc-removed-face)neo-vc-removed-face496,16944
(defface neo-vc-conflict-faceneo-vc-conflict-face498,16996
(defvar  neo-vc-conflict-face 'neo-vc-conflict-face)neo-vc-conflict-face503,17240
(defface neo-vc-missing-faceneo-vc-missing-face505,17294
(defvar  neo-vc-missing-face 'neo-vc-missing-face)neo-vc-missing-face510,17536
(defface neo-vc-ignored-faceneo-vc-ignored-face512,17588
(defvar  neo-vc-ignored-face 'neo-vc-ignored-face)neo-vc-ignored-face517,17839
(defface neo-vc-unregistered-faceneo-vc-unregistered-face519,17891
(defvar  neo-vc-unregistered-face 'neo-vc-unregistered-face)neo-vc-unregistered-face523,18054
(defvar neo-global--buffer nil)neo-global--buffer529,18136
(defvar neo-global--window nil)neo-global--window531,18169
(defvar neo-global--autorefresh-timer nil)neo-global--autorefresh-timer533,18202
(defvar neo-mode-line-formatneo-mode-line-format535,18246
(defvar-local neo-buffer--start-node nilneo-buffer--start-node555,19118
(defvar-local neo-buffer--start-line nilneo-buffer--start-line558,19208
(defvar-local neo-buffer--cursor-pos (cons nil 1)neo-buffer--cursor-pos561,19292
(defvar-local neo-buffer--last-window-pos (cons nil 1)neo-buffer--last-window-pos565,19450
(defvar-local neo-buffer--show-hidden-file-p nilneo-buffer--show-hidden-file-p568,19559
(defvar-local neo-buffer--expanded-node-list nilneo-buffer--expanded-node-list571,19641
(defvar-local neo-buffer--node-list nilneo-buffer--node-list574,19726
(defvar-local neo-buffer--node-list-1 nilneo-buffer--node-list-1577,19809
(defvar neotree-file-button-keymapneotree-file-button-keymap584,19934
(defvar neotree-dir-button-keymapneotree-dir-button-keymap592,20141
(defvar neotree-mode-mapneotree-mode-map599,20338
(define-derived-mode neotree-mode special-mode "NeoTree"neotree-mode650,23103
(defun neo-global--window-exists-p ()neo-global--window-exists-p679,24171
(defun neo-global--select-window ()neo-global--select-window684,24385
(defun neo-global--get-window (&optional auto-create-p)neo-global--get-window690,24543
(defun neo-default-display-fn (buffer _alist)neo-default-display-fn702,25016
(defun neo-global--create-window ()neo-global--create-window710,25396
(defun neo-global--get-buffer (&optional init-p)neo-global--get-buffer722,25736
(defun neo-global--file-in-root-p (path)neo-global--file-in-root-p735,26207
(defun neo-global--alone-p ()neo-global--alone-p741,26433
(defun neo-global--do-autorefresh ()neo-global--do-autorefresh748,26666
(defun neo-global--open ()neo-global--open754,26827
(defun neo-global--open-dir (path)neo-global--open-dir763,27141
(defun neo-global--open-and-find (path)neo-global--open-and-find769,27324
(defun neo-global--select-mru-window (arg)neo-global--select-mru-window783,27862
(defun neo-global--detach ()neo-global--detach820,29174
(defun neo-global--attach ()neo-global--attach829,29454
(defun neo-global--set-window-width (width)neo-global--set-window-width843,30006
(defun neo-global--reset-width ()neo-global--reset-width849,30217
(defadvice mouse-drag-vertical-linemouse-drag-vertical-line857,30373
(defadvice balance-windowsbalance-windows863,30571
(defun neo-hook--node-first-letter ()neo-hook--node-first-letter902,31717
(defun neo-util--filter (condp lst)neo-util--filter912,31952
(defun neo-util--find (where which)neo-util--find923,32275
(defun neo-util--make-printable-string (string)neo-util--make-printable-string931,32484
(defun neo-util--walk-dir (path)neo-util--walk-dir935,32634
(defun neo-util--hidden-path-filter (node)neo-util--hidden-path-filter945,32967
(defun neo-str--trim-left (s)neo-str--trim-left955,33366
(defun neo-str--trim-right (s)neo-str--trim-right961,33520
(defun neo-str--trim (s)neo-str--trim967,33669
(defun neo-path--expand-name (path &optional current-dir)neo-path--expand-name971,33796
(defun neo-path--shorten (path len)neo-path--shorten978,34059
(defun neo-path--insert-chroot-button (label path face)neo-path--insert-chroot-button990,34507
(defun neo-path--insert-header-buttonized (path)neo-path--insert-header-buttonized998,34694
(defun neo-path--updir (path)neo-path--updir1021,35750
(defun neo-path--join (root &rest dirs)neo-path--join1031,36078
(defun neo-path--file-short-name (file)neo-path--file-short-name1046,36619
(defun neo-path--file-truename (path)neo-path--file-truename1052,36905
(defun neo-path--has-subfile-p (dir)neo-path--has-subfile-p1063,37228
(defun neo-path--match-path-directory (path)neo-path--match-path-directory1070,37423
(defun neo-path--get-working-dir ()neo-path--get-working-dir1085,37941
(defun neo-path--strip (path)neo-path--strip1089,38091
(defun neo-path--path-equal-p (path1 path2)neo-path--path-equal-p1099,38374
(defun neo-path--file-equal-p (file1 file2)neo-path--file-equal-p1104,38565
(defun neo-path--file-in-directory-p (file dir)neo-path--file-in-directory-p1113,38921
(defun neo-util--kill-buffers-for-path (path)neo-util--kill-buffers-for-path1122,39278
(defun neo-util--set-window-width (window n)neo-util--set-window-width1136,39802
(defun neo-point-auto-indent ()neo-point-auto-indent1145,40137
(defun off-p (msg)off-p1152,40385
(defun neo-sort-hidden-last (x y)neo-sort-hidden-last1156,40472
(defun neo-filepath-hidden-p (node)neo-filepath-hidden-p1168,40778
(defun neo-get-unsaved-buffers-from-projectile ()neo-get-unsaved-buffers-from-projectile1175,41031
(defun neo-buffer--newline-and-begin ()neo-buffer--newline-and-begin1195,41599
(defun neo-buffer--get-icon (name)neo-buffer--get-icon1200,41696
(defun neo-buffer--insert-fold-symbol (name &optional node-name)neo-buffer--insert-fold-symbol1209,41995
(defun neo-buffer--save-cursor-pos (&optional node-path line-pos)neo-buffer--save-cursor-pos1243,43836
(defun neo-buffer--goto-cursor-pos ()neo-buffer--goto-cursor-pos1259,44530
(defun neo-buffer--node-list-clear ()neo-buffer--node-list-clear1285,45438
(defun neo-buffer--node-list-set (line-num path)neo-buffer--node-list-set1289,45534
(defun neo-buffer--insert-with-face (content face)neo-buffer--insert-with-face1304,46099
(defun neo-buffer--valid-start-node-p ()neo-buffer--valid-start-node-p1311,46315
(defun neo-buffer--create ()neo-buffer--create1315,46462
(defun neo-buffer--insert-banner ()neo-buffer--insert-banner1326,46754
(defun neo-buffer--insert-root-entry (node)neo-buffer--insert-root-entry1333,46993
(defun neo-buffer--help-echo-message (node-name)neo-buffer--help-echo-message1353,47755
(defun neo-buffer--insert-dir-entry (node depth expanded)neo-buffer--insert-dir-entry1362,47982
(defun neo-buffer--insert-file-entry (node depth)neo-buffer--insert-file-entry1378,48668
(defun neo-vc-for-node (node)neo-vc-for-node1397,49511
(defun neo-buffer--get-nodes (path)neo-buffer--get-nodes1417,50460
(defun neo-buffer--get-node-index (node nodes)neo-buffer--get-node-index1424,50813
(defun neo-buffer--expanded-node-p (node)neo-buffer--expanded-node-p1439,51232
(defun neo-buffer--set-expand (node do-expand)neo-buffer--set-expand1446,51427
(defun neo-buffer--toggle-expand (node)neo-buffer--toggle-expand1457,51853
(defun neo-buffer--insert-tree (path depth)neo-buffer--insert-tree1460,51968
(defun neo-buffer--refresh (save-pos-p &optional non-neotree-buffer)neo-buffer--refresh1475,52533
(defun neo-buffer--post-move ()neo-buffer--post-move1496,53281
(defun neo-buffer--get-button-current-line ()neo-buffer--get-button-current-line1507,53575
(defun neo-buffer--get-filename-current-line (&optional default)neo-buffer--get-filename-current-line1531,54603
(defun neo-buffer--lock-width ()neo-buffer--lock-width1539,54918
(defun neo-buffer--unlock-width ()neo-buffer--unlock-width1544,55064
(defun neo-buffer--rename-node ()neo-buffer--rename-node1548,55178
(defun neo-buffer--copy-node ()neo-buffer--copy-node1565,55834
(defun neo-buffer--select-file-node (file &optional recursive-p)neo-buffer--select-file-node1581,56466
(defun neo-buffer--change-root (root-dir)neo-buffer--change-root1610,57612
(defun neo-buffer--get-nodes-for-select-down-node (path)neo-buffer--get-nodes-for-select-down-node1623,58088
(defun neo-buffer--get-nodes-for-sibling (path)neo-buffer--get-nodes-for-sibling1632,58478
(defun neo-buffer--sibling (path &optional previous)neo-buffer--sibling1643,58870
(defun neo-buffer--execute (arg &optional file-fn dir-fn)neo-buffer--execute1652,59250
(defun neo-buffer--set-show-hidden-file-p (show-p)neo-buffer--set-show-hidden-file-p1673,59999
(defun neo-buffer--forward-line (n)neo-buffer--forward-line1678,60178
(defun neo-mode-line--compute-format (parent index ndirs nfiles)neo-mode-line--compute-format1687,60340
(defun neo-window--init (window buffer)neo-window--init1713,61609
(defun neo-window--zoom (method)neo-window--zoom1721,61824
(defun neo-window--minimize-p ()neo-window--minimize-p1736,62301
(defun neotree-next-line (&optional count)neotree-next-line1744,62463
(defun neotree-previous-line (&optional count)neotree-previous-line1750,62657
(defun neotree-find (&optional path default-path)neotree-find1757,62876
(defun neotree-click-changes-root-toggle ()neotree-click-changes-root-toggle1777,63724
(defun neo-open-dir (full-path &optional arg)neo-open-dir1784,64017
(defun neo-open-dired (full-path &optional arg)neo-open-dired1798,64437
(defun neo-open-file (full-path &optional arg)neo-open-file1806,64658
(defun neo-open-file-vertical-split (full-path arg)neo-open-file-vertical-split1817,65125
(defun neo-open-file-horizontal-split (full-path arg)neo-open-file-horizontal-split1822,65318
(defun neo-open-file-ace-window (full-path arg)neo-open-file-ace-window1827,65513
(defun neotree-change-root ()neotree-change-root1832,65706
(defun neotree-select-up-node ()neotree-select-up-node1843,66133
(defun neotree-select-down-node ()neotree-select-down-node1857,66772
(defun neotree-select-next-sibling-node ()neotree-select-next-sibling-node1894,68556
(defun neotree-select-previous-sibling-node ()neotree-select-previous-sibling-node1901,68856
(defun neotree-create-node (filename)neotree-create-node1908,69166
(defun neotree-delete-node ()neotree-delete-node1943,70787
(defun neotree-rename-node ()neotree-rename-node1982,72353
(defun neotree-copy-node ()neotree-copy-node1987,72454
(defun neotree-hidden-file-toggle ()neotree-hidden-file-toggle1992,72549
(defun neotree-empty-fn ()neotree-empty-fn1997,72710
(defun neotree-refresh (&optional is-auto-refresh)neotree-refresh2001,72808
(defun neotree-stretch-toggle ()neotree-stretch-toggle2012,73199
(defun neotree-projectile-action ()neotree-projectile-action2021,73453
(defun neotree-toggle ()neotree-toggle2037,73874
(defun neotree-show ()neotree-show2045,74045
(defun neotree-hide ()neotree-hide2057,74352
(defun neotree-dir (path)neotree-dir2064,74516
(defalias 'neotree 'neotree-show "Show the NeoTree window.")neotree2071,74704
(defun neo-bc--make-obsolete-message (from to)neo-bc--make-obsolete-message2077,74796
(defun neo-buffer--enter-file (path)neo-buffer--enter-file2080,74912
(defun neo-buffer--enter-dir (path)neo-buffer--enter-dir2083,75024
(defun neotree-enter (&optional arg)neotree-enter2086,75133
(defun neotree-quick-look (&optional arg)neotree-quick-look2092,75318
(defun neotree-enter-vertical-split ()neotree-enter-vertical-split2099,75511
(defun neotree-enter-horizontal-split ()neotree-enter-horizontal-split2104,75718
(defun neotree-enter-ace-window ()neotree-enter-ace-window2109,75931
(defun neotree-copy-filepath-to-yank-ring ()neotree-copy-filepath-to-yank-ring2114,76133
(defun neotree-split-window-sensibly (&optional window)neotree-split-window-sensibly2119,76342

neotree/Makefile,157
EMACS=emacsEMACS1,0
CURL=curl --silentCURL2,12
ERT_URL=http://git.savannah.gnu.org/cgit/emacs.git/plain/lisp/emacs-lisp/ert.el?h=emacs-24.3ERT_URL3,31

el-get/smooth-scroll/smooth-scroll.el,0

el-get/calendar+/calendar+.el,1570
(defvar calendar-mouse-3-menu-itemscalendar-mouse-3-menu-items444,17829
(defun calendar-mouse-3-menu (event)calendar-mouse-3-menu462,18631
(defvar weekend-faceweekend-face514,20904
(defvar cal-mode-line-key-helpcal-mode-line-key-help520,21128
(defcustom diary-entry-markerdiary-entry-marker543,22160
(defcustom calendar-region-markercalendar-region-marker558,22568
(defcustom calendar-local-holiday-markercalendar-local-holiday-marker579,23247
(defconst new-diary-file-docnew-diary-file-doc602,24215
(defun show-calendar ()show-calendar710,28611
(defun calendar-mode ()calendar-mode733,29429
(defun calendar-basic-setup (&optional arg)calendar-basic-setup1114,45271
(defun insert-diary-entry (arg)insert-diary-entry1241,51244
(defun generate-calendar-month (month year indent)generate-calendar-month1253,51618
(defun calendar-count-days-region (&optional weekdays-only-p)calendar-count-days-region1295,53702
(defun calendar-count-weekdays-region ()calendar-count-weekdays-region1348,56749
(defun mark-visible-calendar-date (date &optional mark priority)mark-visible-calendar-date1397,59106
(defun solar-sunrise-sunset-string (date)solar-sunrise-sunset-string1440,61029
(defun calendar-mouse-drag-region (event)calendar-mouse-drag-region1460,61807
(defun set-calendar-region-from-region ()set-calendar-region-from-region1485,62973
(defun mark-local-holidays ()mark-local-holidays1495,63268
(defsubst calendar-local-holiday-list ()calendar-local-holiday-list1506,63665
(defun monday-after-easter ()monday-after-easter1515,64030

el-get/neotree/test/test-utils.el,0

el-get/neotree/test/test-vc.el,0

el-get/neotree/test/test-cmds.el,0

el-get/neotree/test/neotree-test.el,228
(defmacro neo-test--with-temp-dir (&rest body)neo-test--with-temp-dir25,832
(defun neo-test--with-temp-dir-open ()neo-test--with-temp-dir-open34,1182
(defmacro neo-test--try-open (name &rest body)neo-test--try-open40,1353

el-get/neotree/test/test-buffer.el,0

el-get/neotree/neotree.el,17212
(defconst neo-buffer-name " *NeoTree*"neo-buffer-name45,1231
(defconst neo-dirneo-dir48,1335
(defconst neo-header-height 5)neo-header-height53,1497
(defmacro neo-util--to-bool (obj)neo-util--to-bool84,2475
(defmacro neo-global--with-buffer (&rest body)neo-global--with-buffer88,2577
(defmacro neo-global--with-window (&rest body)neo-global--with-window96,2866
(defmacro neo-global--when-window (&rest body)neo-global--when-window103,3077
(defmacro neo-global--switch-to-buffer ()neo-global--switch-to-buffer109,3293
(defmacro neo-buffer--with-editing-buffer (&rest body)neo-buffer--with-editing-buffer115,3497
(defmacro neo-buffer--with-resizable-window (&rest body)neo-buffer--with-resizable-window124,3776
(defmacro neotree-make-executor (&rest fn-form)neotree-make-executor134,4094
(defgroup neotree nilneotree150,4568
(defgroup neotree-vc-options nilneotree-vc-options155,4650
(defgroup neotree-confirmations nilneotree-confirmations161,4800
(defcustom neo-window-position 'leftneo-window-position166,4922
(defcustom neo-display-action '(neo-default-display-fn)neo-display-action172,5078
(defcustom neo-create-file-auto-open nilneo-create-file-auto-open181,5386
(defcustom neo-banner-message nilneo-banner-message186,5519
(defcustom neo-show-updir-line tneo-show-updir-line191,5632
(defcustom neo-theme 'classicneo-theme196,5745
(defcustom neo-mode-line-type 'neotreeneo-mode-line-type210,6228
(defcustom neo-mode-line-custom-format nilneo-mode-line-custom-format222,6724
(defcustom neo-smart-open nilneo-smart-open228,6897
(defcustom neo-show-hidden-files nilneo-show-hidden-files233,7078
(defcustom neo-autorefresh tneo-autorefresh238,7208
(defcustom neo-window-width 25neo-window-width243,7329
(defcustom neo-window-fixed-size tneo-window-fixed-size248,7445
(defcustom neo-keymap-style 'defaultneo-keymap-style253,7598
(defcustom neo-cwd-line-style 'textneo-cwd-line-style259,7773
(defcustom neo-help-echo-style 'defaultneo-help-echo-style265,7923
(defcustom neo-click-changes-root nilneo-click-changes-root274,8284
(defcustom neo-auto-indent-point nilneo-auto-indent-point279,8447
(defcustom neo-hidden-regexp-listneo-hidden-regexp-list284,8598
(defcustom neo-enter-hook nilneo-enter-hook290,8777
(defcustom neo-after-create-hook nilneo-after-create-hook295,8885
(defcustom neo-vc-integration nilneo-vc-integration300,9008
(defcustom neo-vc-state-char-alistneo-vc-state-char-alist306,9211
(defcustom neo-confirm-change-root 'yes-or-no-pneo-confirm-change-root327,9844
(defcustom neo-confirm-create-file 'yes-or-no-pneo-confirm-create-file334,10185
(defcustom neo-confirm-create-directory 'yes-or-no-pneo-confirm-create-directory341,10500
(defcustom neo-confirm-delete-file 'yes-or-no-pneo-confirm-delete-file348,10825
(defcustom neo-confirm-delete-directory-recursively 'yes-or-no-pneo-confirm-delete-directory-recursively355,11142
(defcustom neo-confirm-kill-buffers-for-files-in-directory 'yes-or-no-pneo-confirm-kill-buffers-for-files-in-directory362,11487
(defcustom neo-toggle-window-keep-p nilneo-toggle-window-keep-p369,11855
(defcustom neo-force-change-root nilneo-force-change-root374,12012
(defcustom neo-filepath-sort-function 'string<neo-filepath-sort-function379,12137
(defface neo-banner-faceneo-banner-face390,12438
(defvar neo-banner-face 'neo-banner-face)neo-banner-face395,12688
(defface neo-header-faceneo-header-face397,12731
(defvar neo-header-face 'neo-header-face)neo-header-face402,12964
(defface neo-root-dir-faceneo-root-dir-face404,13007
(defvar neo-root-dir-face 'neo-root-dir-face)neo-root-dir-face409,13261
(defface neo-dir-link-faceneo-dir-link-face411,13308
(defvar neo-dir-link-face 'neo-dir-link-face)neo-dir-link-face416,13553
(defface neo-file-link-faceneo-file-link-face418,13600
(defvar neo-file-link-face 'neo-file-link-face)neo-file-link-face423,13833
(defface neo-button-faceneo-button-face425,13882
(defvar neo-button-face 'neo-button-face)neo-button-face429,14041
(defface neo-expand-btn-faceneo-expand-btn-face431,14084
(defvar neo-expand-btn-face 'neo-expand-btn-face)neo-expand-btn-face436,14323
(defface neo-vc-default-faceneo-vc-default-face438,14374
(defvar  neo-vc-default-face 'neo-vc-default-face)neo-vc-default-face444,14661
(defface neo-vc-user-faceneo-vc-user-face446,14713
(defvar  neo-vc-user-face 'neo-vc-user-face)neo-vc-user-face450,14919
(defface neo-vc-up-to-date-faceneo-vc-up-to-date-face452,14965
(defvar  neo-vc-up-to-date-face 'neo-vc-up-to-date-face)neo-vc-up-to-date-face457,15222
(defface neo-vc-edited-faceneo-vc-edited-face459,15280
(defvar  neo-vc-edited-face 'neo-vc-edited-face)neo-vc-edited-face464,15530
(defface neo-vc-needs-update-faceneo-vc-needs-update-face466,15580
(defvar  neo-vc-needs-update-face 'neo-vc-needs-update-face)neo-vc-needs-update-face470,15779
(defface neo-vc-needs-merge-faceneo-vc-needs-merge-face472,15841
(defvar  neo-vc-needs-merge-face 'neo-vc-needs-merge-face)neo-vc-needs-merge-face477,16091
(defface neo-vc-unlocked-changes-faceneo-vc-unlocked-changes-face479,16151
(defvar  neo-vc-unlocked-changes-face 'neo-vc-unlocked-changes-face)neo-vc-unlocked-changes-face483,16382
(defface neo-vc-added-faceneo-vc-added-face485,16452
(defvar  neo-vc-added-face 'neo-vc-added-face)neo-vc-added-face490,16701
(defface neo-vc-removed-faceneo-vc-removed-face492,16749
(defvar  neo-vc-removed-face 'neo-vc-removed-face)neo-vc-removed-face496,16944
(defface neo-vc-conflict-faceneo-vc-conflict-face498,16996
(defvar  neo-vc-conflict-face 'neo-vc-conflict-face)neo-vc-conflict-face503,17240
(defface neo-vc-missing-faceneo-vc-missing-face505,17294
(defvar  neo-vc-missing-face 'neo-vc-missing-face)neo-vc-missing-face510,17536
(defface neo-vc-ignored-faceneo-vc-ignored-face512,17588
(defvar  neo-vc-ignored-face 'neo-vc-ignored-face)neo-vc-ignored-face517,17839
(defface neo-vc-unregistered-faceneo-vc-unregistered-face519,17891
(defvar  neo-vc-unregistered-face 'neo-vc-unregistered-face)neo-vc-unregistered-face523,18054
(defvar neo-global--buffer nil)neo-global--buffer529,18136
(defvar neo-global--window nil)neo-global--window531,18169
(defvar neo-global--autorefresh-timer nil)neo-global--autorefresh-timer533,18202
(defvar neo-mode-line-formatneo-mode-line-format535,18246
(defvar-local neo-buffer--start-node nilneo-buffer--start-node555,19118
(defvar-local neo-buffer--start-line nilneo-buffer--start-line558,19208
(defvar-local neo-buffer--cursor-pos (cons nil 1)neo-buffer--cursor-pos561,19292
(defvar-local neo-buffer--last-window-pos (cons nil 1)neo-buffer--last-window-pos565,19450
(defvar-local neo-buffer--show-hidden-file-p nilneo-buffer--show-hidden-file-p568,19559
(defvar-local neo-buffer--expanded-node-list nilneo-buffer--expanded-node-list571,19641
(defvar-local neo-buffer--node-list nilneo-buffer--node-list574,19726
(defvar-local neo-buffer--node-list-1 nilneo-buffer--node-list-1577,19809
(defvar neotree-file-button-keymapneotree-file-button-keymap584,19934
(defvar neotree-dir-button-keymapneotree-dir-button-keymap592,20141
(defvar neotree-mode-mapneotree-mode-map599,20338
(define-derived-mode neotree-mode special-mode "NeoTree"neotree-mode650,23103
(defun neo-global--window-exists-p ()neo-global--window-exists-p679,24171
(defun neo-global--select-window ()neo-global--select-window684,24385
(defun neo-global--get-window (&optional auto-create-p)neo-global--get-window690,24543
(defun neo-default-display-fn (buffer _alist)neo-default-display-fn702,25016
(defun neo-global--create-window ()neo-global--create-window710,25396
(defun neo-global--get-buffer (&optional init-p)neo-global--get-buffer722,25736
(defun neo-global--file-in-root-p (path)neo-global--file-in-root-p735,26207
(defun neo-global--alone-p ()neo-global--alone-p741,26433
(defun neo-global--do-autorefresh ()neo-global--do-autorefresh748,26666
(defun neo-global--open ()neo-global--open754,26827
(defun neo-global--open-dir (path)neo-global--open-dir763,27141
(defun neo-global--open-and-find (path)neo-global--open-and-find769,27324
(defun neo-global--select-mru-window (arg)neo-global--select-mru-window783,27862
(defun neo-global--detach ()neo-global--detach820,29174
(defun neo-global--attach ()neo-global--attach829,29454
(defun neo-global--set-window-width (width)neo-global--set-window-width843,30006
(defun neo-global--reset-width ()neo-global--reset-width849,30217
(defadvice mouse-drag-vertical-linemouse-drag-vertical-line857,30373
(defadvice balance-windowsbalance-windows863,30571
(defun neo-hook--node-first-letter ()neo-hook--node-first-letter902,31717
(defun neo-util--filter (condp lst)neo-util--filter912,31952
(defun neo-util--find (where which)neo-util--find923,32275
(defun neo-util--make-printable-string (string)neo-util--make-printable-string931,32484
(defun neo-util--walk-dir (path)neo-util--walk-dir935,32634
(defun neo-util--hidden-path-filter (node)neo-util--hidden-path-filter945,32967
(defun neo-str--trim-left (s)neo-str--trim-left955,33366
(defun neo-str--trim-right (s)neo-str--trim-right961,33520
(defun neo-str--trim (s)neo-str--trim967,33669
(defun neo-path--expand-name (path &optional current-dir)neo-path--expand-name971,33796
(defun neo-path--shorten (path len)neo-path--shorten978,34059
(defun neo-path--insert-chroot-button (label path face)neo-path--insert-chroot-button990,34507
(defun neo-path--insert-header-buttonized (path)neo-path--insert-header-buttonized998,34694
(defun neo-path--updir (path)neo-path--updir1021,35750
(defun neo-path--join (root &rest dirs)neo-path--join1031,36078
(defun neo-path--file-short-name (file)neo-path--file-short-name1046,36619
(defun neo-path--file-truename (path)neo-path--file-truename1052,36905
(defun neo-path--has-subfile-p (dir)neo-path--has-subfile-p1063,37228
(defun neo-path--match-path-directory (path)neo-path--match-path-directory1070,37423
(defun neo-path--get-working-dir ()neo-path--get-working-dir1085,37941
(defun neo-path--strip (path)neo-path--strip1089,38091
(defun neo-path--path-equal-p (path1 path2)neo-path--path-equal-p1099,38374
(defun neo-path--file-equal-p (file1 file2)neo-path--file-equal-p1104,38565
(defun neo-path--file-in-directory-p (file dir)neo-path--file-in-directory-p1113,38921
(defun neo-util--kill-buffers-for-path (path)neo-util--kill-buffers-for-path1122,39278
(defun neo-util--set-window-width (window n)neo-util--set-window-width1136,39802
(defun neo-point-auto-indent ()neo-point-auto-indent1145,40137
(defun off-p (msg)off-p1152,40385
(defun neo-sort-hidden-last (x y)neo-sort-hidden-last1156,40472
(defun neo-filepath-hidden-p (node)neo-filepath-hidden-p1168,40778
(defun neo-get-unsaved-buffers-from-projectile ()neo-get-unsaved-buffers-from-projectile1175,41031
(defun neo-buffer--newline-and-begin ()neo-buffer--newline-and-begin1195,41599
(defun neo-buffer--get-icon (name)neo-buffer--get-icon1200,41696
(defun neo-buffer--insert-fold-symbol (name &optional node-name)neo-buffer--insert-fold-symbol1209,41995
(defun neo-buffer--save-cursor-pos (&optional node-path line-pos)neo-buffer--save-cursor-pos1243,43836
(defun neo-buffer--goto-cursor-pos ()neo-buffer--goto-cursor-pos1259,44530
(defun neo-buffer--node-list-clear ()neo-buffer--node-list-clear1285,45438
(defun neo-buffer--node-list-set (line-num path)neo-buffer--node-list-set1289,45534
(defun neo-buffer--insert-with-face (content face)neo-buffer--insert-with-face1304,46099
(defun neo-buffer--valid-start-node-p ()neo-buffer--valid-start-node-p1311,46315
(defun neo-buffer--create ()neo-buffer--create1315,46462
(defun neo-buffer--insert-banner ()neo-buffer--insert-banner1326,46754
(defun neo-buffer--insert-root-entry (node)neo-buffer--insert-root-entry1333,46993
(defun neo-buffer--help-echo-message (node-name)neo-buffer--help-echo-message1353,47755
(defun neo-buffer--insert-dir-entry (node depth expanded)neo-buffer--insert-dir-entry1362,47982
(defun neo-buffer--insert-file-entry (node depth)neo-buffer--insert-file-entry1378,48668
(defun neo-vc-for-node (node)neo-vc-for-node1397,49511
(defun neo-buffer--get-nodes (path)neo-buffer--get-nodes1417,50460
(defun neo-buffer--get-node-index (node nodes)neo-buffer--get-node-index1424,50813
(defun neo-buffer--expanded-node-p (node)neo-buffer--expanded-node-p1439,51232
(defun neo-buffer--set-expand (node do-expand)neo-buffer--set-expand1446,51427
(defun neo-buffer--toggle-expand (node)neo-buffer--toggle-expand1457,51853
(defun neo-buffer--insert-tree (path depth)neo-buffer--insert-tree1460,51968
(defun neo-buffer--refresh (save-pos-p &optional non-neotree-buffer)neo-buffer--refresh1475,52533
(defun neo-buffer--post-move ()neo-buffer--post-move1496,53281
(defun neo-buffer--get-button-current-line ()neo-buffer--get-button-current-line1507,53575
(defun neo-buffer--get-filename-current-line (&optional default)neo-buffer--get-filename-current-line1531,54603
(defun neo-buffer--lock-width ()neo-buffer--lock-width1539,54918
(defun neo-buffer--unlock-width ()neo-buffer--unlock-width1544,55064
(defun neo-buffer--rename-node ()neo-buffer--rename-node1548,55178
(defun neo-buffer--copy-node ()neo-buffer--copy-node1565,55834
(defun neo-buffer--select-file-node (file &optional recursive-p)neo-buffer--select-file-node1581,56466
(defun neo-buffer--change-root (root-dir)neo-buffer--change-root1610,57612
(defun neo-buffer--get-nodes-for-select-down-node (path)neo-buffer--get-nodes-for-select-down-node1623,58088
(defun neo-buffer--get-nodes-for-sibling (path)neo-buffer--get-nodes-for-sibling1632,58478
(defun neo-buffer--sibling (path &optional previous)neo-buffer--sibling1643,58870
(defun neo-buffer--execute (arg &optional file-fn dir-fn)neo-buffer--execute1652,59250
(defun neo-buffer--set-show-hidden-file-p (show-p)neo-buffer--set-show-hidden-file-p1673,59999
(defun neo-buffer--forward-line (n)neo-buffer--forward-line1678,60178
(defun neo-mode-line--compute-format (parent index ndirs nfiles)neo-mode-line--compute-format1687,60340
(defun neo-window--init (window buffer)neo-window--init1713,61609
(defun neo-window--zoom (method)neo-window--zoom1721,61824
(defun neo-window--minimize-p ()neo-window--minimize-p1736,62301
(defun neotree-next-line (&optional count)neotree-next-line1744,62463
(defun neotree-previous-line (&optional count)neotree-previous-line1750,62657
(defun neotree-find (&optional path default-path)neotree-find1757,62876
(defun neotree-click-changes-root-toggle ()neotree-click-changes-root-toggle1777,63724
(defun neo-open-dir (full-path &optional arg)neo-open-dir1784,64017
(defun neo-open-dired (full-path &optional arg)neo-open-dired1798,64437
(defun neo-open-file (full-path &optional arg)neo-open-file1806,64658
(defun neo-open-file-vertical-split (full-path arg)neo-open-file-vertical-split1817,65125
(defun neo-open-file-horizontal-split (full-path arg)neo-open-file-horizontal-split1822,65318
(defun neo-open-file-ace-window (full-path arg)neo-open-file-ace-window1827,65513
(defun neotree-change-root ()neotree-change-root1832,65706
(defun neotree-select-up-node ()neotree-select-up-node1843,66133
(defun neotree-select-down-node ()neotree-select-down-node1857,66772
(defun neotree-select-next-sibling-node ()neotree-select-next-sibling-node1894,68556
(defun neotree-select-previous-sibling-node ()neotree-select-previous-sibling-node1901,68856
(defun neotree-create-node (filename)neotree-create-node1908,69166
(defun neotree-delete-node ()neotree-delete-node1943,70787
(defun neotree-rename-node ()neotree-rename-node1982,72353
(defun neotree-copy-node ()neotree-copy-node1987,72454
(defun neotree-hidden-file-toggle ()neotree-hidden-file-toggle1992,72549
(defun neotree-empty-fn ()neotree-empty-fn1997,72710
(defun neotree-refresh (&optional is-auto-refresh)neotree-refresh2001,72808
(defun neotree-stretch-toggle ()neotree-stretch-toggle2012,73199
(defun neotree-projectile-action ()neotree-projectile-action2021,73453
(defun neotree-toggle ()neotree-toggle2037,73874
(defun neotree-show ()neotree-show2045,74045
(defun neotree-hide ()neotree-hide2057,74352
(defun neotree-dir (path)neotree-dir2064,74516
(defalias 'neotree 'neotree-show "Show the NeoTree window.")neotree2071,74704
(defun neo-bc--make-obsolete-message (from to)neo-bc--make-obsolete-message2077,74796
(defun neo-buffer--enter-file (path)neo-buffer--enter-file2080,74912
(defun neo-buffer--enter-dir (path)neo-buffer--enter-dir2083,75024
(defun neotree-enter (&optional arg)neotree-enter2086,75133
(defun neotree-quick-look (&optional arg)neotree-quick-look2092,75318
(defun neotree-enter-vertical-split ()neotree-enter-vertical-split2099,75511
(defun neotree-enter-horizontal-split ()neotree-enter-horizontal-split2104,75718
(defun neotree-enter-ace-window ()neotree-enter-ace-window2109,75931
(defun neotree-copy-filepath-to-yank-ring ()neotree-copy-filepath-to-yank-ring2114,76133
(defun neotree-split-window-sensibly (&optional window)neotree-split-window-sensibly2119,76342

el-get/neotree/Makefile,157
EMACS=emacsEMACS1,0
CURL=curl --silentCURL2,12
ERT_URL=http://git.savannah.gnu.org/cgit/emacs.git/plain/lisp/emacs-lisp/ert.el?h=emacs-24.3ERT_URL3,31

el-get/ac-anything/ac-anything.el,553
(defvar ac-anything-version "$Id: ac-anything.el,v 1.6 2009/11/11 17:13:11 rubikitch Exp $")ac-anything-version83,2425
(defun ac-complete-with-anything ()ac-complete-with-anything93,2859
(defun anything-c-auto-complete-init ()anything-c-auto-complete-init101,3138
(defun anything-c-auto-complete-action (string)anything-c-auto-complete-action110,3464
(defun anything-c-auto-complete-candidates ()anything-c-auto-complete-candidates118,3759
(defvar anything-c-source-auto-complete-candidatesanything-c-source-auto-complete-candidates131,4204

el-get/el-get/el-get-notify.el,1013
(defcustom el-get-growl-notify-path "/usr/local/bin/growlnotify"el-get-growl-notify-path19,613
(define-obsolete-variable-alias 'el-get-growl-notify 'el-get-growl-notify-path "4.0")el-get-growl-notify24,753
(defcustom el-get-notify-type 'bothel-get-notify-type38,1321
(defun el-get-notify (title message)el-get-notify55,2029
(defun el-get-post-install-notification (package)el-get-post-install-notification87,3740
(defun el-get-post-update-notification (package)el-get-post-update-notification93,4032
(defun el-get-post-remove-notification (package)el-get-post-remove-notification99,4315
(defun el-get-post-error-notification (package info)el-get-post-error-notification105,4598
(defun el-get-post-init-message (package)el-get-post-init-message114,4900
(defun el-get-post-update-message (package)el-get-post-update-message119,5126
(defun el-get-post-remove-message (package)el-get-post-remove-message124,5351
(defun el-get-post-error-message (package info)el-get-post-error-message129,5576

el-get/el-get/cleanup-whitespace.sh,0

el-get/el-get/recipes/ac-ghc-mod.el,0

el-get/el-get/.dir-locals.el,0

el-get/el-get/el-get-methods.el,72
(defun el-get-insecure-check (package url)el-get-insecure-check27,810

el-get/el-get/methods/el-get-emacswiki.el,747
(defcustom el-get-emacswiki-base-urlel-get-emacswiki-base-url19,519
(defcustom el-get-emacswiki-elisp-file-list-urlel-get-emacswiki-elisp-file-list-url30,1075
(defun el-get-emacswiki-install (package url post-install-fun)el-get-emacswiki-install41,1428
(defun el-get-emacswiki-compute-checksum (package)el-get-emacswiki-compute-checksum47,1768
(defun el-get-emacswiki-guess-website (package)el-get-emacswiki-guess-website53,2066
(defun el-get-emacswiki-retrieve-package-list ()el-get-emacswiki-retrieve-package-list65,2472
(defun el-get-emacswiki-build-local-recipes (&optional target-dir)el-get-emacswiki-build-local-recipes92,3709
(defun el-get-emacswiki-refresh (&optional target-dir in-process)el-get-emacswiki-refresh119,4977

el-get/el-get/methods/el-get-github-tar.el,166
(defun el-get-github-tar-url (package)el-get-github-tar-url18,497
(defun el-get-github-tar-install (package url post-install-fun)el-get-github-tar-install32,1048

el-get/el-get/methods/el-get-builtin.el,169
(defcustom el-get-builtin-install-hook nilel-get-builtin-install-hook17,468
(defun el-get-builtin-install (package url post-install-fun)el-get-builtin-install22,595

el-get/el-get/methods/el-get-http-zip.el,93
(defun el-get-http-zip-install (package url post-install-fun)el-get-http-zip-install18,495

el-get/el-get/methods/el-get-git.el,879
(defcustom el-get-git-clone-hook nilel-get-git-clone-hook18,494
(defcustom el-get-git-shallow-clone nilel-get-git-shallow-clone23,594
(defcustom el-get-git-known-smart-domains '("www.github.com" "www.bitbucket.org" "repo.or.cz" "code.orgmode.org")el-get-git-known-smart-domains28,717
(defun el-get-git-executable ()el-get-git-executable34,973
(defun el-get-git-url-from-known-smart-domains-p (url)el-get-git-url-from-known-smart-domains-p47,1561
(defun el-get-git-is-host-smart-http-p (giturl)el-get-git-is-host-smart-http-p60,2188
(defun el-get-git-shallow-clone-supported-p (url)el-get-git-shallow-clone-supported-p82,3379
(defun el-get-git-clone (package url post-install-fun)el-get-git-clone92,3848
(defun el-get-git-pull (package url post-update-fun)el-get-git-pull153,6825
(defun el-get-git-compute-checksum (package)el-get-git-compute-checksum199,9060

el-get/el-get/methods/el-get-emacsmirror.el,284
(defun el-get-emacsmirror-get-github-source (package)el-get-emacsmirror-get-github-source20,541
(defun el-get-emacsmirror-clone (package url post-install-fun)el-get-emacsmirror-clone31,927
(defun el-get-emacsmirror-guess-website (package)el-get-emacsmirror-guess-website39,1312

el-get/el-get/methods/el-get-darcs.el,226
(defcustom el-get-darcs-get-hook nilel-get-darcs-get-hook18,493
(defun el-get-darcs-get (package url post-install-fun)el-get-darcs-get23,593
(defun el-get-darcs-pull (package url post-update-fun)el-get-darcs-pull43,1392

el-get/el-get/methods/el-get-github.el,738
(defconst el-get-github-url-type-plistel-get-github-url-type-plist18,490
(defcustom el-get-github-default-url-type 'httpsel-get-github-default-url-type25,796
(defun el-get-replace-string (from to str)el-get-replace-string40,1426
(defun el-get-github-parse-user-and-repo (package)el-get-github-parse-user-and-repo46,1638
(defun el-get-github-url-private (url-type username reponame)el-get-github-url-private59,2245
(defun el-get-github-url (package)el-get-github-url71,2750
(defun el-get-github-clone (package _url post-install-fun)el-get-github-clone81,3192
(defun el-get-github-pull (package _url post-install-fun)el-get-github-pull85,3386
(defun el-get-github-guess-website (package)el-get-github-guess-website89,3579

el-get/el-get/methods/el-get-git-svn.el,256
(defcustom el-get-git-svn-checkout-hook nilel-get-git-svn-checkout-hook17,467
(defun el-get-git-svn-clone (package url post-install-fun)el-get-git-svn-clone22,581
(defun el-get-git-svn-update (package url post-update-fun)el-get-git-svn-update56,2093

el-get/el-get/methods/el-get-apt-get.el,1201
(defcustom el-get-apt-get (executable-find "apt-get")el-get-apt-get18,494
(defcustom el-get-apt-get-base "/usr/share/emacs/site-lisp"el-get-apt-get-base23,609
(defcustom el-get-apt-get-install-hook nilel-get-apt-get-install-hook28,778
(defcustom el-get-apt-get-remove-hook nilel-get-apt-get-remove-hook33,890
(defun el-get-dpkg-package-installed-p (package)el-get-dpkg-package-installed-p41,1066
(defvar el-get-brew-base)el-get-brew-base51,1465
(defvar el-get-fink-base)el-get-fink-base52,1491
(defvar el-get-pacman-base)el-get-pacman-base53,1517
(defun el-get-dpkg-symlink (package)el-get-dpkg-symlink54,1545
(defun el-get-dpkg-remove-symlink (package)el-get-dpkg-remove-symlink75,2592
(defvar el-get-sudo-password-process-filter-pos)el-get-sudo-password-process-filter-pos90,3025
(defun el-get-sudo-password-process-filter (proc string)el-get-sudo-password-process-filter92,3075
(defun el-get-apt-get-install-if-needed (package url post-install-fun)el-get-apt-get-install-if-needed123,4508
(defun el-get-apt-get-install (package url post-install-fun)el-get-apt-get-install130,4945
(defun el-get-apt-get-remove (package url post-remove-fun)el-get-apt-get-remove149,5791

el-get/el-get/methods/el-get-http-tar.el,198
(defun el-get-http-unpack-cleanup-extract-hook (package)el-get-http-unpack-cleanup-extract-hook17,468
(defun el-get-http-tar-install (package url post-install-fun)el-get-http-tar-install39,1660

el-get/el-get/methods/el-get-bzr.el,226
(defcustom el-get-bzr-branch-hook nilel-get-bzr-branch-hook17,468
(defun el-get-bzr-branch (package url post-install-fun)el-get-bzr-branch22,570
(defun el-get-bzr-pull (package url post-update-fun)el-get-bzr-pull42,1364

el-get/el-get/methods/el-get-github-zip.el,166
(defun el-get-github-zip-url (package)el-get-github-zip-url18,497
(defun el-get-github-zip-install (package url post-install-fun)el-get-github-zip-install32,1048

el-get/el-get/methods/el-get-elpa.el,1068
(defcustom el-get-elpa-install-hook nilel-get-elpa-install-hook76,2699
(defcustom el-get-elpa-remove-hook nilel-get-elpa-remove-hook81,2813
(defun el-get-elpa-package-directory (package)el-get-elpa-package-directory86,2925
(defun el-get-elpa-package-repo (package)el-get-elpa-package-repo106,3849
(defun el-get-elpa-symlink-package (package)el-get-elpa-symlink-package129,4743
(defun el-get-elpa-install (package url post-install-fun)el-get-elpa-install154,6098
(defun el-get-elpa-update-available-p (package)el-get-elpa-update-available-p200,8582
(defvar el-get-elpa-do-refresh tel-get-elpa-do-refresh216,9366
(defun el-get-elpa-update (package url post-update-fun)el-get-elpa-update223,9618
(defun el-get-elpa-remove (package url post-remove-fun)el-get-elpa-remove244,10486
(defun el-get-elpa-post-remove (package)el-get-elpa-post-remove251,10809
(defun el-get-elpa-guess-website (package)el-get-elpa-guess-website257,10998
(defun el-get-elpa-build-local-recipes (&optional target-dir do-not-update)el-get-elpa-build-local-recipes288,12051

el-get/el-get/methods/el-get-brew.el,529
(defcustom el-get-brew (executable-find "brew")el-get-brew17,471
(defcustom el-get-brew-base "/usr/local/bin"el-get-brew-base22,582
(defcustom el-get-brew-install-hook nilel-get-brew-install-hook27,731
(defcustom el-get-brew-remove-hook nilel-get-brew-remove-hook32,837
(defun el-get-brew-install (package url post-install-fun)el-get-brew-install37,941
(defun el-get-brew-update (package url post-update-fun)el-get-brew-update56,1680
(defun el-get-brew-remove (package url post-remove-fun)el-get-brew-remove73,2352

el-get/el-get/methods/el-get-hg.el,295
(defcustom el-get-hg-clone-hook nilel-get-hg-clone-hook17,468
(defun el-get-hg-clone (package url post-install-fun)el-get-hg-clone22,566
(defun el-get-hg-pull (package url post-update-fun)el-get-hg-pull51,1795
(defun el-get-hg-compute-checksum (package)el-get-hg-compute-checksum85,3248

el-get/el-get/methods/el-get-fink.el,445
(defcustom el-get-fink (executable-find "fink")el-get-fink17,471
(defcustom el-get-fink-base "/sw/share/doc"el-get-fink-base22,582
(defcustom el-get-fink-install-hook nilel-get-fink-install-hook27,730
(defcustom el-get-fink-remove-hook nilel-get-fink-remove-hook32,836
(defun el-get-fink-install (package url post-install-fun)el-get-fink-install37,940
(defun el-get-fink-remove (package url post-remove-fun)el-get-fink-remove58,1833

el-get/el-get/methods/el-get-http.el,643
(defcustom el-get-http-install-hook nilel-get-http-install-hook19,510
(defun el-get-filename-from-url (url)el-get-filename-from-url24,617
(defun el-get-http-retrieve-callback (status package url post-install-fun &optional dest sources)el-get-http-retrieve-callback31,892
(defun el-get-http-dest-filename (package &optional url)el-get-http-dest-filename49,1857
(defun el-get-http-install (package url post-install-fun &optional dest)el-get-http-install57,2271
(defun el-get-http-compute-checksum (package &optional url)el-get-http-compute-checksum81,3450
(defun el-get-http-guess-website (package)el-get-http-guess-website89,3761

el-get/el-get/methods/el-get-cvs.el,537
(defcustom el-get-cvs-checkout-hook nilel-get-cvs-checkout-hook18,494
(defcustom el-get-cvs-http-proxy-url-use-user-name nilel-get-cvs-http-proxy-url-use-user-name23,600
(defvar url-proxy-services)url-proxy-services33,873
(defun el-get-parse-proxy (url)el-get-parse-proxy34,901
(defun el-get-cvs-checkout-proxy-url (url)el-get-cvs-checkout-proxy-url64,2104
(defun el-get-cvs-checkout (package urlp post-install-fun)el-get-cvs-checkout88,3076
(defun el-get-cvs-update (package urlp post-update-fun)el-get-cvs-update125,4783

el-get/el-get/methods/el-get-fossil.el,608
(defcustom el-get-fossil-clone-hook nilel-get-fossil-clone-hook18,493
(defcustom el-get-fossil-dir nilel-get-fossil-dir23,598
(defun el-get-fossil-executable ()el-get-fossil-executable29,770
(defun el-get-fossil-clone (package url post-install-fun)el-get-fossil-clone38,1154
(defun el-get-fossil-update (package url post-update-fun)el-get-fossil-update92,3516
(defun el-get-fossil-info (package)el-get-fossil-info119,4609
(defun el-get-fossil-compute-checksum (package)el-get-fossil-compute-checksum139,5408
(defun el-get-fossil-rmdir (package url post-remove-fun)el-get-fossil-rmdir148,5764

el-get/el-get/methods/el-get-go.el,210
(defcustom el-get-go (executable-find "go")el-get-go15,444
(defcustom el-get-go-install-hook nilel-get-go-install-hook20,544
(defun el-get-go-install (package url post-install-fun)el-get-go-install25,646

el-get/el-get/methods/el-get-pacman.el,261
(defcustom el-get-pacman-base "/usr/share/emacs/site-lisp"el-get-pacman-base17,471
(defun el-get-pacman-install (package url post-install-fun)el-get-pacman-install24,700
(defun el-get-pacman-remove (package url post-remove-fun)el-get-pacman-remove44,1618

el-get/el-get/methods/el-get-svn.el,302
(defcustom el-get-svn (executable-find "svn")el-get-svn18,494
(defcustom el-get-svn-checkout-hook nilel-get-svn-checkout-hook23,597
(defun el-get-svn-checkout (package url post-install-fun)el-get-svn-checkout31,724
(defun el-get-svn-update (package url post-update-fun)el-get-svn-update52,1554

el-get/el-get/test/run-ert-interactive.sh,0

el-get/el-get/test/el-get-tests.el,344
(defvar el-get-test-output-buffer nil)el-get-test-output-buffer10,227
(defconst el-get-test-files-direl-get-test-files-dir23,795
(defmacro el-get-with-temp-home (&rest body)el-get-with-temp-home29,964
(defconst insecure-urls '("http://example.com"insecure-urls135,5482
(defconst secure-urls '("https://example.com"secure-urls169,6943

el-get/el-get/test/check-recipe.el,0

el-get/el-get/test/travis-ci.sh,27
prereqs() {prereqs10,239

el-get/el-get/test/test-interactive.sh,34
set_default () {set_default3,21

el-get/el-get/test/test-setup.el,0

el-get/el-get/test/test-all-recipes.sh,0

el-get/el-get/test/pkgs/el-get-test-package.el,154
(defun el-get-test-a-function () t)el-get-test-a-function6,134
(defun el-get-test-an-autoloaded-function () t)el-get-test-an-autoloaded-function9,186

el-get/el-get/test/issues/el-get-issue-418.el,0

el-get/el-get/test/issues/el-get-issue-650.el,101
(defun el-get-builtin-compute-checksum (package &rest ignored)el-get-builtin-compute-checksum6,153

el-get/el-get/test/issues/el-get-issue-432.el,0

el-get/el-get/test/issues/el-get-issue-642.el,0

el-get/el-get/test/issues/el-get-issue-628.el,0

el-get/el-get/test/issues/el-get-issue-200.el,0

el-get/el-get/test/issues/el-get-issue-809.el,0

el-get/el-get/test/issues/el-get-issue-289.el,0

el-get/el-get/test/issues/el-get-issue-656.el,0

el-get/el-get/test/issues/el-get-issue-810.el,0

el-get/el-get/test/issues/el-get-issue-548.el,0

el-get/el-get/test/issues/el-get-issue-new.el,191
(defun* create-package-archive (path &key name desc version)create-package-archive6,53
(defconst old-archive-pathold-archive-path24,816
(defconst new-archive-pathnew-archive-path28,949

el-get/el-get/test/issues/el-get-issue-772.el,0

el-get/el-get/test/issues/el-get-issue-1562.el,0

el-get/el-get/test/issues/run-test.sh,0

el-get/el-get/test/issues/el-get-issue-594.el,0

el-get/el-get/test/issues/el-get-issue-1920.el,0

el-get/el-get/test/issues/el-get-issue-596.el,0

el-get/el-get/test/issues/el-get-issue-303.el,0

el-get/el-get/test/issues/el-get-issue-579.el,54
(defun post-init-function ()post-init-function7,122

el-get/el-get/test/issues/el-get-issue-541.el,0

el-get/el-get/test/issues/el-get-issue-559.el,0

el-get/el-get/test/issues/el-get-issue-new-2.el,191
(defun* create-package-archive (path &key name desc version)create-package-archive6,53
(defconst old-archive-pathold-archive-path24,816
(defconst new-archive-pathnew-archive-path28,949

el-get/el-get/test/issues/el-get-issue-683.el,77
(defun assert-package-fully-removed (pkg)assert-package-fully-removed8,186

el-get/el-get/test/issues/el-get-issue-446.el,0

el-get/el-get/test/issues/el-get-issue-1752.el,0

el-get/el-get/test/issues/el-get-issue-659.el,0

el-get/el-get/test/issues/el-get-issue-1028.el,0

el-get/el-get/test/issues/el-get-issue-652.el,0

el-get/el-get/test/issues/el-get-issue-632.el,0

el-get/el-get/test/issues/el-get-issue-1454.el,76
(defadvice require (after require-package-verbosely activate)require9,195

el-get/el-get/test/issues/el-get-issue-730.el,0

el-get/el-get/test/issues/el-get-issue-581.el,0

el-get/el-get/test/issues/el-get-issue-310.el,0

el-get/el-get/test/issues/el-get-issue-400.el,0

el-get/el-get/test/issues/el-get-issue-513.el,0

el-get/el-get/test/issues/el-get-issue-535.el,0

el-get/el-get/test/issues/el-get-issue-1615.el,0

el-get/el-get/test/issues/el-get-issue-583.el,0

el-get/el-get/test/issues/el-get-issue-1189.el,0

el-get/el-get/test/issues/el-get-issue-1006.el,0

el-get/el-get/test/issues/el-get-issue-589.el,0

el-get/el-get/test/issues/foo.php,0

el-get/el-get/test/issues/el-get-issue-619.el,0

el-get/el-get/test/issues/el-get-issue-1472.el,0

el-get/el-get/test/issues/el-get-issue-640.el,0

el-get/el-get/test/issues/el-get-issue-615.el,0

el-get/el-get/test/issues/el-get-issue-1389.el,0

el-get/el-get/test/issues/run-test-interactive.sh,0

el-get/el-get/test/issues/el-get-issue-672.el,0

el-get/el-get/test/issues/el-get-issue-1348.el,0

el-get/el-get/test/issues/el-get-issue-284.el,0

el-get/el-get/test/issues/el-get-issue-613.el,0

el-get/el-get/test/issues/el-get-issue-835.el,0

el-get/el-get/test/issues/el-get-issue-592.el,0

el-get/el-get/test/issues/el-get-issue-176.el,0

el-get/el-get/test/issues/issue-741-elpa-install-error.el,0

el-get/el-get/test/issues/run-all-tests.sh,0

el-get/el-get/test/issues/el-get-issue-586.el,0

el-get/el-get/test/issues/el-get-issue-1939.el,0

el-get/el-get/test/issues/el-get-issue-407.el,0

el-get/el-get/test/run-ert.sh,0

el-get/el-get/test/caching-speedtest.el,108
(defmacro timeit (&rest body)timeit5,66
(defmacro suppress-messages (&rest body)suppress-messages15,418

el-get/el-get/test/test-utils.sh,241
set_default () {set_default1,0
on_exit()on_exit6,128
add_on_exit()add_on_exit14,210
get_file () {get_file23,350
emacs_with_test_home() {emacs_with_test_home38,600
test_recipe () {test_recipe61,1183
run_test () {run_test96,2240

el-get/el-get/test/test-recipe-interactive.sh,0

el-get/el-get/test/test-recipe.sh,0

el-get/el-get/el-get-dependencies.el,435
(defun el-get-dependencies (packages)el-get-dependencies29,1020
(defun el-get-dependencies-graph (package)el-get-dependencies-graph38,1386
(defun* topological-sort (graph &key (test 'eql))topological-sort57,2214
(defun el-get-auto-dependencies (package &optional interactive)el-get-auto-dependencies107,4704
(defun el-get-auto-update-dependencies (package buffer &optional interactive)el-get-auto-update-dependencies148,6831

el-get/el-get/el-get.el,2997
(defvar el-get-next-packages nilel-get-next-packages201,8985
(defun el-get-installation-failed (package signal-data)el-get-installation-failed204,9095
(defun el-get-version ()el-get-version214,9414
(defun el-get-read-all-recipe-names ()el-get-read-all-recipe-names225,9802
(defun el-get-error-unless-package-p (package)el-get-error-unless-package-p233,10092
(defun el-get-read-package-name (action &optional filtered)el-get-read-package-name242,10488
(defun el-get-read-recipe-name (action)el-get-read-recipe-name251,10894
(defun el-get-find-recipe-file (package &optional dir)el-get-find-recipe-file258,11215
(defun el-get-eval-after-load (package form)el-get-eval-after-load277,12197
(defun el-get-run-package-support (form fname package)el-get-run-package-support287,12714
(defun el-get-lazy-run-package-support (form fname package)el-get-lazy-run-package-support337,15391
(defvar el-get-activated-list nilel-get-activated-list343,15649
(defun el-get-init (package)el-get-init346,15729
(defun el-get-do-init (package &optional package-status-alist)el-get-do-init357,16249
(defun el-get-install (package)el-get-install476,21705
(defun el-get-install-next-packages (&rest ignored)el-get-install-next-packages490,22321
(defun el-get-post-install-build (package)el-get-post-install-build501,22905
(defun el-get-verify-checksum (package)el-get-verify-checksum508,23224
(defun el-get-post-install (package)el-get-post-install528,24203
(defun el-get-do-install (package)el-get-do-install549,25204
(defun el-get-reload (package &optional package-status-alist)el-get-reload582,26708
(defun el-get-post-update-build (package)el-get-post-update-build633,29417
(defun el-get-post-update (package)el-get-post-update644,29899
(defun el-get-update-requires-reinstall (package)el-get-update-requires-reinstall656,30366
(defun el-get-do-update (package)el-get-do-update667,30827
(defvar el-get-update-post-dependency-fun nilel-get-update-post-dependency-fun685,31626
(defun el-get-update (package)el-get-update693,31892
(defun el-get-update-all (&optional no-prompt)el-get-update-all741,34232
(defun el-get-update-packages-of-type (type)el-get-update-packages-of-type764,35233
(defun el-get-self-update ()el-get-self-update783,35929
(defun el-get-post-remove (package)el-get-post-remove796,36494
(defun el-get-remove (package)el-get-remove803,36770
(defun el-get-reinstall (package)el-get-reinstall835,38338
(defun el-get-cleanup (packages)el-get-cleanup841,38535
(defun el-get-cd (package)el-get-cd864,39538
(defun el-get-write-recipe (source dir &optional filename)el-get-write-recipe871,39786
(defun el-get-make-recipes (&optional dir)el-get-make-recipes884,40348
(defun el-get-checksum (package)el-get-checksum899,40974
(defun el-get-self-checksum ()el-get-self-checksum917,41815
(defun el-get-init-and-install (&optional packages)el-get-init-and-install928,42047
(defun el-get (&optional sync &rest packages)el-get971,44087

el-get/el-get/el-get-check.el,1071
(defvar warning-minimum-log-level)warning-minimum-log-level25,617
(defvar warning-minimum-level)warning-minimum-level26,652
(defvar el-get-check--last-file-or-buffer nilel-get-check--last-file-or-buffer29,744
(defun el-get-check-redo ()el-get-check-redo32,829
(defvar el-get-check-mode-mapel-get-check-mode-map39,1033
(define-derived-mode el-get-check-mode special-mode "El-Get Check"el-get-check-mode46,1238
(defvar el-get-check-suppressed-warnings ()el-get-check-suppressed-warnings50,1403
(defun el-get-check-recipe-batch-1 (recipe-file)el-get-check-recipe-batch-156,1571
(defun el-get-check-recipe-batch ()el-get-check-recipe-batch66,2000
(defun el-get-check-recipe (file-or-buffer)el-get-check-recipe90,3181
(defvar el-get-check-warning-buffer)el-get-check-warning-buffer117,4245
(defvar el-get-check-error-count)el-get-check-error-count118,4282
(defun el-get-check-warning (level message &rest args)el-get-check-warning120,4317
(defun el-get-check-recipe-in-current-buffer (recipe-file-name)el-get-check-recipe-in-current-buffer128,4655

el-get/el-get/el-get-bundle.el,1663
(defgroup el-get-bundle nil "el-get-bundle"el-get-bundle18,395
(defcustom el-get-bundle-byte-compile tel-get-bundle-byte-compile21,458
(defcustom el-get-bundle-sync tel-get-bundle-sync26,595
(defcustom el-get-bundle-init-directoryel-get-bundle-init-directory36,930
(defvar el-get-bundle-sources nil)el-get-bundle-sources42,1111
(defvar el-get-bundle-init-count-alist nil)el-get-bundle-init-count-alist43,1146
(defvar el-get-bundle-init-alist nil)el-get-bundle-init-alist44,1190
(defconst el-get-bundle-gist-url-type-plistel-get-bundle-gist-url-type-plist46,1229
(defsubst el-get-bundle-gist-url (id &optional src)el-get-bundle-gist-url55,1508
(defsubst el-get-bundle-load-file-el (&optional file)el-get-bundle-load-file-el61,1803
(defun el-get-bundle-package-def (src)el-get-bundle-package-def66,1992
(defalias 'el-get-bundle-defined-p (symbol-function 'el-get-bundle-package-def))el-get-bundle-defined-p70,2150
(defun el-get-bundle-guess-type (src)el-get-bundle-guess-type72,2232
(defun el-get-bundle-parse-name (sym)el-get-bundle-parse-name91,2795
(defun el-get-bundle-init-id (callsite)el-get-bundle-init-id113,3807
(defun el-get-bundle-load-init (el)el-get-bundle-load-init120,4036
(defun el-get-bundle-make-init (src)el-get-bundle-make-init124,4186
(defun el-get-bundle-el-get (src sync)el-get-bundle-el-get164,5924
(defun el-get-bundle-post-update (package)el-get-bundle-post-update214,7968
(defun el-get-bundle-clear-init-count (callsite)el-get-bundle-clear-init-count226,8442
(defmacro el-get-bundle (package &rest form)el-get-bundle238,8914
(defmacro el-get-bundle! (package &rest args)el-get-bundle!306,11962

el-get/el-get/el-get-custom.el,2221
(defgroup el-get nil "el-get customization group"el-get29,865
(defconst el-get-version "5.1" "el-get version number")el-get-version32,939
(defconst el-get-script (or load-file-name buffer-file-name))el-get-script34,996
(defcustom el-get-dir (expand-file-name "el-get" user-emacs-directory)el-get-dir36,1059
(defcustom el-get-status-fileel-get-status-file41,1208
(defvar el-get-autoload-fileel-get-autoload-file47,1387
(defvar el-get-emacs (concat invocation-directory invocation-name)el-get-emacs51,1520
(defcustom el-get-post-init-hooks nilel-get-post-init-hooks57,1708
(defvar find-function-source-path)find-function-source-path63,1868
(defun el-get-add-load-path-to-ffsp (package)el-get-add-load-path-to-ffsp64,1903
(defcustom el-get-post-install-hooks nilel-get-post-install-hooks71,2197
(defcustom el-get-post-update-hooks nilel-get-post-update-hooks77,2366
(defcustom el-get-post-error-hooks nilel-get-post-error-hooks83,2532
(defcustom el-get-byte-compile tel-get-byte-compile89,2720
(defcustom el-get-parallel-make-argsel-get-parallel-make-args100,3125
(defcustom el-get-verbose nilel-get-verbose122,4037
(defcustom el-get-byte-compile-at-init nilel-get-byte-compile-at-init127,4192
(define-obsolete-variable-alias 'el-get-generate-autoloads 'el-get-use-autoloadsel-get-generate-autoloads136,4456
(defcustom el-get-use-autoloads tel-get-use-autoloads138,4553
(defcustom el-get-is-lazy nilel-get-is-lazy144,4730
(defcustom el-get-auto-update-cached-recipes tel-get-auto-update-cached-recipes152,5033
(defun el-get-repeat-value-to-internal (widget element-or-list)el-get-repeat-value-to-internal171,5767
(defun el-get-repeat-match (widget value)el-get-repeat-match174,5868
(define-widget 'el-get-repeat 'repeatel-get-repeat177,5997
(defun el-get-symbol-match (widget value)el-get-symbol-match182,6210
(define-widget 'el-get-symbol 'symbolel-get-symbol185,6293
(defconst el-get-build-recipe-bodyel-get-build-recipe-body191,6452
(defcustom el-get-sources nilel-get-sources210,7322
(defcustom el-get-allow-insecure tel-get-allow-insecure618,22900
(defcustom el-get-secure-protocols '("https" "ssh" "git+ssh" "bzr+ssh" "sftp")el-get-secure-protocols625,23063

el-get/el-get/el-get-byte-compile.el,667
(defun el-get-byte-compile-file (el &optional warnings)el-get-byte-compile-file33,1097
(defun el-get-byte-compile-file-or-directory (file)el-get-byte-compile-file-or-directory53,1984
(defun el-get-assemble-files-for-byte-compilation (package)el-get-assemble-files-for-byte-compilation62,2347
(defun el-get-clean-stale-compiled-files (dir &optional recursive)el-get-clean-stale-compiled-files100,4035
(defun el-get-byte-compile-from-stdin ()el-get-byte-compile-from-stdin129,5544
(defun el-get-byte-compile-process (package buffer working-dir sync files)el-get-byte-compile-process162,7182
(defun el-get-byte-compile (package)el-get-byte-compile187,8364

el-get/el-get/el-get-recipes.el,1809
(defcustom el-get-recipe-path-emacswikiel-get-recipe-path-emacswiki30,789
(defcustom el-get-recipe-path-elpael-get-recipe-path-elpa36,987
(defvar el-get-recipe-pathel-get-recipe-path42,1170
(defcustom el-get-user-package-directory nilel-get-user-package-directory59,1876
(defun el-get-load-package-user-init-file (package)el-get-load-package-user-init-file64,2070
(defun el-get-recipe-dirs ()el-get-recipe-dirs84,3042
(defun el-get-recipe-pprint (source)el-get-recipe-pprint101,3596
(defun el-get-recipe-filename (package)el-get-recipe-filename124,4499
(defun el-get-read-recipe (package)el-get-read-recipe134,5029
(defun el-get-all-recipe-file-names ()el-get-all-recipe-file-names141,5316
(defun el-get-read-all-recipe-files ()el-get-read-all-recipe-files149,5598
(defun el-get-read-all-recipes ()el-get-read-all-recipes168,6418
(defun el-get-recipe-merge (r1 r2)el-get-recipe-merge186,7261
(defun el-get-package-def (package)el-get-package-def199,7676
(defun el-get-package-method (package-or-source)el-get-package-method216,8391
(defalias 'el-get-package-type #'el-get-package-method)el-get-package-type233,9073
(defun el-get-package-types-alist (statuses &rest types)el-get-package-types-alist235,9130
(defun el-get-package-required-emacs-version (package-or-source)el-get-package-required-emacs-version252,9938
(defun el-get-package-effective-library (package-or-source)el-get-package-effective-library260,10258
(defun el-get-version-to-list (version)el-get-version-to-list280,11172
(defun el-get-error-unless-required-emacs-version (package-or-source)el-get-error-unless-required-emacs-version300,11808
(defun el-get-envpath-prepend (envname head)el-get-envpath-prepend311,12446
(defun el-get-envpath-prepend-1 (paths head)el-get-envpath-prepend-1319,12793

el-get/el-get/el-get-status.el,2605
(defun el-get-package-name (package-symbol)el-get-package-name30,876
(defun el-get-package-symbol (package)el-get-package-symbol40,1240
(defun el-get-package-keyword (package-name)el-get-package-keyword49,1556
(defvar el-get-status-cache nilel-get-status-cache55,1744
(defvar el-get-package-menu-buffer) ; from el-get-list-packages.elel-get-package-menu-buffer58,1823
(defun el-get-save-package-status (package status &optional recipe)el-get-save-package-status59,1890
(defun el-get-convert-from-old-status-format (old-status-list)el-get-convert-from-old-status-format102,3787
(defun el-get-clear-status-cache ()el-get-clear-status-cache121,4702
(defun el-get-read-status-file ()el-get-read-status-file125,4816
(defun el-get-read-status-file-force ()el-get-read-status-file-force131,5063
(defun el-get-package-status-alist ()el-get-package-status-alist160,6357
(defun el-get-package-status-recipes ()el-get-package-status-recipes165,6542
(defun el-get-read-package-status (package)el-get-read-package-status171,6795
(define-obsolete-function-alias 'el-get-package-status 'el-get-read-package-status)el-get-package-status176,6980
(defun el-get-read-package-status-recipe (package)el-get-read-package-status-recipe178,7065
(defun el-get-filter-package-alist-with-status (package-status-alist &rest statuses)el-get-filter-package-alist-with-status183,7264
(defun el-get-list-package-names-with-status (&rest statuses)el-get-list-package-names-with-status190,7570
(defun el-get-read-package-with-status (action &rest statuses)el-get-read-package-with-status196,7799
(defun el-get-count-package-with-status (&rest statuses)el-get-count-package-with-status201,8030
(defun el-get-count-packages-with-status (packages &rest statuses)el-get-count-packages-with-status205,8216
(defun el-get-extra-packages (&rest packages)el-get-extra-packages211,8526
(defmacro el-get-with-status-sources (_ &rest body)el-get-with-status-sources226,9153
(defconst el-get-status-init-whitelistel-get-status-init-whitelist233,9391
(defconst el-get-status-update-whitelistel-get-status-update-whitelist252,9813
(defun el-get-classify-new-properties (source newprops)el-get-classify-new-properties263,10063
(defun el-get-diagnosis-properties (old-source new-source)el-get-diagnosis-properties293,11714
(defun el-get-package-or-source (package-or-source)el-get-package-or-source310,12657
(defun el-get-read-cached-recipe (package source)el-get-read-cached-recipe318,12955
(defun el-get-merge-properties-into-status (package-or-sourceel-get-merge-properties-into-status331,13539

el-get/el-get/el-get-build.el,612
(defvar Info-directory-list)Info-directory-list20,571
(defvar el-get-install-info (or (executable-find "ginstall-info")el-get-install-info24,691
(defun el-get-build-commands (package &optional safe-eval system)el-get-build-commands27,825
(defun el-get-build-command-program (name)el-get-build-command-program76,3115
(defun el-get-buildel-get-build89,3686
(defvar el-get-info-paths-to-add nilel-get-info-paths-to-add168,7847
(defun el-get-set-info-path (package infodir-rel)el-get-set-info-path171,7959
(defun el-get-install-or-init-info (package build-or-init)el-get-install-or-init-info188,8866

el-get/el-get/el-get-install.el,0

el-get/el-get/el-get-autoloading.el,724
(defvar el-get-outdated-autoloads nilel-get-outdated-autoloads25,823
(defun el-get-ensure-byte-compilable-autoload-file (file)el-get-ensure-byte-compilable-autoload-file28,918
(defun el-get-load-fast (file)el-get-load-fast39,1455
(defun el-get-eval-autoloads ()el-get-eval-autoloads43,1630
(defvar recentf-exclude)recentf-exclude50,1909
(defun el-get-update-autoloads (package)el-get-update-autoloads52,1935
(defconst el-get-autoload-regexpel-get-autoload-regexp98,3922
(defun el-get-remove-autoloads (package)el-get-remove-autoloads105,4168
(defun el-get-want-autoloads-p (package)el-get-want-autoloads-p132,5667
(defun el-get-invalidate-autoloads (&optional package)el-get-invalidate-autoloads139,5946

el-get/el-get/el-get-core.el,2945
(defun el-get-print-to-string (object &optional pretty)el-get-print-to-string30,941
(defun el-get-verbose-message (format &rest arguments)el-get-verbose-message41,1367
(defmacro el-get-with-errors-as-warnings (prefix &rest body)el-get-with-errors-as-warnings44,1482
(defsubst el-get-plist-keys (plist)el-get-plist-keys55,1854
(defsubst el-get-keyword-name (keyword)el-get-keyword-name64,2051
(defvar el-get-methods nilel-get-methods79,2442
(defun el-get-method-defined-p (name)el-get-method-defined-p88,2859
(defun* el-get-register-method (name &key install update removeel-get-register-method92,3018
(defun* el-get-register-derived-method (name derived-from-nameel-get-register-derived-method116,4225
(defun el-get-register-method-alias (name old-name)el-get-register-method-alias129,4848
(defun el-get-as-string (obj)el-get-as-string143,5354
(defun el-get-as-symbol (string-or-symbol)el-get-as-symbol151,5574
(defun el-get-as-list (element-or-list)el-get-as-list157,5807
(defun el-get-list-of-strings-p (obj)el-get-list-of-strings-p163,6036
(defun el-get-source-name (source)el-get-source-name169,6197
(defun el-get-rmdir (package url post-remove-fun)el-get-rmdir181,6528
(defconst el-get-no-shell-quote "\\`[-,./_[:alnum:]]+\\'"el-get-no-shell-quote200,7418
(defun el-get-shell-quote-program (program-name)el-get-shell-quote-program203,7546
(defun el-get-maybe-shell-quote-argument (arg)el-get-maybe-shell-quote-argument216,8226
(defun el-get-read-from-file (filename)el-get-read-from-file221,8402
(defun el-get-package-is-installed (package)el-get-package-is-installed230,8713
(defalias 'el-get-package-installed-p #'el-get-package-is-installed)el-get-package-installed-p236,8944
(defun el-get-duplicates (list)el-get-duplicates242,9036
(defun el-get-flatten (arg)el-get-flatten250,9273
(defun el-get-unquote (arg)el-get-unquote259,9517
(defun el-get-load-path (package)el-get-load-path263,9636
(defun el-get-method (method-name action)el-get-method273,10093
(defun el-get-check-init ()el-get-check-init283,10501
(defun el-get-package-directory (package)el-get-package-directory288,10638
(defun el-get-add-path-to-list (package list path)el-get-add-path-to-list294,10870
(defun el-get-package-exists-p (package)el-get-package-exists-p304,11309
(defun el-get-url-host (url)el-get-url-host312,11630
(defun el-get-package-files (pdir)el-get-package-files328,12207
(defun el-get-package-features (pdir)el-get-package-features337,12629
(defun el-get-start-process-list-sentinel (proc change)el-get-start-process-list-sentinel350,13105
(defvar el-get-default-process-sync nilel-get-default-process-sync378,14380
(defun el-get-start-process-list (package commands final-func)el-get-start-process-list383,14599
(defun el-get-executable-find (name)el-get-executable-find525,20465
(defun el-get-plist-get-with-default (plist prop def)el-get-plist-get-with-default565,21889

el-get/el-get/el-get-list-packages.el,2830
(defvar el-get-package-menu-buffer nilel-get-package-menu-buffer28,916
(define-button-type 'el-get-help-package-defel-get-help-package-def32,1079
(define-button-type 'el-get-help-installel-get-help-install37,1293
(define-button-type 'el-get-help-removeel-get-help-remove46,1651
(define-button-type 'el-get-help-updateel-get-help-update55,2008
(define-button-type 'el-get-help-cdel-get-help-cd64,2362
(define-button-type 'el-get-help-describe-packageel-get-help-describe-package69,2504
(defun el-get-describe-princ-button (label regex type &rest args)el-get-describe-princ-button74,2672
(defun el-get-guess-website (package)el-get-guess-website85,3065
(defun el-get-describe-1 (package)el-get-describe-191,3259
(defun el-get-describe (package &optional interactive-p)el-get-describe171,6826
(defcustom el-get-package-menu-view-recipe-functionel-get-package-menu-view-recipe-function186,7299
(defvar el-get-package-menu-mode-hook nilel-get-package-menu-mode-hook197,7527
(defvar el-get-package-menu-mode-map nilel-get-package-menu-mode-map200,7620
(defvar el-get-package-menu-sort-key nilel-get-package-menu-sort-key203,7703
(defconst el-get-package-list-column-alistel-get-package-list-column-alist206,7771
(defun el-get-package-menu-get-package-name ()el-get-package-menu-get-package-name213,7957
(defun el-get-package-menu-view-recipe ()el-get-package-menu-view-recipe219,8114
(defun el-get-package-menu-get-status ()el-get-package-menu-get-status227,8418
(defun el-get-package-menu-mark (what)el-get-package-menu-mark233,8584
(defun el-get-package-menu-mark-install ()el-get-package-menu-mark-install242,8799
(defun el-get-package-menu-mark-update ()el-get-package-menu-mark-update248,9027
(defun el-get-package-menu-mark-delete ()el-get-package-menu-mark-delete254,9255
(defun el-get-package-menu-mark-unmark ()el-get-package-menu-mark-unmark260,9483
(defun el-get-package-menu-revert ()el-get-package-menu-revert264,9576
(defun el-get-package-menu-execute ()el-get-package-menu-execute271,9745
(defun el-get-package-menu-describe ()el-get-package-menu-describe295,10592
(defun el-get-package-menu-quick-help ()el-get-package-menu-quick-help299,10708
(defun el-get-package-on-kill ()el-get-package-on-kill319,11947
(defun el-get-package-menu-mode ()el-get-package-menu-mode324,12111
(defun el-get-print-package (package-name status &optional type desc)el-get-print-package340,12698
(defun el-get-list-all-packages ()el-get-list-all-packages368,13861
(defun el-get-package-menu-sort-by-column (&optional e)el-get-package-menu-sort-by-column403,15643
(defvar el-get-package-menu-sort-button-mapel-get-package-menu-sort-button-map417,16259
(defun el-get-package-menu ()el-get-package-menu424,16524
(defun el-get-list-packages ()el-get-list-packages446,17418

el-get/dired+/dired+.el,0

el-get/c-eldoc/c-eldoc.el,1326
(defvar c-eldoc-cpp-macro-arguments "-dD -w -P")c-eldoc-cpp-macro-arguments125,4543
(defvar c-eldoc-cpp-normal-arguments "-w -P")c-eldoc-cpp-normal-arguments126,4592
(defvar c-eldoc-cpp-command "/usr/bin/cpp ")c-eldoc-cpp-command127,4638
(defvar c-eldoc-includesc-eldoc-includes128,4683
(defvar c-eldoc-reserved-wordsc-eldoc-reserved-words135,4953
(defvar c-eldoc-buffer-regenerate-timec-eldoc-buffer-regenerate-time139,5087
(defvar c-eldoc-get-buffer-hookc-eldoc-get-buffer-hook143,5180
(defun c-eldoc-time-diff (t1 t2)c-eldoc-time-diff147,5279
(defun c-eldoc-time-difference (old-time)c-eldoc-time-difference153,5538
(defun c-eldoc-buffer-mod-tick-difference (old-tick)c-eldoc-buffer-mod-tick-difference157,5756
(defun call-c-eldoc-cleanup ()call-c-eldoc-cleanup161,5984
(defun c-eldoc-cleanup (preprocessed-buffer)c-eldoc-cleanup165,6135
(defvar c-eldoc-buffersc-eldoc-buffers168,6218
(defun c-turn-on-eldoc-mode ()c-turn-on-eldoc-mode174,6521
(defun c-eldoc-get-buffer (function-name)c-eldoc-get-buffer188,6974
(defun c-eldoc-function-and-argument (&optional limit)c-eldoc-function-and-argument224,8961
(defun c-eldoc-format-arguments-string (arguments index)c-eldoc-format-arguments-string251,10075
(defun c-eldoc-print-current-symbol-info ()c-eldoc-print-current-symbol-info279,11415

el-get/c-eldoc/Makefile,0

el-get/linum-ex/linum-ex.el,0

el-get/.loaddefs.el,1147
(defvar global-auto-highlight-symbol-mode nil "\global-auto-highlight-symbol-mode11,301
(defalias 'neotree 'neotree-show "\neotree83,2646
(defvar diary-entry-marker (if (not window-system) "+" (require 'faces) (make-face 'diary-face) (if (x-display-color-p) (set-face-foreground 'diary-face "Red") (copy-face 'bold 'diary-face)) 'diary-face) "\diary-entry-marker117,3599
(defvar calendar-region-marker (if (not window-system) "X" (require 'faces) (make-face 'calendar-region-face) (if (x-display-color-p) (set-face-background 'calendar-region-face "LightGray") (copy-face 'bold 'calendar-region-face)) 'calendar-region-face) "\calendar-region-marker123,3968
(defvar calendar-local-holiday-marker (if (not window-system) "*" (require 'faces) (make-face 'local-holiday-face) (if (x-display-color-p) (set-face-background 'local-holiday-face "Pink") (set-face-background 'local-holiday-face "Black") (set-face-foreground 'local-holiday-face "White")) 'local-holiday-face) "\calendar-local-holiday-marker129,4385
(defalias 'neotree 'neotree-show "\neotree475,16622
(defvar volatile-highlights-mode nil "\volatile-highlights-mode486,17008

el-get/.status.el,0

el-get/volatile-highlights/volatile-highlights.el,3117
(defconst vhl/version "1.8")vhl/version195,6992
(defvar vhl/.hl-lst nilvhl/.hl-lst215,7458
(defgroup volatile-highlights nilvolatile-highlights225,7700
(defun vhl/.face-inheritance-possible-p ()vhl/.face-inheritance-possible-p231,7819
(defface vhl/default-facevhl/default-face235,7966
(defcustom Vhl/highlight-zero-width-ranges nilVhl/highlight-zero-width-ranges268,8841
(defun vhl/add-range (beg end &optional buf face)vhl/add-range286,9528
(define-obsolete-function-alias 'vhl/add 'vhl/add-range "1.5")vhl/add301,10113
(defun vhl/add-position (pos &rest other-args)vhl/add-position306,10390
(defun vhl/clear-all ()vhl/clear-all320,10966
(defun vhl/force-clear-all ()vhl/force-clear-all332,11385
(defun vhl/.make-hl (beg end buf face)vhl/.make-hl347,11923
(defun vhl/.clear-hl (hl)vhl/.clear-hl368,12607
(defun vhl/.force-clear-all-hl ()vhl/.force-clear-all-hl383,13020
(defvar vhl/.installed-extensions nil)vhl/.installed-extensions406,13709
(defun vhl/install-extension (sym)vhl/install-extension408,13749
(defun vhl/load-extension (sym)vhl/load-extension424,14495
(defun vhl/unload-extension (sym)vhl/unload-extension433,14849
(defun vhl/load-extensions ()vhl/load-extensions439,15065
(defun vhl/unload-extensions ()vhl/unload-extensions443,15169
(defvar vhl/.after-change-hook-depth 0)vhl/.after-change-hook-depth453,15493
(defun vhl/.push-to-after-change-hook (fn-name)vhl/.push-to-after-change-hook455,15534
(defun vhl/.pop-from-after-change-hook (fn-name)vhl/.pop-from-after-change-hook466,15935
(defun vhl/advice-defined-p (fn-name class ad-name)vhl/advice-defined-p477,16341
(defun vhl/disable-advice-if-defined (fn-name class ad-name)vhl/disable-advice-if-defined482,16503
(defun vhl/.make-vhl-on-change (beg end len-removed)vhl/.make-vhl-on-change487,16686
(defmacro vhl/give-advice-to-make-vhl-on-changes (fn-name)vhl/give-advice-to-make-vhl-on-changes495,16944
(defmacro vhl/cancel-advice-to-make-vhl-on-changes (fn-name)vhl/cancel-advice-to-make-vhl-on-changes512,17671
(defun vhl/require-noerror (feature &optional filename)vhl/require-noerror517,17925
(defun vhl/.make-list-string (items)vhl/.make-list-string524,18105
(defmacro vhl/define-extension (name &rest functions)vhl/define-extension559,19360
(defun vhl/ext/etags/on ()vhl/ext/etags/on643,22923
(defun vhl/ext/etags/off ()vhl/ext/etags/off656,23329
(defun vhl/ext/occur/on ()vhl/ext/occur/on670,23885
(defun vhl/ext/occur/off ()vhl/ext/occur/off750,27429
(defmacro vhl/ext/nonincremental-search/.advice-to-vhl (fn)vhl/ext/nonincremental-search/.advice-to-vhl778,28483
(defmacro vhl/ext/nonincremental-search/.disable-advice-to-vhl (fn)vhl/ext/nonincremental-search/.disable-advice-to-vhl788,28894
(defun vhl/ext/nonincremental-search/on ()vhl/ext/nonincremental-search/on794,29095
(defun vhl/ext/nonincremental-search/off ()vhl/ext/nonincremental-search/off805,29783
(defun vhl/ext/hideshow/.activate ()vhl/ext/hideshow/.activate825,30855
(defun vhl/ext/hideshow/on ()vhl/ext/hideshow/on843,31645
(defun vhl/ext/hideshow/off ()vhl/ext/hideshow/off853,31884

elpa/epl-20180205.1249/epl.el,3901
(defsubst epl--package-desc-p (package)epl--package-desc-p145,4956
(define-error 'epl-error "EPL error")epl-error154,5210
(define-error 'epl-invalid-package "Invalid EPL package" 'epl-error)epl-invalid-package156,5249
(define-error 'epl-invalid-package-file "Invalid EPL package file"epl-invalid-package-file158,5319
(defun epl-package-dir ()epl-package-dir163,5435
(defun epl-default-package-dir ()epl-default-package-dir167,5517
(defun epl-change-package-dir (directory)epl-change-package-dir171,5651
(defvar epl--load-path-before-initialize nilepl--load-path-before-initialize178,5833
(defun epl-initialize (&optional no-activate)epl-initialize181,5924
(defalias 'epl-refresh 'package-refresh-contents)epl-refresh188,6160
(defun epl-add-archive (name url)epl-add-archive190,6211
(defun epl-reset ()epl-reset194,6342
(defun epl-requirement-version-string (requirement)epl-requirement-version-string221,7101
(defmacro epl-package-as-description (var &rest body)epl-package-as-description244,7772
(defsubst epl-package--package-desc-p (package)epl-package--package-desc-p258,8292
(defun epl-package-version (package)epl-package-version262,8460
(defun epl-package-version-string (package)epl-package-version-string273,8892
(defun epl-package-summary (package)epl-package-summary277,9040
(defsubst epl-requirement--from-req (req)epl-requirement--from-req285,9371
(defun epl-package-requirements (package)epl-package-requirements292,9681
(defun epl-package-directory (package)epl-package-directory299,9929
(defun epl-package-->= (pkg1 pkg2)epl-package-->=312,10431
(defun epl-package--from-package-desc (package-desc)epl-package--from-package-desc317,10624
(defun epl-package--parse-info (info)epl-package--parse-info328,11084
(defun epl-package-from-buffer (&optional buffer)epl-package-from-buffer340,11648
(defun epl-package-from-lisp-file (file-name)epl-package-from-lisp-file353,12119
(defun epl-package-from-tar-file (file-name)epl-package-from-tar-file367,12635
(defun epl-package-from-file (file-name)epl-package-from-file392,13892
(defun epl-package--parse-descriptor-requirement (requirement)epl-package--parse-descriptor-requirement401,14195
(defun epl-package-from-descriptor-file (descriptor-file)epl-package-from-descriptor-file408,14544
(defun epl-package-installed-p (package &optional min-version)epl-package-installed-p442,16074
(defun epl--parse-built-in-entry (entry)epl--parse-built-in-entry454,16665
(defun epl-built-in-packages ()epl-built-in-packages464,17120
(defun epl-find-built-in-package (name)epl-find-built-in-package474,17486
(defun epl-package-outdated-p (package)epl-package-outdated-p487,17954
(defun epl--parse-package-list-entry (entry)epl--parse-package-list-entry508,18856
(defun epl-installed-packages ()epl-installed-packages529,19716
(defsubst epl--filter-outdated-packages (packages)epl--filter-outdated-packages535,19892
(defun epl-outdated-packages ()epl-outdated-packages543,20127
(defsubst epl--find-package-in-list (name list)epl--find-package-in-list549,20318
(defun epl-find-installed-package (name)epl-find-installed-package557,20565
(defun epl-find-installed-packages (name)epl-find-installed-packages568,20946
(defun epl-available-packages ()epl-available-packages578,21263
(defun epl-find-available-packages (name)epl-find-available-packages585,21493
(defun epl-find-upgrades (&optional packages)epl-find-upgrades606,22058
(defalias 'epl-built-in-p 'package-built-in-p)epl-built-in-p629,23002
(defun epl-install-file (file)epl-install-file634,23076
(defun epl--kill-autoload-buffer (package)epl--kill-autoload-buffer643,23484
(defun epl-package-install (package &optional force)epl-package-install650,23856
(defun epl-package-delete (package)epl-package-delete663,24405
(defun epl-upgrade (&optional packages preserve-obsolete)epl-upgrade691,25855

elpa/epl-20180205.1249/epl-pkg.el,98
(define-package "epl" "20180205.1249" "Emacs Package Library" (quote ((cl-lib "0.3"))))"epl"1,0

elpa/epl-20180205.1249/epl-autoloads.el,0

elpa/use-package-el-get-20180130.2105/use-package-el-get-pkg.el,308
(define-package "use-package-el-get" "20180130.2105" "el-get support for use package" '((use-package "1.0")) :commit "5bb0c0ad71f180e2a9d019d4b3c2a00a81f7e40f" :keywords '("dotemacs" "startup" "speed" "config" "package" "tools") :url "https://github.com/edvorg/use-package-el-get")"use-package-el-get"2,31

elpa/use-package-el-get-20180130.2105/use-package-el-get-autoloads.el,0

elpa/use-package-el-get-20180130.2105/use-package-el-get.el,287
(defun use-package-normalize/:el-get (name-symbol keyword args)use-package-normalize/:el-get48,1461
(defun use-package-handler/:el-get (name-symbol keyword archive-name rest state)use-package-handler/:el-get60,1853
(defun use-package-el-get-setup ()use-package-el-get-setup70,2242

elpa/async-20180527.1030/async.el,2055
(defgroup async nilasync36,1229
(defcustom async-variables-noprops-function #'async-variables-nopropsasync-variables-noprops-function40,1311
(defvar async-debug nil)async-debug45,1478
(defvar async-send-over-pipe t)async-send-over-pipe46,1503
(defvar async-in-child-emacs nil)async-in-child-emacs47,1535
(defvar async-callback nil)async-callback48,1569
(defvar async-callback-for-process nil)async-callback-for-process49,1597
(defvar async-callback-value nil)async-callback-value50,1637
(defvar async-callback-value-set nil)async-callback-value-set51,1671
(defvar async-current-process nil)async-current-process52,1709
(defvar async--procvar nil)async--procvar53,1744
(defun async-variables-noprops (sequence)async-variables-noprops55,1773
(defun async-inject-variablesasync-inject-variables73,2384
(defalias 'async-inject-environment 'async-inject-variables)async-inject-environment121,4441
(defun async-handle-result (func result buf)async-handle-result123,4503
(defun async-when-done (proc &optional _change)async-when-done137,4986
(defun async--receive-sexp (&optional stream)async--receive-sexp161,6196
(defun async--insert-sexp (sexp)async--insert-sexp173,6656
(defun async--transmit-sexp (process sexp)async--transmit-sexp185,7071
(defun async-batch-invoke ()async-batch-invoke192,7313
(defun async-ready (future)async-ready210,7911
(defun async-wait (future)async-wait222,8288
(defun async-get (future)async-get227,8412
(defun async-message-p (value)async-message-p238,8812
(defun async-send (&rest args)async-send243,8963
(defun async-receive ()async-receive251,9274
(defun async-start-process (name program finish-func &rest program-args)async-start-process256,9401
(defvar async-quiet-switch "-Q"async-quiet-switch273,10250
(defun async-start (start-func &optional finish-func)async-start280,10508
(defmacro async-sandbox(func)async-sandbox350,13070
(defun async--fold-left (fn forms bindings)async--fold-left354,13199
(defmacro async-let (bindings &rest forms)async-let363,13468

elpa/async-20180527.1030/dired-async.el,2059
(defgroup dired-async nildired-async48,1546
(defcustom dired-async-env-variables-regexpdired-async-env-variables-regexp52,1639
(defcustom dired-async-message-function 'dired-async-mode-line-messagedired-async-message-function58,1859
(defcustom dired-async-log-file "/tmp/dired-async.log"dired-async-log-file64,2069
(defcustom dired-async-mode-lighter '(:evaldired-async-mode-lighter69,2231
(defface dired-async-messagedired-async-message77,2498
(defface dired-async-failuresdired-async-failures82,2622
(defface dired-async-mode-messagedired-async-mode-message87,2744
(define-minor-mode dired-async--modeline-modedired-async--modeline-mode92,2890
(defun dired-async-mode-line-message (text face &rest args)dired-async-mode-line-message102,3299
(defun dired-async-processes ()dired-async-processes115,3766
(defun dired-async-kill-process ()dired-async-kill-process121,3978
(defun dired-async-after-file-create (total operation failures skipped)dired-async-after-file-create129,4230
(defun dired-async-maybe-kill-ftp ()dired-async-maybe-kill-ftp173,6215
(defvar overwrite-query)overwrite-query184,6604
(defun dired-async-create-files (file-creator operation fn-list name-constructordired-async-create-files185,6629
(defvar wdired-use-interactive-rename)wdired-use-interactive-rename334,14969
(defun dired-async-wdired-do-renames (old-fn &rest args)dired-async-wdired-do-renames335,15008
(defadvice wdired-do-renames (around wdired-async)wdired-do-renames343,15360
(defadvice dired-create-files (around dired-async)dired-create-files347,15466
(define-minor-mode dired-async-modedired-async-mode352,15651
(defmacro dired-async--with-async-create-files (&rest body)dired-async--with-async-create-files369,16405
(defun dired-async-do-copy (&optional arg)dired-async-do-copy376,16686
(defun dired-async-do-symlink (&optional arg)dired-async-do-symlink383,16875
(defun dired-async-do-hardlink (&optional arg)dired-async-do-hardlink390,17073
(defun dired-async-do-rename (&optional arg)dired-async-do-rename397,17274

elpa/async-20180527.1030/async-pkg.el,102
(define-package "async" "20180527.1030" "Asynchronous processing in Emacs" 'nil :keywords"async"1,0

elpa/async-20180527.1030/async-autoloads.el,137
(defvar async-bytecomp-package-mode nil "\async-bytecomp-package-mode86,2875
(defvar dired-async-mode nil "\dired-async-mode117,3925

elpa/async-20180527.1030/async-bytecomp.el,797
(defcustom async-bytecomp-allowed-packagesasync-bytecomp-allowed-packages44,1668
(defvar async-byte-compile-log-fileasync-byte-compile-log-file54,2156
(defun async-byte-recompile-directory (directory &optional quiet)async-byte-recompile-directory58,2262
(defvar package-archive-contents)package-archive-contents108,4716
(defvar package-alist)package-alist109,4750
(defun async-bytecomp--get-package-deps (pkg &optional only)async-bytecomp--get-package-deps112,4831
(defun async-bytecomp-get-allowed-pkgs ()async-bytecomp-get-allowed-pkgs135,6075
(defadvice package--compile (around byte-compile-async)package--compile147,6606
(define-minor-mode async-bytecomp-package-modeasync-bytecomp-package-mode166,7451
(defun async-byte-compile-file (file)async-byte-compile-file177,7812

elpa/async-20180527.1030/smtpmail-async.el,200
(defgroup smtpmail-async nilsmtpmail-async39,1320
(defvar async-smtpmail-before-send-hook nilasync-smtpmail-before-send-hook47,1475
(defun async-smtpmail-send-it ()async-smtpmail-send-it51,1639

elpa/auto-complete-20170124.1845/auto-complete.el,15311
(defconst ac-version "1.5.1"ac-version46,1378
(defconst ac-version-major (car (version-to-list ac-version))ac-version-major50,1504
(defconst ac-version-minor (cadr (version-to-list ac-version))ac-version-minor53,1610
(defun ac-error (&optional var)ac-error61,1772
(defgroup auto-complete nilauto-complete72,1981
(defcustom ac-delay 0.1ac-delay77,2069
(defcustom ac-auto-show-menu 0.8ac-auto-show-menu82,2178
(defcustom ac-show-menu-immediately-on-auto-complete tac-show-menu-immediately-on-auto-complete89,2419
(defcustom ac-expand-on-auto-complete tac-expand-on-auto-complete94,2587
(defcustom ac-disable-faces '(font-lock-comment-face font-lock-string-face font-lock-doc-face)ac-disable-faces99,2744
(defcustom ac-stop-flymake-on-completing tac-stop-flymake-on-completing104,2957
(defcustom ac-flycheck-poll-completion-end-interval 0.5ac-flycheck-poll-completion-end-interval109,3103
(defcustom ac-use-fuzzy (and (locate-library "fuzzy") t)ac-use-fuzzy114,3291
(defcustom ac-fuzzy-cursor-color "red"ac-fuzzy-cursor-color119,3429
(defcustom ac-use-comphist tac-use-comphist124,3542
(defcustom ac-comphist-threshold 0.7ac-comphist-threshold129,3668
(defcustom ac-comphist-fileac-comphist-file134,3796
(defcustom ac-user-dictionary nilac-user-dictionary143,4110
(defcustom ac-dictionary-files '("~/.dict")ac-dictionary-files148,4223
(defvaralias 'ac-user-dictionary-files 'ac-dictionary-files)ac-user-dictionary-files152,4339
(defcustom ac-dictionary-directoriesac-dictionary-directories154,4401
(defcustom ac-use-quick-help tac-use-quick-help166,4796
(defcustom ac-quick-help-delay 1.5ac-quick-help-delay171,4904
(defcustom ac-menu-height 10ac-menu-height176,5010
(defvaralias 'ac-candidate-menu-height 'ac-menu-height)ac-candidate-menu-height180,5115
(defcustom ac-quick-help-height 20ac-quick-help-height182,5172
(defcustom ac-quick-help-prefer-pos-tip tac-quick-help-prefer-pos-tip187,5280
(defvaralias 'ac-quick-help-prefer-x 'ac-quick-help-prefer-pos-tip)ac-quick-help-prefer-x191,5449
(defcustom ac-candidate-limit nilac-candidate-limit193,5518
(defvaralias 'ac-candidate-max 'ac-candidate-limit)ac-candidate-max197,5654
(defcustom ac-modesac-modes199,5707
(defcustom ac-compatible-packages-regexpac-compatible-packages-regexp221,6503
(defcustom ac-non-trigger-commandsac-non-trigger-commands227,6661
(defcustom ac-trigger-commandsac-trigger-commands234,6874
(defcustom ac-trigger-commands-on-completingac-trigger-commands-on-completing240,7060
(defcustom ac-trigger-key nilac-trigger-key253,7438
(defcustom ac-auto-start 2ac-auto-start266,7973
(defcustom ac-stop-words nilac-stop-words276,8388
(defvaralias 'ac-ignores 'ac-stop-words)ac-ignores280,8506
(defcustom ac-use-dictionary-as-stop-words tac-use-dictionary-as-stop-words282,8548
(defcustom ac-ignore-case 'smartac-ignore-case287,8716
(defcustom ac-dwim tac-dwim296,9055
(defcustom ac-use-menu-map nilac-use-menu-map301,9184
(defcustom ac-use-overriding-local-map nilac-use-overriding-local-map306,9340
(defcustom ac-disable-inline nilac-disable-inline311,9534
(defcustom ac-candidate-menu-min 1ac-candidate-menu-min316,9659
(defcustom ac-max-width nilac-max-width321,9787
(defface ac-completion-faceac-completion-face328,10042
(defface ac-candidate-faceac-candidate-face333,10174
(defface ac-candidate-mouse-faceac-candidate-mouse-face338,10282
(defface ac-selection-faceac-selection-face343,10413
(defvar auto-complete-mode-hook nilauto-complete-mode-hook348,10545
(defvar auto-complete-mode nilauto-complete-mode355,10646
(defvar ac-cursor-color nilac-cursor-color358,10729
(defvar ac-inline nilac-inline361,10781
(defvar ac-menu nilac-menu364,10837
(defvar ac-show-menu nilac-show-menu367,10878
(defvar ac-last-completion nilac-last-completion370,10942
(defvar ac-quick-help nilac-quick-help373,11039
(defvar ac-completing nilac-completing376,11091
(defvar ac-buffer nilac-buffer379,11188
(defvar ac-point nilac-point382,11255
(defvar ac-last-point nilac-last-point385,11305
(defvar ac-prefix nilac-prefix388,11369
(defvaralias 'ac-target 'ac-prefix)ac-target390,11411
(defvar ac-selected-candidate nilac-selected-candidate392,11448
(defvar ac-common-part nilac-common-part395,11513
(defvar ac-whole-common-part nilac-whole-common-part399,11637
(defvar ac-prefix-overlay nilac-prefix-overlay403,11762
(defvar ac-timer nilac-timer406,11825
(defvar ac-show-menu-timer nilac-show-menu-timer409,11875
(defvar ac-quick-help-timer nilac-quick-help-timer412,11934
(defvar ac-triggered nilac-triggered415,11995
(defvar ac-limit nilac-limit418,12042
(defvar ac-candidates nilac-candidates421,12114
(defvar ac-candidates-cache nilac-candidates-cache424,12166
(defvar ac-fuzzy-enable nilac-fuzzy-enable427,12245
(defvar ac-dwim-enable nilac-dwim-enable430,12320
(defvar ac-mode-map (make-sparse-keymap)ac-mode-map433,12400
(defvar ac-completing-mapac-completing-map436,12539
(defvaralias 'ac-complete-mode-map 'ac-completing-map)ac-complete-mode-map469,13709
(defvar ac-menu-mapac-menu-map471,13765
(defvar ac-current-mapac-current-map485,14264
(defvar ac-match-function 'all-completionsac-match-function490,14380
(defvar ac-prefix-definitionsac-prefix-definitions493,14453
(defvar ac-sources '(ac-source-words-in-same-mode-buffers)ac-sources502,14731
(defvar ac-compiled-sources nilac-compiled-sources506,14861
(defvar ac-current-sources nilac-current-sources509,14932
(defvar ac-omni-completion-sources nilac-omni-completion-sources512,15036
(defvar ac-current-prefix-def nil)ac-current-prefix-def515,15106
(defvar ac-ignoring-prefix-def nil)ac-ignoring-prefix-def517,15142
(defvar ac-comphist nilac-comphist523,15219
(defsubst ac-comphist-make-tab ()ac-comphist-make-tab526,15281
(defsubst ac-comphist-tab (db)ac-comphist-tab529,15350
(defsubst ac-comphist-cache (db)ac-comphist-cache532,15396
(defun ac-comphist-make (&optional tab)ac-comphist-make535,15444
(defun ac-comphist-get (db string &optional create)ac-comphist-get538,15570
(defun ac-comphist-add (db string prefix)ac-comphist-add546,15831
(defun ac-comphist-score (db string prefix)ac-comphist-score554,16129
(defun ac-comphist-sort (db collection prefix &optional threshold)ac-comphist-sort580,17289
(defun ac-comphist-serialize (db)ac-comphist-serialize602,18212
(defun ac-comphist-deserialize (sexp)ac-comphist-deserialize609,18383
(defun ac-comphist-init ()ac-comphist-init618,18751
(defun ac-comphist-load ()ac-comphist-load622,18849
(defun ac-comphist-save ()ac-comphist-save632,19240
(defvar ac-buffer-dictionary nil)ac-buffer-dictionary643,19487
(defvar ac-file-dictionary (make-hash-table :test 'equal))ac-file-dictionary644,19521
(defun ac-clear-dictionary-cache ()ac-clear-dictionary-cache646,19581
(defun ac-file-dictionary (filename)ac-file-dictionary654,19839
(defun ac-mode-dictionary (mode)ac-mode-dictionary666,20248
(defun ac-buffer-dictionary (&optional buffer)ac-buffer-dictionary674,20638
(defun ac-menu-at-wrapper-line-p ()ac-menu-at-wrapper-line-p689,21123
(defun ac-stop-word-p (word)ac-stop-word-p697,21404
(defun ac-prefix-default ()ac-prefix-default702,21560
(defun ac-prefix-symbol ()ac-prefix-symbol711,21903
(defun ac-prefix-file ()ac-prefix-file716,22043
(defsubst ac-windows-remote-file-p (file)ac-windows-remote-file-p721,22175
(defun ac-prefix-valid-file ()ac-prefix-valid-file725,22330
(defun ac-prefix-c-dot ()ac-prefix-c-dot740,22991
(defun ac-prefix-c-dot-ref ()ac-prefix-c-dot-ref745,23163
(defun ac-prefix-cc-member ()ac-prefix-cc-member750,23370
(defun ac-define-prefix (name prefix)ac-define-prefix755,23575
(defun ac-match-substring (prefix candidates)ac-match-substring760,23763
(defsubst ac-source-entity (source)ac-source-entity766,23973
(defun ac-source-available-p (source)ac-source-available-p771,24074
(defun ac-compile-sources (sources)ac-compile-sources792,24986
(defun ac-compiled-sources ()ac-compiled-sources813,25780
(defsubst ac-menu-live-p ()ac-menu-live-p818,25916
(defun ac-menu-create (point width height)ac-menu-create821,25971
(defun ac-menu-delete ()ac-menu-delete835,26486
(defsubst ac-inline-overlay ()ac-inline-overlay840,26580
(defsubst ac-inline-live-p ()ac-inline-live-p843,26633
(defun ac-inline-show (point string)ac-inline-show846,26705
(defun ac-inline-delete ()ac-inline-delete902,28640
(defun ac-inline-hide ()ac-inline-hide908,28784
(defun ac-inline-update ()ac-inline-update918,29122
(defun ac-put-prefix-overlay ()ac-put-prefix-overlay929,29552
(defun ac-remove-prefix-overlay ()ac-remove-prefix-overlay942,30060
(defun ac-activate-completing-map ()ac-activate-completing-map952,30377
(defun ac-deactivate-completing-map ()ac-deactivate-completing-map961,30766
(defsubst ac-selected-candidate ()ac-selected-candidate969,31108
(defun ac-prefix (requires ignore-list)ac-prefix973,31196
(defun ac-init ()ac-init1015,33014
(defun ac-candidates-1 (source)ac-candidates-11028,33413
(defun ac-delete-duplicated-candidates (candidates)ac-delete-duplicated-candidates1071,35649
(defun ac-reduce-candidates (candidates)ac-reduce-candidates1082,36032
(defun ac-candidates ()ac-candidates1095,36549
(defun ac-update-candidates (cursor scroll-top)ac-update-candidates1129,38472
(defun ac-reposition ()ac-reposition1149,39158
(defun ac-cleanup ()ac-cleanup1158,39520
(defsubst ac-abort ()ac-abort1205,40975
(defun ac-extend-region-to-delete (string)ac-extend-region-to-delete1209,41036
(defun ac-expand-string (string &optional remove-undo-boundary)ac-expand-string1225,41775
(defun ac-set-trigger-key (key)ac-set-trigger-key1259,43330
(defun ac-set-timer ()ac-set-timer1270,43716
(defun ac-cancel-timer ()ac-cancel-timer1274,43839
(defun ac-update (&optional force)ac-update1279,43946
(defun ac-update-greedy (&optional force)ac-update-greedy1301,44780
(defun ac-set-show-menu-timer ()ac-set-show-menu-timer1310,45098
(defun ac-cancel-show-menu-timer ()ac-cancel-show-menu-timer1315,45350
(defun ac-show-menu ()ac-show-menu1320,45497
(defun ac-help (&optional persist)ac-help1327,45649
(defun ac-persist-help ()ac-persist-help1332,45766
(defun ac-last-help (&optional persist)ac-last-help1336,45824
(defun ac-last-persist-help ()ac-last-persist-help1341,45974
(defun ac-set-quick-help-timer ()ac-set-quick-help-timer1345,46042
(defun ac-cancel-quick-help-timer ()ac-cancel-quick-help-timer1350,46259
(defun ac-pos-tip-show-quick-help (menu &optional item &rest args)ac-pos-tip-show-quick-help1355,46410
(defun ac-quick-help-use-pos-tip-p ()ac-quick-help-use-pos-tip-p1382,47384
(defun ac-quick-help (&optional force)ac-quick-help1387,47509
(defun ac-remove-quick-help ()ac-remove-quick-help1407,48235
(defun ac-last-quick-help ()ac-last-quick-help1415,48436
(defmacro ac-define-quick-help-command (name arglist &rest body)ac-define-quick-help-command1431,49036
(defun ac-isearch-callback (list)ac-isearch-callback1451,49520
(defun ac-isearch ()ac-isearch1454,49601
(defun auto-complete (&optional sources)auto-complete1499,51186
(defun ac-fuzzy-complete ()ac-fuzzy-complete1504,51326
(defun ac-next ()ac-next1522,51937
(defun ac-previous ()ac-previous1532,52176
(defun ac-expand (arg)ac-expand1542,52431
(defun ac-expand-previous (arg)ac-expand-previous1564,53229
(defun ac-expand-common ()ac-expand-common1569,53360
(defun ac-complete-1 (candidate)ac-complete-11581,53703
(defun ac-complete ()ac-complete1601,54315
(defun ac-stop ()ac-stop1646,55915
(defun ac-ignore (&rest ignore)ac-ignore1652,56020
(defun ac-mouse-1 (event)ac-mouse-11656,56092
(defun ac-mouse-4 (event)ac-mouse-41661,56218
(defun ac-mouse-5 (event)ac-mouse-51665,56282
(defun ac-trigger-key-command (&optional force)ac-trigger-key-command1669,56342
(defvar ac-clear-variables-every-minute-timer nil)ac-clear-variables-every-minute-timer1681,56654
(defvar ac-clear-variables-after-save nil)ac-clear-variables-after-save1682,56705
(defvar ac-clear-variables-every-minute nil)ac-clear-variables-every-minute1683,56748
(defvar ac-minutes-counter 0)ac-minutes-counter1684,56793
(defun ac-clear-variable-after-save (variable &optional pred)ac-clear-variable-after-save1686,56824
(defun ac-clear-variables-after-save ()ac-clear-variables-after-save1689,56956
(defun ac-clear-variable-every-minutes (variable minutes)ac-clear-variable-every-minutes1695,57140
(defun ac-clear-variable-every-minute (variable)ac-clear-variable-every-minute1698,57273
(defun ac-clear-variable-every-10-minutes (variable)ac-clear-variable-every-10-minutes1701,57371
(defun ac-clear-variables-every-minute ()ac-clear-variables-every-minute1704,57474
(defun ac-cursor-on-diable-face-p (&optional point)ac-cursor-on-diable-face-p1714,57706
(defun ac-trigger-command-p (command)ac-trigger-command-p1717,57831
(defun ac-fallback-key-sequence ()ac-fallback-key-sequence1725,58179
(defun ac-fallback-command (&optional except-command)ac-fallback-command1731,58365
(defun ac-compatible-package-command-p (command)ac-compatible-package-command-p1740,58703
(defun ac-handle-pre-command ()ac-handle-pre-command1745,58920
(defun ac-handle-post-command ()ac-handle-post-command1764,59914
(defvar ac-flycheck-poll-completion-end-timer nilac-flycheck-poll-completion-end-timer1776,60305
(defun ac-syntax-checker-workaround ()ac-syntax-checker-workaround1779,60394
(defun ac-setup ()ac-setup1800,61401
(define-minor-mode auto-complete-modeauto-complete-mode1810,61736
(defun auto-complete-mode-maybe ()auto-complete-mode-maybe1827,62379
(define-global-minor-mode global-auto-complete-modeglobal-auto-complete-mode1834,62594
(defun ac-flyspell-workaround ()ac-flyspell-workaround1842,62765
(defun ac-linum-workaround ()ac-linum-workaround1851,63159
(defmacro ac-define-source (name source)ac-define-source1863,63472
(defvar ac-word-index nil)ac-word-index1877,64087
(defun ac-candidate-words-in-buffer (point prefix limit)ac-candidate-words-in-buffer1879,64115
(defun ac-incremental-update-word-index ()ac-incremental-update-word-index1903,65023
(defun ac-update-word-index-1 ()ac-update-word-index-11918,65576
(defun ac-update-word-index ()ac-update-word-index1929,65999
(defun ac-word-candidates (&optional buffer-pred)ac-word-candidates1936,66215
(defvar ac-symbols-cache nil)ac-symbols-cache1962,67303
(defun ac-symbol-file (symbol type)ac-symbol-file1965,67389
(defun ac-symbol-documentation (symbol)ac-symbol-documentation1997,68875
(defun ac-symbol-candidates ()ac-symbol-candidates2044,70651
(defvar ac-functions-cache nil)ac-functions-cache2060,71120
(defun ac-function-candidates ()ac-function-candidates2063,71210
(defvar ac-variables-cache nil)ac-variables-cache2078,71645
(defun ac-variable-candidates ()ac-variable-candidates2081,71735
(defvar ac-emacs-lisp-features nil)ac-emacs-lisp-features2095,72123
(defun ac-emacs-lisp-feature-candidates ()ac-emacs-lisp-feature-candidates2098,72221
(defvaralias 'ac-source-emacs-lisp-features 'ac-source-features)ac-source-emacs-lisp-features2116,73087
(defvar ac-filename-cache nil)ac-filename-cache2131,73532
(defun ac-filename-candidate ()ac-filename-candidate2133,73564

elpa/auto-complete-20170124.1845/auto-complete-config.el,2130
(defvar ac-imenu-index nil)ac-imenu-index45,1381
(defun ac-imenu-candidates ()ac-imenu-candidates49,1464
(defface ac-gtags-candidate-faceac-gtags-candidate-face87,2904
(defface ac-gtags-selection-faceac-gtags-selection-face92,3049
(defun ac-gtags-candidate ()ac-gtags-candidate97,3208
(defface ac-yasnippet-candidate-faceac-yasnippet-candidate-face110,3554
(defface ac-yasnippet-selection-faceac-yasnippet-selection-face116,3751
(defun ac-yasnippet-table-hash (table)ac-yasnippet-table-hash121,3920
(defun ac-yasnippet-table-parent (table)ac-yasnippet-table-parent128,4102
(defun ac-yasnippet-candidate-1 (table)ac-yasnippet-candidate-1135,4294
(defun ac-yasnippet-candidates ()ac-yasnippet-candidates149,4791
(defun ac-semantic-candidates (prefix)ac-semantic-candidates182,5954
(defun ac-semantic-doc (symbol)ac-semantic-doc193,6465
(defun ac-semantic-action ()ac-semantic-action202,6746
(defun ac-eclim-candidates ()ac-eclim-candidates244,8230
(defconst ac-css-property-alistac-css-property-alist258,8522
(defconst ac-css-value-classesac-css-value-classes397,14754
(defconst ac-css-pseudo-classesac-css-pseudo-classes415,15563
(defvar ac-css-property nilac-css-property420,15797
(defun ac-css-prefix ()ac-css-prefix423,15857
(defun ac-css-property-candidates ()ac-css-property-candidates428,16050
(defvar ac-ropemacs-loaded nil)ac-ropemacs-loaded469,17183
(defun ac-ropemacs-require ()ac-ropemacs-require470,17215
(defun ac-ropemacs-setup ()ac-ropemacs-setup478,17467
(defun ac-ropemacs-initialize ()ac-ropemacs-initialize483,17655
(defvar ac-ropemacs-completions-cache nil)ac-ropemacs-completions-cache492,17938
(defvar ac-source-ropemacsac-source-ropemacs493,17981
(defvar ac-source-rcodetoolsac-source-rcodetools506,18330
(defun ac-common-setup ()ac-common-setup525,18978
(defun ac-emacs-lisp-mode-setup ()ac-emacs-lisp-mode-setup529,19058
(defun ac-cc-mode-setup ()ac-cc-mode-setup532,19235
(defun ac-ruby-mode-setup ())ac-ruby-mode-setup535,19343
(defun ac-css-mode-setup ()ac-css-mode-setup537,19374
(defun ac-config-default ()ac-config-default541,19485

elpa/auto-complete-20170124.1845/auto-complete-pkg.el,100
(define-package "auto-complete" "20170124.1845" "Auto Completion for GNU Emacs""auto-complete"1,0

elpa/auto-complete-20170124.1845/auto-complete-autoloads.el,74
(defvar global-auto-complete-mode nil "\global-auto-complete-mode20,498

elpa/s-20180406.108/s.el,5176
(defvar ucs-normalize-combining-chars)  ; Defined in `ucs-normalize'ucs-normalize-combining-chars32,1040
(defun s-trim-left (s)s-trim-left35,1141
(defun s-trim-right (s)s-trim-right43,1356
(defun s-trim (s)s-trim51,1568
(defun s-collapse-whitespace (s)s-collapse-whitespace56,1716
(defun s-split (separator s &optional omit-nulls)s-split61,1907
(defun s-split-up-to (separator s n &optional omit-nulls)s-split-up-to70,2247
(defun s-lines (s)s-lines97,3153
(defun s-join (separator strings)s-join102,3311
(defun s-concat (&rest strings)s-concat107,3494
(defun s-prepend (prefix s)s-prepend112,3647
(defun s-append (suffix s)s-append117,3769
(defun s-repeat (num s)s-repeat122,3890
(defun s-chop-suffix (suffix s)s-chop-suffix131,4113
(defun s-chop-suffixes (suffixes s)s-chop-suffixes140,4396
(defun s-chop-prefix (prefix s)s-chop-prefix148,4650
(defun s-chop-prefixes (prefixes s)s-chop-prefixes157,4935
(defun s-shared-start (s1 s2)s-shared-start165,5191
(defun s-shared-end (s1 s2)s-shared-end175,5519
(defun s-chomp (s)s-chomp195,6180
(defun s-truncate (len s &optional ellipsis)s-truncate200,6335
(defun s-word-wrap (len s)s-word-wrap214,6770
(defun s-center (len s)s-center224,7078
(defun s-pad-left (len padding s)s-pad-left233,7357
(defun s-pad-right (len padding s)s-pad-right240,7615
(defun s-left (len s)s-left247,7875
(defun s-right (len s)s-right254,8043
(defun s-ends-with? (suffix s &optional ignore-case)s-ends-with?262,8239
(defun s-starts-with? (prefix s &optional ignore-case)s-starts-with?275,8670
(defun s--truthy? (val)s--truthy?286,9022
(defun s-contains? (needle s &optional ignore-case)s-contains?290,9109
(defun s-equals? (s1 s2)s-equals?299,9428
(defun s-less? (s1 s2)s-less?306,9605
(defun s-matches? (regexp s &optional start)s-matches?313,9781
(defun s-blank? (s)s-blank?321,10050
(defun s-blank-str? (s)s-blank-str?326,10179
(defun s-present? (s)s-present?331,10358
(defun s-presence (s)s-presence336,10492
(defun s-lowercase? (s)s-lowercase?341,10640
(defun s-uppercase? (s)s-uppercase?347,10819
(defun s-mixedcase? (s)s-mixedcase?353,10998
(defun s-capitalized? (s)s-capitalized?360,11220
(defun s-numeric? (s)s-numeric?367,11460
(defun s-replace (old new s)s-replace373,11593
(defalias 's-replace-regexp 'replace-regexp-in-string)s-replace-regexp378,11756
(defun s--aget (alist key)s--aget380,11812
(defun s-replace-all (replacements s)s-replace-all384,11916
(defun s-downcase (s)s-downcase391,12251
(defun s-upcase (s)s-upcase398,12410
(defun s-capitalize (s)s-capitalize405,12563
(defun s-titleize (s)s-titleize410,12779
(defmacro s-with (s form &rest more)s-with417,13000
(defun s-index-of (needle s &optional ignore-case)s-index-of431,13506
(defun s-reverse (s)s-reverse440,13832
(defun s-match-strings-all (regex string)s-match-strings-all457,14464
(defun s-matched-positions-all (regexp string &optional subexp-depth)s-matched-positions-all479,15238
(defun s-match (regexp s &optional start)s-match494,15822
(defun s-slice-at (regexp s)s-slice-at514,16660
(defun s-split-words (s)s-split-words526,17012
(defun s--mapcar-head (fn-head fn-rest list)s--mapcar-head537,17357
(defun s-lower-camel-case (s)s-lower-camel-case542,17558
(defun s-upper-camel-case (s)s-upper-camel-case547,17727
(defun s-snake-case (s)s-snake-case552,17878
(defun s-dashed-words (s)s-dashed-words557,18018
(defun s-capitalized-words (s)s-capitalized-words562,18162
(defun s-titleized-words (s)s-titleized-words568,18380
(defun s-word-initials (s)s-word-initials573,18532
(defun s-format (template replacer &optional extra)s-format588,18938
(defvar s-lex-value-as-lisp nils-lex-value-as-lisp636,20834
(defun s-lex-fmt|expand (fmt)s-lex-fmt|expand641,20965
(defmacro s-lex-format (format-str)s-lex-format656,21460
(defun s-count-matches (regexp s &optional start end)s-count-matches671,21882
(defun s-count-matches-all (regexp s &optional start end)s-count-matches-all689,22544
(defun s-wrap (s prefix &optional suffix)s-wrap714,23544
(defalias 's-blank-p 's-blank?)s-blank-p726,23868
(defalias 's-blank-str-p 's-blank-str?)s-blank-str-p727,23900
(defalias 's-capitalized-p 's-capitalized?)s-capitalized-p728,23940
(defalias 's-contains-p 's-contains?)s-contains-p729,23984
(defalias 's-ends-with-p 's-ends-with?)s-ends-with-p730,24022
(defalias 's-equals-p 's-equals?)s-equals-p731,24062
(defalias 's-less-p 's-less?)s-less-p732,24096
(defalias 's-lowercase-p 's-lowercase?)s-lowercase-p733,24126
(defalias 's-matches-p 's-matches?)s-matches-p734,24166
(defalias 's-mixedcase-p 's-mixedcase?)s-mixedcase-p735,24202
(defalias 's-numeric-p 's-numeric?)s-numeric-p736,24242
(defalias 's-prefix-p 's-starts-with?)s-prefix-p737,24278
(defalias 's-prefix? 's-starts-with?)s-prefix?738,24317
(defalias 's-present-p 's-present?)s-present-p739,24355
(defalias 's-starts-with-p 's-starts-with?)s-starts-with-p740,24391
(defalias 's-suffix-p 's-ends-with?)s-suffix-p741,24435
(defalias 's-suffix? 's-ends-with?)s-suffix?742,24472
(defalias 's-uppercase-p 's-uppercase?)s-uppercase-p743,24508

elpa/s-20180406.108/s-pkg.el,107
(define-package "s" "20180406.108" "The long lost Emacs string manipulation library." (quote nil))"s"1,0

elpa/s-20180406.108/s-autoloads.el,0

elpa/use-package-20180314.1143/use-package-ensure.el,1035
(defgroup use-package-ensure niluse-package-ensure39,1352
(defcustom use-package-always-ensure niluse-package-always-ensure47,1620
(defcustom use-package-always-pin niluse-package-always-pin53,1835
(defcustom use-package-ensure-function 'use-package-ensure-elpause-package-ensure-function59,2045
(defun use-package-normalize/:pin (name keyword args)use-package-normalize/:pin79,2859
(defun use-package-archive-exists-p (archive)use-package-archive-exists-p93,3279
(defun use-package-pin-package (package archive)use-package-pin-package106,3673
(defun use-package-handler/:pin (name keyword archive-name rest state)use-package-handler/:pin119,4308
(defvar package-archive-contents)package-archive-contents133,4923
(defun use-package-normalize/:ensure (name keyword args)use-package-normalize/:ensure136,4973
(defun use-package-ensure-elpa (name args state &optional no-refresh)use-package-ensure-elpa155,5670
(defun use-package-handler/:ensure (name keyword ensure rest state)use-package-handler/:ensure186,6992

elpa/use-package-20180314.1143/use-package-pkg.el,116
(define-package "use-package" "20180314.1143" "A configuration macro for simplifying your .emacs""use-package"1,0

elpa/use-package-20180314.1143/use-package-jump.el,166
(defun use-package-find-require (package)use-package-find-require40,1443
(defun use-package-jump-to-package-form (package)use-package-jump-to-package-form50,1811

elpa/use-package-20180314.1143/use-package-bind-key.el,1233
(defun use-package-autoload-keymap (keymap-symbol package override)use-package-autoload-keymap42,1521
(defun use-package-normalize-binder (name keyword args)use-package-normalize-binder70,2771
(defalias 'use-package-normalize/:bind 'use-package-normalize-binder)use-package-normalize/:bind115,4330
(defalias 'use-package-normalize/:bind* 'use-package-normalize-binder)use-package-normalize/:bind*117,4415
(defalias 'use-package-autoloads/:bind 'use-package-autoloads-mode)use-package-autoloads/:bind124,4673
(defalias 'use-package-autoloads/:bind* 'use-package-autoloads-mode)use-package-autoloads/:bind*126,4756
(defun use-package-handler/:binduse-package-handler/:bind129,4841
(defun use-package-handler/:bind* (name keyword arg rest state)use-package-handler/:bind*139,5220
(defalias 'use-package-normalize/:bind-keymap 'use-package-normalize-binder)use-package-normalize/:bind-keymap145,5405
(defalias 'use-package-normalize/:bind-keymap* 'use-package-normalize-binder)use-package-normalize/:bind-keymap*147,5497
(defun use-package-handler/:bind-keymapuse-package-handler/:bind-keymap150,5591
(defun use-package-handler/:bind-keymap* (name keyword arg rest state)use-package-handler/:bind-keymap*166,6076

elpa/use-package-20180314.1143/use-package-core.el,13017
(defgroup use-package niluse-package56,1994
(defconst use-package-version "2.4"use-package-version60,2101
(defcustom use-package-keywordsuse-package-keywords63,2172
(defcustom use-package-deferring-keywordsuse-package-deferring-keywords109,3467
(defcustom use-package-ignore-unknown-keywords niluse-package-ignore-unknown-keywords122,3953
(defcustom use-package-verbose niluse-package-verbose129,4226
(defcustom use-package-check-before-init niluse-package-check-before-init141,4789
(defcustom use-package-always-defer niluse-package-always-defer147,5006
(defcustom use-package-always-demand niluse-package-always-demand153,5203
(defcustom use-package-defaultsuse-package-defaults159,5401
(defcustom use-package-merge-key-alistuse-package-merge-key-alist203,7415
(defcustom use-package-hook-name-suffix "-hook"use-package-hook-name-suffix227,8288
(defcustom use-package-minimum-reported-time 0.1use-package-minimum-reported-time234,8541
(defcustom use-package-inject-hooks niluse-package-inject-hooks241,8776
(defcustom use-package-expand-minimally niluse-package-expand-minimally267,9684
(defcustom use-package-form-regexp-evaluse-package-form-regexp-eval282,10296
(defcustom use-package-enable-imenu-support niluse-package-enable-imenu-support295,10810
(defconst use-package-font-lock-keywordsuse-package-font-lock-keywords313,11526
(defcustom use-package-compute-statistics niluse-package-compute-statistics320,11780
(defvar use-package-statistics (make-hash-table))use-package-statistics329,12156
(defsubst use-package-error (msg)use-package-error336,12315
(defsubst use-package-concat (&rest elems)use-package-concat340,12456
(defsubst use-package-non-nil-symbolp (sym)use-package-non-nil-symbolp344,12635
(defsubst use-package-as-symbol (string-or-symbol)use-package-as-symbol347,12707
(defsubst use-package-as-string (string-or-symbol)use-package-as-string353,12948
(defsubst use-package-regex-p (re)use-package-regex-p359,13194
(defun use-package-normalize-regex (re)use-package-normalize-regex364,13338
(defsubst use-package-is-pair (x car-pred cdr-pred)use-package-is-pair371,13594
(defun use-package-as-mode (string-or-symbol)use-package-as-mode379,13873
(defsubst use-package-load-name (name &optional noerror)use-package-load-name388,14233
(defun use-package-hook-injector (name-string keyword body)use-package-hook-injector396,14557
(defun use-package-with-elapsed-timer (text body)use-package-with-elapsed-timer410,15208
(defun use-package-require (name &optional no-require body)use-package-require430,16010
(defun use-package-plist-delete (plist property)use-package-plist-delete451,16661
(defun use-package-plist-delete-first (plist property)use-package-plist-delete-first461,16961
(defsubst use-package-plist-maybe-put (plist property value)use-package-plist-maybe-put473,17330
(defsubst use-package-plist-cons (plist property value)use-package-plist-cons479,17548
(defsubst use-package-plist-append (plist property value)use-package-plist-append483,17738
(defun use-package-split-list (pred xs)use-package-split-list487,17935
(defun use-package-split-list-at-keys (key lst)use-package-split-list-at-keys499,18264
(defun use-package-keyword-index (keyword)use-package-keyword-index509,18573
(defun use-package-normalize-plist (name input &optional plist merge-function)use-package-normalize-plist517,18814
(defun use-package-unalias-keywords (name args)use-package-unalias-keywords549,20238
(defun use-package-merge-keys (key new old)use-package-merge-keys557,20519
(defun use-package-sort-keywords (plist)use-package-sort-keywords563,20701
(defun use-package-normalize-keywords (name args)use-package-normalize-keywords579,21210
(defun use-package-process-keywords (name plist &optional state)use-package-process-keywords684,26127
(defun use-package-list-insert (elem xs &optional anchor after test)use-package-list-insert713,27402
(defun use-package-only-one (label args f)use-package-only-one742,28422
(defun use-package-as-one (label args f &optional allow-empty)use-package-as-one755,28813
(defun use-package-memoize (f arg)use-package-memoize770,29357
(defsubst use-package-normalize-value (label arg)use-package-normalize-value782,29844
(defun use-package-normalize-symbols (label arg &optional recursed)use-package-normalize-symbols793,30163
(defun use-package-normalize-symlist (name keyword args)use-package-normalize-symlist804,30554
(defun use-package-normalize-recursive-symbols (label arg)use-package-normalize-recursive-symbols808,30699
(defun use-package-normalize-recursive-symlist (name keyword args)use-package-normalize-recursive-symlist820,31080
(defun use-package-normalize-paths (label arg &optional recursed)use-package-normalize-paths824,31245
(defun use-package-normalize-predicate (name keyword args)use-package-normalize-predicate842,31968
(defun use-package-normalize-form (label args)use-package-normalize-form848,32146
(defun use-package-normalize-forms (name keyword args)use-package-normalize-forms860,32652
(defun use-package-normalize-pairsuse-package-normalize-pairs863,32767
(defun use-package-recognize-function (v &optional binding additional-pred)use-package-recognize-function888,33625
(defun use-package-normalize-function (v)use-package-normalize-function911,34242
(defun use-package-normalize-commands (args)use-package-normalize-commands929,34764
(defun use-package-normalize-mode (name keyword args)use-package-normalize-mode937,35046
(defun use-package-autoloads-mode (name keyword args)use-package-autoloads-mode945,35405
(defun use-package-handle-mode (name alist args rest state)use-package-handle-mode953,35686
(defun use-package-reset-statistics ()use-package-reset-statistics970,36192
(defun use-package-statistics-status (package)use-package-statistics-status974,36299
(defun use-package-statistics-last-event (package)use-package-statistics-last-event981,36625
(defun use-package-statistics-time (package)use-package-statistics-time990,37024
(defun use-package-statistics-convert (package)use-package-statistics-convert997,37329
(defun use-package-report ()use-package-report1011,37795
(define-derived-mode use-package-statistics-mode tabulated-list-modeuse-package-statistics-mode1028,38545
(defun use-package-statistics-gather (keyword name after)use-package-statistics-gather1039,38934
(defun use-package-normalize/:disabled (name keyword arg))use-package-normalize/:disabled1058,39600
(defun use-package-handler/:disabled (name keyword arg rest state)use-package-handler/:disabled1060,39660
(defun use-package-normalize-test (name keyword args)use-package-normalize-test1065,39807
(defalias 'use-package-normalize/:if 'use-package-normalize-test)use-package-normalize/:if1069,39949
(defun use-package-handler/:if (name keyword pred rest state)use-package-handler/:if1071,40016
(defalias 'use-package-normalize/:when 'use-package-normalize-test)use-package-normalize/:when1075,40171
(defalias 'use-package-handler/:when 'use-package-handler/:if)use-package-handler/:when1077,40240
(defalias 'use-package-normalize/:unless 'use-package-normalize-test)use-package-normalize/:unless1079,40304
(defun use-package-handler/:unless (name keyword pred rest state)use-package-handler/:unless1081,40375
(defalias 'use-package-normalize/:requires 'use-package-normalize-symlist)use-package-normalize/:requires1087,40552
(defun use-package-handler/:requires (name keyword requires rest state)use-package-handler/:requires1089,40628
(defun use-package-normalize/:load-path (name keyword args)use-package-normalize/:load-path1100,41000
(defun use-package-handler/:load-path (name keyword arg rest state)use-package-handler/:load-path1104,41146
(defalias 'use-package-normalize/:no-require 'use-package-normalize-predicate)use-package-normalize/:no-require1114,41450
(defun use-package-handler/:no-require (name keyword arg rest state)use-package-handler/:no-require1116,41530
(defalias 'use-package-normalize/:defines 'use-package-normalize-symlist)use-package-normalize/:defines1121,41665
(defun use-package-handler/:defines (name keyword arg rest state)use-package-handler/:defines1123,41740
(defalias 'use-package-normalize/:functions 'use-package-normalize-symlist)use-package-normalize/:functions1128,41874
(defun use-package-handler/:functions (name keyword arg rest state)use-package-handler/:functions1130,41951
(defalias 'use-package-normalize/:preface 'use-package-normalize-forms)use-package-normalize/:preface1135,42085
(defun use-package-handler/:preface (name keyword arg rest state)use-package-handler/:preface1137,42158
(defvar use-package--form)use-package--form1150,42597
(defvar use-package--hush-function #'(lambda (keyword body) body))use-package--hush-function1151,42624
(defsubst use-package-hush (context keyword body)use-package-hush1153,42692
(defun use-package-normalize/:catch (name keyword args)use-package-normalize/:catch1158,42860
(defun use-package-handler/:catch (name keyword arg rest state)use-package-handler/:catch1164,43032
(defalias 'use-package-normalize/:interpreter 'use-package-normalize-mode)use-package-normalize/:interpreter1199,44586
(defalias 'use-package-autoloads/:interpreter 'use-package-autoloads-mode)use-package-autoloads/:interpreter1200,44661
(defun use-package-handler/:interpreter (name keyword arg rest state)use-package-handler/:interpreter1202,44737
(defalias 'use-package-normalize/:mode 'use-package-normalize-mode)use-package-normalize/:mode1207,44893
(defalias 'use-package-autoloads/:mode 'use-package-autoloads-mode)use-package-autoloads/:mode1208,44961
(defun use-package-handler/:mode (name keyword arg rest state)use-package-handler/:mode1210,45030
(defalias 'use-package-normalize/:magic 'use-package-normalize-mode)use-package-normalize/:magic1215,45173
(defalias 'use-package-autoloads/:magic 'use-package-autoloads-mode)use-package-autoloads/:magic1216,45242
(defun use-package-handler/:magic (name keyword arg rest state)use-package-handler/:magic1218,45312
(defalias 'use-package-normalize/:magic-fallback 'use-package-normalize-mode)use-package-normalize/:magic-fallback1223,45466
(defalias 'use-package-autoloads/:magic-fallback 'use-package-autoloads-mode)use-package-autoloads/:magic-fallback1224,45544
(defun use-package-handler/:magic-fallback (name keyword arg rest state)use-package-handler/:magic-fallback1226,45623
(defun use-package-normalize/:hook (name keyword args)use-package-normalize/:hook1231,45785
(defalias 'use-package-autoloads/:hook 'use-package-autoloads-mode)use-package-autoloads/:hook1251,46673
(defun use-package-handler/:hook (name keyword args rest state)use-package-handler/:hook1253,46742
(defalias 'use-package-normalize/:commands 'use-package-normalize-symlist)use-package-normalize/:commands1274,47447
(defun use-package-handler/:commands (name keyword arg rest state)use-package-handler/:commands1276,47523
(defalias 'use-package-normalize/:defer 'use-package-normalize-predicate)use-package-normalize/:defer1296,48285
(defun use-package-handler/:defer (name keyword arg rest state)use-package-handler/:defer1298,48360
(defun use-package-normalize/:after (name keyword args)use-package-normalize/:after1312,48890
(defun use-package-after-count-uses (features)use-package-after-count-uses1318,49069
(defun use-package-require-after-load (features body)use-package-require-after-load1335,49757
(defun use-package-handler/:after (name keyword arg rest state)use-package-handler/:after1354,50520
(defalias 'use-package-normalize/:demand 'use-package-normalize-predicate)use-package-normalize/:demand1367,50965
(defun use-package-handler/:demand (name keyword arg rest state)use-package-handler/:demand1369,51041
(defun use-package-normalize/:custom (name keyword args)use-package-normalize/:custom1374,51171
(defun use-package-handler/:custom (name keyword args rest state)use-package-handler/:custom1386,51597
(defun use-package-normalize/:custom-face (name-symbol keyword arg)use-package-normalize/:custom-face1402,52149
(defun use-package-handler/:custom-face (name keyword args rest state)use-package-handler/:custom-face1419,52745
(defalias 'use-package-normalize/:init 'use-package-normalize-forms)use-package-normalize/:init1427,53021
(defun use-package-handler/:init (name keyword arg rest state)use-package-handler/:init1429,53091
(defun use-package-normalize/:load (name keyword args)use-package-normalize/:load1448,53836
(defun use-package-handler/:load (name keyword arg rest state)use-package-handler/:load1454,54014
(defalias 'use-package-normalize/:config 'use-package-normalize-forms)use-package-normalize/:config1462,54266
(defun use-package-handler/:config (name keyword arg rest state)use-package-handler/:config1464,54338
(defmacro use-package-core (name args)use-package-core1488,55262
(defmacro use-package (name &rest args)use-package1510,56218

elpa/use-package-20180314.1143/use-package-diminish.el,317
(defun use-package-normalize-diminish (name label arg &optional recursed)use-package-normalize-diminish38,1320
(defun use-package-normalize/:diminish (name keyword args)use-package-normalize/:diminish60,2062
(defun use-package-handler/:diminish (name keyword arg rest state)use-package-handler/:diminish65,2250

elpa/use-package-20180314.1143/use-package.el,0

elpa/use-package-20180314.1143/use-package-autoloads.el,666
(defalias 'use-package-normalize/:bind 'use-package-normalize-binder)use-package-normalize/:bind31,1145
(defalias 'use-package-normalize/:bind* 'use-package-normalize-binder)use-package-normalize/:bind*33,1216
(defalias 'use-package-autoloads/:bind 'use-package-autoloads-mode)use-package-autoloads/:bind35,1288
(defalias 'use-package-autoloads/:bind* 'use-package-autoloads-mode)use-package-autoloads/:bind*37,1357
(defalias 'use-package-normalize/:bind-keymap 'use-package-normalize-binder)use-package-normalize/:bind-keymap44,1559
(defalias 'use-package-normalize/:bind-keymap* 'use-package-normalize-binder)use-package-normalize/:bind-keymap*46,1637

elpa/use-package-20180314.1143/use-package-delight.el,288
(defun use-package-normalize-delight (name args)use-package-normalize-delight38,1317
(defun use-package-normalize/:delight (name keyword args)use-package-normalize/:delight55,1929
(defun use-package-handler/:delight (name keyword args rest state)use-package-handler/:delight80,2904

elpa/use-package-20180314.1143/use-package-lint.el,138
(defun use-package-lint-declaration (name plist)use-package-lint-declaration38,1286
(defun use-package-lint ()use-package-lint65,2299

elpa/melpa-upstream-visit-20130720.333/melpa-upstream-visit-autoloads.el,0

elpa/melpa-upstream-visit-20130720.333/melpa-upstream-visit-pkg.el,166
(define-package "melpa-upstream-visit" "20130720.333" "A set of kludges to visit a melpa-hosted package's homepage" (quote ((s "1.6.0"))))"melpa-upstream-visit"1,0

elpa/melpa-upstream-visit-20130720.333/melpa-upstream-visit.el,3418
(defgroup melpa-upstream-visit nilmelpa-upstream-visit67,2283
(defface muv:button-facemuv:button-face72,2423
(defcustom muv:button-label "Visit Homepage"muv:button-label79,2675
(defcustom muv:user-url-kludges nilmuv:user-url-kludges84,2814
(defcustom muv:url-kludges '(muv::github-kludgemuv:url-kludges90,3036
(defcustom muv:debug nilmuv:debug116,4331
(defcustom muv:button-location 'top-rightmuv:button-location123,4523
(defcustom muv:completing-read-function 'ido-completing-readmuv:completing-read-function131,4850
(defun muv::as-string (symbol-or-string)muv::as-string140,5124
(defun muv::compare-fetcher (fetcher1 fetcher2)muv::compare-fetcher145,5276
(defun* muv::github-kludge (_package-name &key fetcher repo &allow-other-keys)muv::github-kludge148,5388
(defun* muv::wiki-kludge (package-name &key fetcher &allow-other-keys)muv::wiki-kludge151,5554
(defun* muv::savannah-nongnu-git-kludge (_package-name &key fetcher url &allow-other-keys)muv::savannah-nongnu-git-kludge154,5727
(defun* muv::savannah-gnu-git-kludge (_package-name &key fetcher url &allow-other-keys)muv::savannah-gnu-git-kludge159,6033
(defun* muv::savannah-gnu-bzr-kludge (_package-name &key fetcher url &allow-other-keys)muv::savannah-gnu-bzr-kludge164,6346
(defun* muv::naquadah-git-kludge (_package-name &key url &allow-other-keys)muv::naquadah-git-kludge169,6656
(defun* muv::google-code-hg-kludge (_package-name &key _fetcher url &allow-other-keys)muv::google-code-hg-kludge173,6901
(defun* muv::google-code-kludge (_package-name &key url &allow-other-keys)muv::google-code-kludge177,7085
(defun* muv::gitorious-kludge (_package-name &key url &allow-other-keys)muv::gitorious-kludge181,7254
(defun* muv::bitbucket-kludge (_package-name &key url &allow-other-keys)muv::bitbucket-kludge185,7451
(defun* muv::launchpad-kludge (_package-name &key url &allow-other-keys)muv::launchpad-kludge189,7649
(defun* muv::repo-or-cz-kludge (_package-name &key url &allow-other-keys)muv::repo-or-cz-kludge193,7814
(defun* muv::sourceforge-svn-kludge (_package-name &key url &allow-other-keys)muv::sourceforge-svn-kludge197,8033
(defun* muv::sourceforge-git-kludge (_package-name &key url &allow-other-keys)muv::sourceforge-git-kludge201,8290
(defun* muv::jblevins-kludge (_package-name &key url &allow-other-keys)muv::jblevins-kludge205,8559
(defun* muv::ryuslash-kludge (_package-name &key url &allow-other-keys)muv::ryuslash-kludge209,8784
(defun* muv::logilab-kludge (_package-name &key url &allow-other-keys)muv::logilab-kludge213,9014
(defun* muv::joyful-kludge (_package-name &key url &allow-other-keys)muv::joyful-kludge217,9243
(defun* muv::hub-darcs-kludge (_package-name &key url &allow-other-keys)muv::hub-darcs-kludge221,9407
(defun* muv::svn-common-kludge (_package-name &key fetcher url &allow-other-keys)muv::svn-common-kludge225,9579
(defun* muv::plain-url-kludge (_package-name &key url &allow-other-keys)muv::plain-url-kludge228,9751
(defun muv::recipe-url (package)muv::recipe-url231,9870
(defun muv::fetch-recipe (package callback)muv::fetch-recipe236,10042
(defun muv::first-non-nil-result (function-list &rest args)muv::first-non-nil-result252,10918
(defun muv::url-from-recipe(recipe)muv::url-from-recipe261,11359
(defun muv (package-name)muv268,11575
(defadvice describe-package-1 (after muv-describe-package-button  activate)describe-package-1287,12526

elpa/rainbow-mode-1.0.1/rainbow-mode.el,2809
(defgroup rainbow nilrainbow42,1198
(defvar rainbow-hexadecimal-colors-font-lock-keywordsrainbow-hexadecimal-colors-font-lock-keywords49,1326
(defvar rainbow-html-rgb-colors-font-lock-keywordsrainbow-html-rgb-colors-font-lock-keywords64,2121
(defvar rainbow-html-colors-font-lock-keywords nilrainbow-html-colors-font-lock-keywords77,2993
(defcustom rainbow-html-colors-alistrainbow-html-colors-alist81,3162
(defcustom rainbow-html-colors-major-mode-listrainbow-html-colors-major-mode-list234,7723
(defcustom rainbow-html-colors 'autorainbow-html-colors241,7983
(defvar rainbow-x-colors-font-lock-keywordsrainbow-x-colors-font-lock-keywords254,8475
(defcustom rainbow-x-colors-major-mode-listrainbow-x-colors-major-mode-list259,8647
(defcustom rainbow-x-colors 'autorainbow-x-colors266,8915
(defvar rainbow-latex-rgb-colors-font-lock-keywordsrainbow-latex-rgb-colors-font-lock-keywords279,9393
(defcustom rainbow-latex-colors-major-mode-listrainbow-latex-colors-major-mode-list288,9808
(defcustom rainbow-latex-colors 'autorainbow-latex-colors295,10031
(defvar rainbow-ansi-colors-font-lock-keywordsrainbow-ansi-colors-font-lock-keywords308,10532
(defcustom rainbow-ansi-colors-major-mode-listrainbow-ansi-colors-major-mode-list313,10732
(defcustom rainbow-ansi-colors 'autorainbow-ansi-colors320,10969
(defvar rainbow-r-colors-font-lock-keywords nilrainbow-r-colors-font-lock-keywords333,11460
(defcustom rainbow-r-colors-alistrainbow-r-colors-alist340,11859
(defcustom rainbow-r-colors-major-mode-listrainbow-r-colors-major-mode-list1003,31272
(defcustom rainbow-r-colors 'autorainbow-r-colors1010,31485
(defun rainbow-colorize-match (color &optional match)rainbow-colorize-match1023,31960
(defun rainbow-colorize-itself (&optional match)rainbow-colorize-itself1034,32444
(defun rainbow-colorize-hexadecimal-without-sharp ()rainbow-colorize-hexadecimal-without-sharp1038,32604
(defun rainbow-colorize-by-assoc (assoc-list)rainbow-colorize-by-assoc1042,32786
(defun rainbow-rgb-relative-to-absolute (number)rainbow-rgb-relative-to-absolute1047,33030
(defun rainbow-colorize-hsl ()rainbow-colorize-hsl1057,33543
(defun rainbow-colorize-rgb ()rainbow-colorize-rgb1067,33988
(defun rainbow-colorize-rgb-float ()rainbow-colorize-rgb-float1074,34351
(defvar ansi-color-context)ansi-color-context1081,34723
(defvar xterm-color-current)xterm-color-current1082,34751
(defun rainbow-colorize-ansi ()rainbow-colorize-ansi1084,34781
(defun rainbow-color-luminance (red green blue)rainbow-color-luminance1118,36339
(defun rainbow-x-color-luminance (color)rainbow-x-color-luminance1123,36550
(defun rainbow-turn-on ()rainbow-turn-on1134,36901
(defun rainbow-turn-off ()rainbow-turn-off1182,39119
(define-minor-mode rainbow-moderainbow-mode1194,39514

elpa/rainbow-mode-1.0.1/rainbow-mode-pkg.el,174
(define-package "rainbow-mode" "1.0.1" "Colorize color names in buffers" 'nil :url "http://elpa.gnu.org/packages/rainbow-mode.html" :keywords '("faces"))"rainbow-mode"2,31

elpa/rainbow-mode-1.0.1/rainbow-mode-autoloads.el,0

elpa/bind-key-20180512.2130/bind-key.el,1099
(defgroup bind-key nilbind-key107,3776
(defcustom bind-key-column-widths '(18 . 40)bind-key-column-widths111,3865
(defcustom bind-key-segregation-regexpbind-key-segregation-regexp116,4020
(defcustom bind-key-describe-special-forms nilbind-key-describe-special-forms123,4254
(defvar override-global-map (make-keymap)override-global-map130,4478
(define-minor-mode override-global-modeoverride-global-mode133,4554
(defvar personal-keybindings nilpersonal-keybindings142,4863
(defmacro bind-key (key-name command &optional keymap predicate)bind-key148,5016
(defmacro unbind-key (key-name &optional keymap)unbind-key194,7071
(defmacro bind-key* (key-name command &optional predicate)bind-key*210,7758
(defun bind-keys-form (args keymap)bind-keys-form214,7952
(defmacro bind-keys (&rest args)bind-keys318,11970
(defmacro bind-keys* (&rest args)bind-keys*336,12686
(defun get-binding-description (elem)get-binding-description339,12784
(defun compare-keybindings (l r)compare-keybindings366,13540
(defun describe-personal-keybindings ()describe-personal-keybindings394,14495

elpa/bind-key-20180512.2130/bind-key-pkg.el,262
(define-package "bind-key" "20180512.2130" "A simple way to manage personal keybindings" 'nil :commit "c03d153e5882109e24c016d3afa6940af673ede6" :keywords '("keys" "keybinding" "config" "dotemacs") :url "https://github.com/jwiegley/use-package")"bind-key"2,31

elpa/bind-key-20180512.2130/bind-key-autoloads.el,0

elpa/rainbow-delimiters-20170929.432/rainbow-delimiters-autoloads.el,0

elpa/rainbow-delimiters-20170929.432/rainbow-delimiters.el,1432
(defgroup rainbow-delimiters nilrainbow-delimiters77,3181
(defgroup rainbow-delimiters-faces nilrainbow-delimiters-faces84,3476
(defcustom rainbow-delimiters-pick-face-functionrainbow-delimiters-pick-face-function93,3770
(defface rainbow-delimiters-base-facerainbow-delimiters-base-face108,4494
(defface rainbow-delimiters-unmatched-facerainbow-delimiters-unmatched-face113,4664
(defface rainbow-delimiters-mismatched-facerainbow-delimiters-mismatched-face120,4993
(defcustom rainbow-delimiters-max-face-count 9rainbow-delimiters-max-face-count143,6156
(defcustom rainbow-delimiters-outermost-only-face-count 0rainbow-delimiters-outermost-only-face-count153,6525
(defun rainbow-delimiters-default-pick-face (depth match _loc)rainbow-delimiters-default-pick-face161,6768
(defun rainbow-delimiters--apply-color (loc depth match)rainbow-delimiters--apply-color191,8105
(defun rainbow-delimiters--char-ineligible-p (loc ppss delim-syntax-code)rainbow-delimiters--char-ineligible-p201,8572
(defun rainbow-delimiters--propertize (end)rainbow-delimiters--propertize227,9638
(defconst rainbow-delimiters--font-lock-keywordsrainbow-delimiters--font-lock-keywords260,11177
(define-minor-mode rainbow-delimiters-moderainbow-delimiters-mode264,11279
(defun rainbow-delimiters-mode-enable ()rainbow-delimiters-mode-enable290,12705
(defun rainbow-delimiters-mode-disable ()rainbow-delimiters-mode-disable295,12831

elpa/rainbow-delimiters-20170929.432/rainbow-delimiters-pkg.el,283
(define-package "rainbow-delimiters" "20170929.432" "Highlight brackets according to their depth" 'nil :commit "19b93892afa0494ba749c2ca9c154e04447ad778" :keywords '("faces" "convenience" "lisp" "tools") :url "https://github.com/Fanael/rainbow-delimiters")"rainbow-delimiters"2,31

elpa/let-alist-1.0.5/let-alist-pkg.el,135
(define-package "let-alist" "1.0.5" "Easily let-bind values of an assoc-list by their names" (quote ((emacs "24.1"))))"let-alist"1,0

elpa/let-alist-1.0.5/let-alist-autoloads.el,0

elpa/let-alist-1.0.5/let-alist.el,356
(defun let-alist--deep-dot-search (data)let-alist--deep-dot-search67,2308
(defun let-alist--access-sexp (symbol variable)let-alist--access-sexp87,3228
(defun let-alist--list-to-sexp (list var)let-alist--list-to-sexp97,3583
(defun let-alist--remove-dot (symbol)let-alist--remove-dot103,3816
(defmacro let-alist (alist &rest body)let-alist113,4073

elpa/restart-emacs-20180601.331/restart-emacs-pkg.el,238
(define-package "restart-emacs" "20180601.331" "Restart emacs from within emacs" 'nil :commit "9aa90d3df9e08bc420e1c9845ee3ff568e911bd9" :keywords '("convenience") :url "https://github.com/iqbalansari/restart-emacs")"restart-emacs"2,31

elpa/restart-emacs-20180601.331/restart-emacs.el,2761
(defgroup restart-emacs nilrestart-emacs42,1204
(defcustom restart-emacs-daemon-with-tty-frames-p nilrestart-emacs-daemon-with-tty-frames-p47,1321
(defcustom restart-emacs-restore-frames nilrestart-emacs-restore-frames55,1581
(defun restart-emacs--string-join (strings &optional separator)restart-emacs--string-join69,2040
(defun restart-emacs--user-error (format &rest args)restart-emacs--user-error78,2392
(defvar restart-emacs--args nilrestart-emacs--args90,2717
(defun restart-emacs--get-emacs-binary ()restart-emacs--get-emacs-binary93,2819
(defun restart-emacs--record-tty-file (current &rest ignored)restart-emacs--record-tty-file104,3350
(defun restart-emacs--notify-connection-instructions (tty filename)restart-emacs--notify-connection-instructions114,3854
(defun restart-emacs--frameset-tty-filter (tty filtered parameters saving)restart-emacs--frameset-tty-filter136,5148
(defun restart-emacs--restore-frames-using-desktop (file)restart-emacs--restore-frames-using-desktop153,5894
(defun restart-emacs--save-frames-using-desktop ()restart-emacs--save-frames-using-desktop193,7958
(defun restart-emacs--frame-restore-args ()restart-emacs--frame-restore-args205,8598
(defun restart-emacs--start-gui-using-sh (&optional args)restart-emacs--start-gui-using-sh220,9384
(defun restart-emacs--start-gui-on-windows (&optional args)restart-emacs--start-gui-on-windows232,9943
(defun restart-emacs--start-emacs-in-terminal (&optional args)restart-emacs--start-emacs-in-terminal240,10254
(defun restart-emacs--daemon-using-sh (&optional args)restart-emacs--daemon-using-sh252,10891
(defun restart-emacs--daemon-on-windows (&optional args)restart-emacs--daemon-on-windows265,11479
(defun restart-emacs--ensure-can-restart ()restart-emacs--ensure-can-restart278,11995
(defun restart-emacs--launch-other-emacs (arguments)restart-emacs--launch-other-emacs297,13023
(defun restart-emacs--translate-prefix-to-args (prefix)restart-emacs--translate-prefix-to-args315,14088
(defun restart-emacs--guess-startup-directory-using-proc ()restart-emacs--guess-startup-directory-using-proc327,14623
(defun restart-emacs--guess-startup-directory-using-lsof ()restart-emacs--guess-startup-directory-using-lsof332,14872
(defun restart-emacs--guess-startup-directory-using-buffers ()restart-emacs--guess-startup-directory-using-buffers343,15385
(defun restart-emacs--guess-startup-directory-from-env ()restart-emacs--guess-startup-directory-from-env354,15901
(defun restart-emacs--guess-startup-directory ()restart-emacs--guess-startup-directory359,16097
(defun restart-emacs-handle-command-line-args (&rest ignored)restart-emacs-handle-command-line-args378,16889
(defun restart-emacs (&optional args)restart-emacs389,17340

elpa/restart-emacs-20180601.331/restart-emacs-autoloads.el,0

elpa/helm-20180610.2230/helm-command.el,1908
(defgroup helm-command nilhelm-command27,915
(defcustom helm-M-x-requires-pattern 0helm-M-x-requires-pattern31,1022
(defcustom helm-M-x-always-save-history nilhelm-M-x-always-save-history37,1198
(defcustom helm-M-x-reverse-history nilhelm-M-x-reverse-history42,1362
(defcustom helm-M-x-fuzzy-match nilhelm-M-x-fuzzy-match47,1522
(defcustom helm-M-x-default-sort-fn #'helm-M-x-fuzzy-sort-candidateshelm-M-x-default-sort-fn52,1655
(defgroup helm-command-faces nilhelm-command-faces64,1933
(defface helm-M-x-key '((t (:foreground "orange" :underline t)))helm-M-x-key70,2076
(defvar helm-M-x-input-history nil)helm-M-x-input-history75,2220
(defvar helm-M-x-prefix-argument nilhelm-M-x-prefix-argument76,2256
(defun helm-M-x-get-major-mode-command-alist (mode-map)helm-M-x-get-major-mode-command-alist80,2344
(defun helm-get-mode-map-from-mode (mode)helm-get-mode-map-from-mode88,2696
(defun helm-M-x-current-mode-map-alist ()helm-M-x-current-mode-map-alist105,3523
(defun helm-M-x-transformer-1 (candidates &optional sort)helm-M-x-transformer-1112,3791
(defun helm-M-x-transformer (candidates _source)helm-M-x-transformer140,5173
(defun helm-M-x-transformer-hist (candidates _source)helm-M-x-transformer-hist144,5336
(defun helm-M-x--notify-prefix-arg ()helm-M-x--notify-prefix-arg148,5482
(defun helm-cmd--get-current-function-name ()helm-cmd--get-current-function-name154,5677
(defun helm-cmd--get-preconfigured-commands (&optional dir)helm-cmd--get-preconfigured-commands160,5883
(defvar helm-M-x-maphelm-M-x-map171,6378
(defun helm-M-x-universal-argument ()helm-M-x-universal-argument178,6592
(defun helm-M-x-fuzzy-sort-candidates (candidates _source)helm-M-x-fuzzy-sort-candidates193,7203
(defun helm-M-x-read-extended-command (&optional collection history)helm-M-x-read-extended-command196,7319
(defun helm-M-x (_arg &optional command-name)helm-M-x261,10364

elpa/helm-20180610.2230/helm-font.el,2629
(defgroup helm-font nilhelm-font25,868
(defcustom helm-ucs-recent-size 10helm-ucs-recent-size29,960
(defcustom helm-ucs-actionshelm-ucs-actions34,1070
(defvar helm-ucs-maphelm-ucs-map45,1565
(defface helm-ucs-charhelm-ucs-char55,1990
(defvar helm-xfonts-cache nil)helm-xfonts-cache63,2166
(defvar helm-previous-font nil)helm-previous-font64,2197
(defvar helm-source-xfontshelm-source-xfonts65,2229
(defvar helm-ucs--max-len nil)helm-ucs--max-len92,3373
(defvar helm-ucs--names nil)helm-ucs--names93,3404
(defvar helm-ucs-history nil)helm-ucs-history94,3433
(defvar helm-ucs-recent nilhelm-ucs-recent95,3463
(defun helm-calculate-ucs-alist-max-len (names)helm-calculate-ucs-alist-max-len98,3535
(defun helm-calculate-ucs-hash-table-max-len (names)helm-calculate-ucs-hash-table-max-len105,3851
(defun helm-calculate-ucs-max-len ()helm-calculate-ucs-max-len113,4225
(defun helm-ucs-collect-symbols-alist (names)helm-ucs-collect-symbols-alist120,4504
(defun helm-ucs-collect-symbols-hash-table (names)helm-ucs-collect-symbols-hash-table144,5578
(defun helm-ucs-collect-symbols (ucs-struct)helm-ucs-collect-symbols165,6471
(defun helm-ucs-init ()helm-ucs-init174,6793
(defun helm-ucs-match (candidate n)helm-ucs-match186,7125
(defun helm-ucs-save-recentest (candidate)helm-ucs-save-recentest194,7402
(defun helm-ucs-insert (candidate n)helm-ucs-insert201,7642
(defun helm-ucs-insert-char (candidate)helm-ucs-insert-char207,7828
(defun helm-ucs-insert-code (candidate)helm-ucs-insert-code211,7950
(defun helm-ucs-insert-name (candidate)helm-ucs-insert-name215,8072
(defun helm-ucs-kill-char (_candidate)helm-ucs-kill-char220,8210
(defun helm-ucs-kill-code (candidate)helm-ucs-kill-code229,8554
(defun helm-ucs-kill-name (candidate)helm-ucs-kill-name233,8674
(defun helm-ucs-forward-char (_candidate)helm-ucs-forward-char239,8840
(defun helm-ucs-backward-char (_candidate)helm-ucs-backward-char243,8934
(defun helm-ucs-delete-backward (_candidate)helm-ucs-delete-backward247,9030
(defun helm-ucs-insert-space (_candidate)helm-ucs-insert-space251,9127
(defun helm-ucs-persistent-forward ()helm-ucs-persistent-forward255,9217
(defun helm-ucs-persistent-backward ()helm-ucs-persistent-backward262,9454
(defun helm-ucs-persistent-delete ()helm-ucs-persistent-delete269,9688
(defun helm-ucs-persistent-insert-space ()helm-ucs-persistent-insert-space276,9924
(defvar helm-source-ucs-recenthelm-source-ucs-recent282,10128
(defvar helm-source-ucshelm-source-ucs291,10428
(defun helm-select-xfont ()helm-select-xfont307,11051
(defun helm-ucs (arg)helm-ucs314,11230

elpa/helm-20180610.2230/helm-regexp.el,4517
(defgroup helm-regexp nilhelm-regexp28,977
(defcustom helm-moccur-always-search-in-current nilhelm-moccur-always-search-in-current32,1076
(defcustom helm-moccur-use-ioccur-style-keys thelm-moccur-use-ioccur-style-keys37,1237
(defcustom helm-moccur-auto-update-on-resume nilhelm-moccur-auto-update-on-resume42,1395
(defcustom helm-source-multi-occur-actionshelm-source-multi-occur-actions55,2079
(defcustom helm-moccur-truncate-lines thelm-moccur-truncate-lines63,2419
(defcustom helm-moccur-show-buffer-fontification nilhelm-moccur-show-buffer-fontification68,2567
(defcustom helm-moccur-buffer-substring-fn-for-modeshelm-moccur-buffer-substring-fn-for-modes78,3081
(defcustom helm-occur-show-buffer-name nilhelm-occur-show-buffer-name91,3746
(defface helm-moccur-bufferhelm-moccur-buffer99,4010
(defface helm-resume-need-updatehelm-resume-need-update104,4164
(defvar helm-moccur-maphelm-moccur-map110,4313
(defvar helm-build-regexp-history nil)helm-build-regexp-history126,4999
(defvar helm-occur-history nil)helm-occur-history127,5038
(defun helm-query-replace-regexp (_candidate)helm-query-replace-regexp129,5071
(defun helm-kill-regexp-as-sexp (_candidate)helm-kill-regexp-as-sexp137,5415
(defun helm-kill-regexp (_candidate)helm-kill-regexp142,5568
(defun helm-query-replace-args (regexp)helm-query-replace-args146,5687
(defvar helm-source-regexphelm-source-regexp160,6256
(defun helm-regexp-get-line (s e)helm-regexp-get-line180,7038
(defun helm-regexp-persistent-action (pt)helm-regexp-persistent-action193,7526
(defun helm-regexp-kill-new (input)helm-regexp-kill-new197,7624
(defvar helm-source-occur nil)helm-source-occur205,7756
(defun helm-occur-init-source ()helm-occur-init-source206,7787
(defvar helm-multi-occur-buffer-list nil)helm-multi-occur-buffer-list217,7979
(defvar helm-multi-occur-buffer-tick nil)helm-multi-occur-buffer-tick218,8021
(defvar helm-occur--invisible nilhelm-occur--invisible219,8063
(defun helm-moccur-init ()helm-moccur-init223,8212
(defun helm-moccur--next-or-previous-char ()helm-moccur--next-or-previous-char248,9470
(defun helm-moccur-get-line (beg end)helm-moccur-get-line253,9616
(defun helm-moccur-persistent-action (candidate)helm-moccur-persistent-action305,12111
(defun helm-moccur-goto-line (candidate)helm-moccur-goto-line309,12230
(defun helm-moccur-goto-line-ow (candidate)helm-moccur-goto-line-ow314,12388
(defun helm-moccur-goto-line-of (candidate)helm-moccur-goto-line-of320,12589
(defun helm-moccur-run-goto-line-ow ()helm-moccur-run-goto-line-ow326,12783
(defun helm-moccur-run-goto-line-of ()helm-moccur-run-goto-line-of333,13037
(defun helm-moccur-run-default-action ()helm-moccur-run-default-action340,13288
(defvar helm-moccur-before-init-hook nilhelm-moccur-before-init-hook346,13478
(defvar helm-moccur-after-init-hook nilhelm-moccur-after-init-hook349,13582
(defvar helm-source-moccur nil)helm-source-moccur352,13684
(defclass helm-source-multi-occur (helm-source-in-buffer)helm-source-multi-occur353,13716
(defun helm-moccur-resume-fn ()helm-moccur-resume-fn375,14653
(defun helm-moccur-filter-one-by-one (candidate &optional outside-helm)helm-moccur-filter-one-by-one421,17611
(defun helm-multi-occur-1 (buffers &optional input)helm-multi-occur-1445,18688
(defun helm-moccur-run-save-buffer ()helm-moccur-run-save-buffer470,19785
(defvar helm-moccur-mode-maphelm-moccur-mode-map481,20056
(defun helm-moccur-mode-goto-line ()helm-moccur-mode-goto-line495,20815
(defun helm-moccur-mode-goto-line-ow ()helm-moccur-mode-goto-line-ow500,20998
(defun helm-moccur-mode-goto-line-ow-forward-1 (arg)helm-moccur-mode-goto-line-ow-forward-1505,21187
(defun helm-moccur-mode-goto-line-ow-forward ()helm-moccur-mode-goto-line-ow-forward514,21416
(defun helm-moccur-mode-goto-line-ow-backward ()helm-moccur-mode-goto-line-ow-backward518,21528
(defun helm-moccur-save-results (_candidate)helm-moccur-save-results522,21642
(defun helm-moccur-mode-mouse-goto-line (event)helm-moccur-mode-mouse-goto-line566,23557
(define-derived-mode helm-moccur-modehelm-moccur-mode577,23938
(defun helm-moccur-mode--revert-buffer-function (&optional _ignore-auto _noconfirm)helm-moccur-mode--revert-buffer-function589,24382
(defun helm-regexp ()helm-regexp640,26460
(defun helm-occur ()helm-occur655,27032
(defun helm-occur-from-isearch ()helm-occur-from-isearch705,29343
(defun helm-multi-occur-from-isearch (&optional _arg)helm-multi-occur-from-isearch729,30255

elpa/helm-20180610.2230/helm-x-files.el,887
(defun helm-files-in-all-dired-candidates ()helm-files-in-all-dired-candidates26,907
(defclass helm-files-dired-source (helm-source-sync helm-type-file)helm-files-dired-source36,1299
(defvar helm-source-files-in-all-diredhelm-source-files-in-all-dired39,1433
(defvar session-file-alist)session-file-alist46,1704
(defclass helm-source-session-class (helm-source-sync)helm-source-session-class47,1732
(defvar helm-source-session nilhelm-source-session58,2270
(defcustom helm-session-fuzzy-match nilhelm-session-fuzzy-match61,2338
(defun helm-source-tracker-transformer (candidates _source)helm-source-tracker-transformer76,2741
(defvar helm-source-tracker-searchhelm-source-tracker-search84,3151
(defclass helm-mac-spotlight-source (helm-source-async helm-type-file)helm-mac-spotlight-source108,4220
(defvar helm-source-mac-spotlighthelm-source-mac-spotlight115,4507

elpa/helm-20180610.2230/helm-pkg.el,105
(define-package "helm" "20180610.2230" "Helm is an Emacs incremental and narrowing framework""helm"1,0

elpa/helm-20180610.2230/helm-misc.el,2369
(defvar display-time-world-list)display-time-world-list25,941
(defgroup helm-misc nilhelm-misc31,1134
(defcustom helm-time-zone-home-location "Paris"helm-time-zone-home-location35,1224
(defcustom helm-timezone-actionshelm-timezone-actions40,1341
(defface helm-time-zone-currenthelm-time-zone-current47,1593
(defface helm-time-zone-homehelm-time-zone-home52,1741
(defvar LaTeX-math-menu)LaTeX-math-menu60,1905
(defun helm-latex-math-candidates ()helm-latex-math-candidates61,1930
(defvar helm-source-latex-mathhelm-source-latex-math68,2199
(defun helm-jabber-online-contacts ()helm-jabber-online-contacts80,2561
(defvar helm-source-jabber-contactshelm-source-jabber-contacts90,2878
(defvar zoneinfo-style-world-list)zoneinfo-style-world-list102,3277
(defvar legacy-style-world-list)legacy-style-world-list103,3312
(defun helm-time-zone-transformer (candidates _source)helm-time-zone-transformer105,3346
(defvar helm-source-time-worldhelm-source-time-world117,3834
(defun helm-call-interactively (cmd-or-name)helm-call-interactively144,5072
(defvar helm-minibuffer-history-maphelm-minibuffer-history-map161,5706
(defcustom helm-minibuffer-history-must-match thelm-minibuffer-history-must-match167,5890
(defun helm-comint-input-ring-action (candidate)helm-comint-input-ring-action178,6188
(defvar helm-source-comint-input-ringhelm-source-comint-input-ring184,6395
(defvar helm-source-ratpoison-commandshelm-source-ratpoison-commands196,6748
(defun helm-ratpoison-commands-init ()helm-ratpoison-commands-init204,7079
(defun helm-ratpoison-commands-display-to-real (display)helm-ratpoison-commands-display-to-real219,7708
(defun helm-ratpoison-commands-execute (candidate)helm-ratpoison-commands-execute223,7844
(defvar helm-source-stumpwm-commandshelm-source-stumpwm-commands229,7980
(defun helm-stumpwm-commands-init ()helm-stumpwm-commands-init236,8241
(defun helm-stumpwm-commands-execute (candidate)helm-stumpwm-commands-execute246,8618
(defun helm-world-time ()helm-world-time250,8735
(defun helm-insert-latex-math ()helm-insert-latex-math257,8969
(defun helm-ratpoison-commands ()helm-ratpoison-commands263,9154
(defun helm-stumpwm-commands()helm-stumpwm-commands270,9380
(defun helm-minibuffer-history ()helm-minibuffer-history277,9588
(defun helm-comint-input-ring ()helm-comint-input-ring313,11413

elpa/helm-20180610.2230/helm-types.el,2894
(defclass helm-type-file (helm-source) ()helm-type-file29,966
(defmethod helm-source-get-action-from-type ((object helm-type-file))helm-source-get-action-from-type32,1048
(defun helm-actions-from-type-file ()helm-actions-from-type-file35,1150
(defcustom helm-type-file-actionshelm-type-file-actions40,1319
(defmethod helm--setup-source :primary ((_source helm-type-file)))helm--setup-source73,3367
(defmethod helm--setup-source :before ((source helm-type-file))helm--setup-source75,3435
(defclass helm-type-bookmark (helm-source) ()helm-type-bookmark94,4284
(defcustom helm-type-bookmark-actionshelm-type-bookmark-actions97,4370
(defmethod helm-source-get-action-from-type ((object helm-type-bookmark))helm-source-get-action-from-type112,4973
(defmethod helm--setup-source :primary ((_source helm-type-bookmark)))helm--setup-source115,5079
(defmethod helm--setup-source :before ((source helm-type-bookmark))helm--setup-source117,5151
(defclass helm-type-buffer (helm-source) ()helm-type-buffer128,5642
(defcustom helm-type-buffer-actionshelm-type-buffer-actions131,5723
(defmethod helm-source-get-action-from-type ((object helm-type-buffer))helm-source-get-action-from-type161,6911
(defmethod helm--setup-source :primary ((_source helm-type-buffer)))helm--setup-source164,7015
(defmethod helm--setup-source :before ((source helm-type-buffer))helm--setup-source166,7085
(defclass helm-type-function (helm-source) ()helm-type-function177,7596
(defcustom helm-type-function-actionshelm-type-function-actions180,7686
(defmethod helm-source-get-action-from-type ((object helm-type-function))helm-source-get-action-from-type194,8221
(defun helm-actions-from-type-function ()helm-actions-from-type-function197,8327
(defmethod helm--setup-source :primary ((_source helm-type-function)))helm--setup-source202,8504
(defmethod helm--setup-source :before ((source helm-type-function))helm--setup-source204,8576
(defclass helm-type-command (helm-source) ()helm-type-command214,8972
(defun helm-actions-from-type-command ()helm-actions-from-type-command217,9060
(defcustom helm-type-command-actionshelm-type-command-actions222,9235
(defmethod helm--setup-source :primary ((_source helm-type-command)))helm--setup-source230,9522
(defmethod helm--setup-source :before ((source helm-type-command))helm--setup-source232,9593
(defclass helm-type-timers (helm-source) ()helm-type-timers239,9906
(defcustom helm-type-timers-actionshelm-type-timers-actions242,9992
(defmethod helm--setup-source :primary ((_source helm-type-timers)))helm--setup-source258,10762
(defmethod helm--setup-source :before ((source helm-type-timers))helm--setup-source260,10832
(defun helm-build-type-file ()helm-build-type-file269,11212
(defun helm-build-type-function ()helm-build-type-function272,11280
(defun helm-build-type-command ()helm-build-type-command275,11356

elpa/helm-20180610.2230/helm-eshell.el,2259
(defvar eshell-special-chars-outside-quoting)eshell-special-chars-outside-quoting43,1751
(defgroup helm-eshell nilhelm-eshell46,1800
(defcustom helm-eshell-fuzzy-match nilhelm-eshell-fuzzy-match51,1885
(defvar helm-eshell-history-maphelm-eshell-history-map57,2032
(defvar helm-esh-completion-maphelm-esh-completion-map64,2235
(defvar helm-eshell--quit-flag nil)helm-eshell--quit-flag71,2437
(defclass helm-esh-source (helm-source-sync)helm-esh-source74,2476
(defvar helm-ec-target "")helm-ec-target102,3561
(defun helm-ec-insert (_candidate)helm-ec-insert103,3588
(defun helm-esh-get-candidates ()helm-esh-get-candidates135,4979
(defclass helm-eshell-history-source (helm-source-sync)helm-eshell-history-source196,8093
(defun helm-esh-pcomplete ()helm-esh-pcomplete218,8838
(defun helm-eshell--quit-hook-fn ()helm-eshell--quit-hook-fn320,14518
(defun helm-eshell-history ()helm-eshell-history324,14605
(defface helm-eshell-prompts-promptidxhelm-eshell-prompts-promptidx349,15365
(defface helm-eshell-prompts-buffer-namehelm-eshell-prompts-buffer-name354,15512
(defcustom helm-eshell-prompts-promptidx-p thelm-eshell-prompts-promptidx-p359,15661
(defvar helm-eshell-prompts-keymaphelm-eshell-prompts-keymap364,15771
(defvar eshell-prompt-regexp)eshell-prompt-regexp372,16072
(defvar eshell-highlight-prompt)eshell-highlight-prompt373,16102
(defun helm-eshell-prompts-list (&optional buffer)helm-eshell-prompts-list375,16136
(defun helm-eshell-prompts-list-all ()helm-eshell-prompts-list-all397,17052
(defun helm-eshell-prompts-transformer (candidates &optional all)helm-eshell-prompts-transformer403,17251
(defun helm-eshell-prompts-all-transformer (candidates)helm-eshell-prompts-all-transformer420,18050
(defun helm-eshell-prompts-goto-other-window (candidate)helm-eshell-prompts-goto-other-window432,18494
(defun helm-eshell-prompts-goto-other-frame (candidate)helm-eshell-prompts-goto-other-frame435,18623
(defun helm-eshell-prompts-other-window ()helm-eshell-prompts-other-window438,18750
(defun helm-eshell-prompts-other-frame ()helm-eshell-prompts-other-frame444,18960
(defun helm-eshell-prompts ()helm-eshell-prompts451,19182
(defun helm-eshell-prompts-all ()helm-eshell-prompts-all464,19719

elpa/helm-20180610.2230/helm-config.el,441
(defgroup helm-config nilhelm-config30,1037
(defcustom helm-command-prefix-key "C-x c"helm-command-prefix-key34,1117
(defcustom helm-minibuffer-history-key "C-r"helm-minibuffer-history-key48,1605
(defvar helm-command-maphelm-command-map74,2688
(defvar helm-command-prefix)helm-command-prefix117,4997
(define-prefix-command 'helm-command-prefix)helm-command-prefix118,5026
(defun helm-configuration ()helm-configuration129,5217

elpa/helm-20180610.2230/helm-autoloads.el,1034
(defvar helm-adaptive-mode nil "\helm-adaptive-mode12,310
(defvar helm-comp-read-mode-line "\\<helm-comp-read-map>C/\\[helm-cr-empty-string]:Empty \\<helm-map>\\[helm-help]:Help \\[helm-select-action]:Act \\[helm-maybe-exit-minibuffer]/f1/f2/f-n:NthAct \\[helm-toggle-suspend-update]:Tog.suspend")helm-comp-read-mode-line433,12764
(defvar helm-read-file-name-mode-line-string "\\<helm-read-file-map>\\[helm-help]:Help C/\\[helm-cr-empty-string]:Empty \\<helm-map>\\[helm-select-action]:Act \\[helm-maybe-exit-minibuffer]/f1/f2/f-n:NthAct \\[helm-toggle-suspend-update]:Tog.suspend" "\helm-read-file-name-mode-line-string435,13005
(defvar helm-top-mode-line "\\<helm-top-map>\\[helm-help]:Help \\<helm-map>\\[helm-select-action]:Act \\[helm-maybe-exit-minibuffer]/f1/f2/f-n:NthAct \\[helm-toggle-suspend-update]:Tog.suspend")helm-top-mode-line438,13321
(defvar helm-mode nil "\helm-mode733,23651
(defvar helm-top-poll-mode nil "\helm-top-poll-mode996,31333
(defvar helm-popup-tip-mode nil "\helm-popup-tip-mode1061,33247

elpa/helm-20180610.2230/helm-files.el,23162
(defvar recentf-list)recentf-list55,2217
(defvar helm-mm-matching-method)helm-mm-matching-method56,2239
(defvar dired-async-mode)dired-async-mode57,2272
(defvar org-directory)org-directory58,2298
(defgroup helm-files nilhelm-files60,2323
(defcustom helm-tramp-verbose 0helm-tramp-verbose64,2412
(defcustom helm-ff-auto-update-initial-value nilhelm-ff-auto-update-initial-value71,2645
(defcustom helm-ff-lynx-style-map thelm-ff-lynx-style-map81,3049
(defcustom helm-ff-history-max-length 100helm-ff-history-max-length88,3290
(defcustom helm-ff-fuzzy-matching thelm-ff-fuzzy-matching93,3431
(defcustom helm-ff-tramp-not-fancy 'dirs-onlyhelm-ff-tramp-not-fancy99,3633
(defcustom helm-ff-exif-data-program "exiftran"helm-ff-exif-data-program112,4036
(defcustom helm-ff-exif-data-program-args "-d"helm-ff-exif-data-program-args117,4179
(defcustom helm-ff-newfile-prompt-p thelm-ff-newfile-prompt-p122,4317
(defcustom helm-ff-avfs-directory "~/.avfs"helm-ff-avfs-directory128,4478
(defcustom helm-ff-file-compressed-list '("gz" "bz2" "zip" "7z")helm-ff-file-compressed-list136,4779
(defcustom helm-ff-printer-list nilhelm-ff-printer-list141,4950
(defcustom helm-ff-transformer-show-only-basename thelm-ff-transformer-show-only-basename150,5353
(defcustom helm-ff-signal-error-on-dot-files thelm-ff-signal-error-on-dot-files157,5621
(defcustom helm-ff-search-library-in-sexp nilhelm-ff-search-library-in-sexp164,5883
(defcustom helm-tooltip-hide-delay 25helm-tooltip-hide-delay169,6035
(defcustom helm-ff-file-name-history-use-recentf nilhelm-ff-file-name-history-use-recentf174,6170
(defcustom helm-ff-skip-boring-files nilhelm-ff-skip-boring-files179,6339
(defcustom helm-ff-candidate-number-limit 5000helm-ff-candidate-number-limit189,6677
(defcustom helm-ff-up-one-level-preselect thelm-ff-up-one-level-preselect199,7158
(defcustom helm-files-save-history-extra-sourceshelm-files-save-history-extra-sources212,7638
(defcustom helm-find-files-before-init-hook nilhelm-find-files-before-init-hook219,7885
(defcustom helm-find-files-after-init-hook nilhelm-find-files-after-init-hook224,8032
(defcustom helm-find-files-bookmark-prefix "Helm-find-files: "helm-find-files-bookmark-prefix229,8177
(defcustom helm-ff-guess-ffap-filenames nilhelm-ff-guess-ffap-filenames234,8335
(defcustom helm-ff-guess-ffap-urls thelm-ff-guess-ffap-urls241,8571
(defcustom helm-ff-no-preselect nilhelm-ff-no-preselect248,8807
(defcustom helm-find-files-ignore-thing-at-point nilhelm-find-files-ignore-thing-at-point253,8956
(defcustom helm-substitute-in-filename-stay-on-remote nilhelm-substitute-in-filename-stay-on-remote261,9268
(defcustom helm-ff-goto-first-real-dired-exceptions '(dired-goto-file)helm-ff-goto-first-real-dired-exceptions266,9445
(defcustom helm-mounted-network-directories nilhelm-mounted-network-directories271,9641
(defcustom helm-browse-project-default-find-files-fnhelm-browse-project-default-find-files-fn281,9977
(defcustom helm-ff-kill-or-find-buffer-fname-fnhelm-ff-kill-or-find-buffer-fname-fn289,10229
(defcustom helm-modes-using-escaped-stringshelm-modes-using-escaped-strings311,11112
(defcustom helm-ff-allow-recursive-deletes nilhelm-ff-allow-recursive-deletes317,11300
(defcustom helm-ff-delete-files-function #'helm-delete-marked-fileshelm-ff-delete-files-function328,11786
(defgroup helm-files-faces nilhelm-files-faces349,12558
(defface helm-ff-prefixhelm-ff-prefix355,12695
(defface helm-ff-executablehelm-ff-executable360,12870
(defface helm-ff-suidhelm-ff-suid365,13017
(defface helm-ff-directoryhelm-ff-directory370,13170
(defface helm-ff-dotted-directoryhelm-ff-dotted-directory375,13337
(defface helm-ff-dotted-symlink-directoryhelm-ff-dotted-symlink-directory380,13514
(defface helm-ff-symlinkhelm-ff-symlink385,13714
(defface helm-ff-invalid-symlinkhelm-ff-invalid-symlink390,13860
(defface helm-ff-filehelm-ff-file395,14030
(defface helm-ff-dirshelm-ff-dirs400,14177
(defface helm-history-deletedhelm-history-deleted405,14359
(defface helm-history-remotehelm-history-remote410,14520
(defface helm-delete-async-messagehelm-delete-async-message415,14671
(defvar helm-find-files-maphelm-find-files-map423,14866
(defvar helm-read-file-maphelm-read-file-map492,19488
(defvar helm-find-files-doc-header " (\\<helm-find-files-map>\\[helm-find-files-up-one-level]: Go up one level)"helm-find-files-doc-header518,20942
(defvar helm-ff-auto-update-flag nilhelm-ff-auto-update-flag520,21138
(defvar helm-ff-last-expanded nilhelm-ff-last-expanded523,21316
(defvar helm-ff-default-directory nil)helm-ff-default-directory525,21394
(defvar helm-ff-history nil)helm-ff-history526,21433
(defvar helm-ff-cand-to-mark nil)helm-ff-cand-to-mark527,21462
(defvar helm-ff-url-regexphelm-ff-url-regexp528,21496
(defvar helm-tramp-file-name-regexp "\\`/\\([^/:|]+\\):")helm-tramp-file-name-regexp535,21911
(defvar helm-marked-buffer-name "*helm marked*")helm-marked-buffer-name536,21969
(defvar helm-ff--auto-update-state nil)helm-ff--auto-update-state537,22018
(defvar helm-ff--deleting-char-backward nil)helm-ff--deleting-char-backward538,22058
(defvar helm-multi-files--toggle-locate nil)helm-multi-files--toggle-locate539,22103
(defvar helm-ff--move-to-first-real-candidate t)helm-ff--move-to-first-real-candidate540,22148
(defvar helm-find-files--toggle-bookmark nil)helm-find-files--toggle-bookmark541,22197
(defvar helm-ff--tramp-methods nil)helm-ff--tramp-methods542,22243
(defvar helm-ff--directory-files-hash (make-hash-table :test 'equal))helm-ff--directory-files-hash543,22279
(defvar helm-ff-history-buffer-name "*helm-find-files history*")helm-ff-history-buffer-name544,22349
(defcustom helm-find-files-actionshelm-find-files-actions549,22442
(defvar helm-source-find-files nilhelm-source-find-files606,25721
(defclass helm-source-ffiles (helm-source-sync)helm-source-ffiles610,25835
(defun helm-ff-make-bookmark-record ()helm-ff-make-bookmark-record650,27636
(defun helm-ff-bookmark-jump (bookmark)helm-ff-bookmark-jump657,27887
(defun helm-ff-bookmark-set ()helm-ff-bookmark-set670,28516
(defcustom helm-dwim-target nilhelm-dwim-target681,28888
(defun helm-dwim-target-directory ()helm-dwim-target-directory695,29563
(defun helm-ff--count-and-collect-dups (files)helm-ff--count-and-collect-dups722,30911
(defun helm-find-files-do-action (action)helm-find-files-do-action738,31650
(defun helm-find-files-copy (_candidate)helm-find-files-copy784,34043
(defun helm-find-files-backup (_candidate)helm-find-files-backup788,34161
(defun helm-find-files-rename (_candidate)helm-find-files-rename795,34491
(defun helm-find-files-symlink (_candidate)helm-find-files-symlink799,34615
(defun helm-find-files-relsymlink (_candidate)helm-find-files-relsymlink803,34742
(defun helm-find-files-hardlink (_candidate)helm-find-files-hardlink807,34878
(defun helm-find-files-other-window (_candidate)helm-find-files-other-window811,35008
(defun helm-find-files-byte-compile (_candidate)helm-find-files-byte-compile819,35335
(defun helm-find-files-load-files (_candidate)helm-find-files-load-files826,35622
(defun helm-find-files-ediff-files-1 (candidate &optional merge)helm-find-files-ediff-files-1832,35838
(defun helm-find-files-ediff-files (candidate)helm-find-files-ediff-files853,36830
(defun helm-find-files-ediff-merge-files (candidate)helm-find-files-ediff-merge-files856,36923
(defun helm-find-files-grep (_candidate)helm-find-files-grep859,37029
(defun helm-ff-git-grep (_candidate)helm-ff-git-grep864,37232
(defun helm-find-files-ag (_candidate)helm-find-files-ag868,37401
(defun helm-ff-zgrep (_candidate)helm-ff-zgrep872,37525
(defun helm-ff-pdfgrep (_candidate)helm-ff-pdfgrep876,37705
(defun helm-ff-etags-select (candidate)helm-ff-etags-select889,38310
(defvar eshell-command-aliases-list nil)eshell-command-aliases-list899,38800
(defvar helm-eshell-command-on-file-input-history nil)helm-eshell-command-on-file-input-history900,38841
(defun helm-find-files-eshell-command-on-file-1 (&optional map)helm-find-files-eshell-command-on-file-1901,38896
(defun helm-find-files-eshell-command-on-file (_candidate)helm-find-files-eshell-command-on-file1009,44142
(defun helm-ff-switch-to-eshell (_candidate)helm-ff-switch-to-eshell1014,44394
(defun helm-ff-touch-files (_candidate)helm-ff-touch-files1039,45569
(defun helm-ff-run-touch-files ()helm-ff-run-touch-files1079,47560
(defun helm-ff-serial-rename-action (method)helm-ff-serial-rename-action1086,47797
(defun helm-ff-member-directory-p (file directory)helm-ff-member-directory-p1125,49628
(defun helm-ff-serial-rename (_candidate)helm-ff-serial-rename1179,52421
(defun helm-ff-serial-rename-by-symlink (_candidate)helm-ff-serial-rename-by-symlink1186,52692
(defun helm-ff-serial-rename-by-copying (_candidate)helm-ff-serial-rename-by-copying1193,52975
(defvar helm-ff-query-replace-fnames-history-from nil)helm-ff-query-replace-fnames-history-from1200,53252
(defvar helm-ff-query-replace-fnames-history-to nil)helm-ff-query-replace-fnames-history-to1201,53307
(defun helm-ff-query-replace-on-filenames (candidates)helm-ff-query-replace-on-filenames1202,53360
(defun helm-ff--prepare-str-with-regexp (str &optional rep1 rep2)helm-ff--prepare-str-with-regexp1326,61329
(defun helm-ff-query-replace-fnames-on-marked (_candidate)helm-ff-query-replace-fnames-on-marked1348,62487
(defun helm-ff-run-query-replace-fnames-on-marked ()helm-ff-run-query-replace-fnames-on-marked1353,62699
(defun helm-ff-query-replace (_candidate)helm-ff-query-replace1359,62930
(defun helm-ff-query-replace-regexp (_candidate)helm-ff-query-replace-regexp1364,63163
(defun helm-ff-run-query-replace ()helm-ff-run-query-replace1369,63407
(defun helm-ff-run-query-replace-regexp ()helm-ff-run-query-replace-regexp1375,63587
(defun helm-ff-toggle-auto-update (_candidate)helm-ff-toggle-auto-update1381,63788
(defun helm-ff-run-toggle-auto-update ()helm-ff-run-toggle-auto-update1392,64254
(defun helm-ff-delete-char-backward ()helm-ff-delete-char-backward1399,64526
(defun helm-ff-delete-char-backward--exit-fn ()helm-ff-delete-char-backward--exit-fn1410,64909
(defun helm-ff-RET-1 (&optional must-match)helm-ff-RET-11414,65065
(defun helm-ff-RET ()helm-ff-RET1429,65642
(defun helm-ff-RET-must-match ()helm-ff-RET-must-match1441,66002
(defun helm-ff-run-grep ()helm-ff-run-grep1446,66127
(defun helm-ff-run-git-grep ()helm-ff-run-git-grep1453,66339
(defun helm-ff-run-grep-ag ()helm-ff-run-grep-ag1460,66559
(defun helm-ff-run-pdfgrep ()helm-ff-run-pdfgrep1466,66724
(defun helm-ff-run-zgrep ()helm-ff-run-zgrep1473,66940
(defun helm-ff-run-copy-file ()helm-ff-run-copy-file1480,67147
(defun helm-ff-run-rename-file ()helm-ff-run-rename-file1487,67374
(defun helm-ff-run-byte-compile-file ()helm-ff-run-byte-compile-file1494,67609
(defun helm-ff-run-load-file ()helm-ff-run-load-file1501,67868
(defun helm-ff-run-eshell-command-on-file ()helm-ff-run-eshell-command-on-file1508,68101
(defun helm-ff-run-ediff-file ()helm-ff-run-ediff-file1516,68390
(defun helm-ff-run-ediff-merge-file ()helm-ff-run-ediff-merge-file1523,68627
(defun helm-ff-run-symlink-file ()helm-ff-run-symlink-file1531,68893
(defun helm-ff-run-relsymlink-file ()helm-ff-run-relsymlink-file1538,69132
(defun helm-ff-run-hardlink-file ()helm-ff-run-hardlink-file1545,69380
(defun helm-ff-run-delete-file ()helm-ff-run-delete-file1552,69623
(defun helm-ff-run-complete-fn-at-point ()helm-ff-run-complete-fn-at-point1559,69864
(defun helm-ff-run-switch-to-eshell ()helm-ff-run-switch-to-eshell1567,70148
(defun helm-ff-run-switch-other-window ()helm-ff-run-switch-other-window1574,70400
(defun helm-ff-run-switch-other-frame ()helm-ff-run-switch-other-frame1582,70725
(defun helm-ff-run-open-file-externally ()helm-ff-run-open-file-externally1589,70983
(defun helm-ff-run-open-file-with-default-tool ()helm-ff-run-open-file-with-default-tool1596,71256
(defun helm-ff-locate (candidate)helm-ff-locate1603,71550
(defun helm-ff-run-locate ()helm-ff-run-locate1620,72394
(defun helm-files-insert-as-org-link (candidate)helm-files-insert-as-org-link1627,72606
(defun helm-ff-run-insert-org-link ()helm-ff-run-insert-org-link1631,72726
(defun helm-ff-run-find-file-as-root ()helm-ff-run-find-file-as-root1637,72918
(defun helm-ff-run-find-alternate-file ()helm-ff-run-find-alternate-file1643,73107
(defun helm-ff-run-mail-attach-files ()helm-ff-run-mail-attach-files1649,73297
(defun helm-ff-run-etags ()helm-ff-run-etags1656,73561
(defvar lpr-printer-switch)lpr-printer-switch1663,73784
(defun helm-ff-print (_candidate)helm-ff-print1664,73812
(defun helm-ff-run-print-file ()helm-ff-run-print-file1714,75847
(defun helm-ff-checksum (file)helm-ff-checksum1721,76070
(defun helm-ff-toggle-basename (_candidate)helm-ff-toggle-basename1737,76770
(defun helm-ff-run-toggle-basename ()helm-ff-run-toggle-basename1746,77165
(defun helm-reduce-file-name (fname level)helm-reduce-file-name1753,77362
(defvar helm-find-files--level-tree nil)helm-find-files--level-tree1764,77779
(defvar helm-find-files--level-tree-iterator nil)helm-find-files--level-tree-iterator1765,77820
(defun helm-find-files-up-one-level (arg)helm-find-files-up-one-level1766,77870
(defun helm-find-files-down-last-level ()helm-find-files-down-last-level1806,79952
(defun helm-find-files--reset-level-tree ()helm-find-files--reset-level-tree1821,80626
(defun helm-ff-retrieve-last-expanded ()helm-ff-retrieve-last-expanded1829,80978
(defun helm-ff-move-to-first-real-candidate ()helm-ff-move-to-first-real-candidate1844,81642
(defun helm-ff-update-when-only-one-matched ()helm-ff-update-when-only-one-matched1869,82807
(defun helm-ff-auto-expand-to-home-or-root ()helm-ff-auto-expand-to-home-or-root1953,87747
(defun helm-ff--expand-file-name-no-dot (name &optional directory)helm-ff--expand-file-name-no-dot1989,89821
(defun helm-ff--expand-substitued-pattern (pattern)helm-ff--expand-substitued-pattern1998,90265
(defun helm-substitute-in-filename (fname)helm-substitute-in-filename2012,90905
(defun helm-point-file-in-dired (file)helm-point-file-in-dired2041,92295
(defun helm-marked-files-in-dired (_candidate)helm-marked-files-in-dired2049,92621
(defun helm-ff-run-marked-files-in-dired ()helm-ff-run-marked-files-in-dired2065,93415
(defun helm-ff--create-tramp-name (fname)helm-ff--create-tramp-name2072,93672
(defun helm-ff--tramp-cons-or-vector (vector-or-cons)helm-ff--tramp-cons-or-vector2086,94427
(defun helm-ff--get-tramp-methods ()helm-ff--get-tramp-methods2092,94614
(defun helm-ff--previous-mh-tramp-method (str)helm-ff--previous-mh-tramp-method2097,94797
(defun helm-ff--get-host-from-tramp-invalid-fname (fname)helm-ff--get-host-from-tramp-invalid-fname2110,95272
(defun helm-ff-before-action-hook-fn ()helm-ff-before-action-hook-fn2152,97734
(defun helm-ff--tramp-postfixed-p (str)helm-ff--tramp-postfixed-p2168,98509
(defun helm-ff-set-pattern (pattern)helm-ff-set-pattern2183,98979
(defun helm-find-files-get-candidates (&optional require-match)helm-find-files-get-candidates2243,101892
(defun helm-list-directory (directory)helm-list-directory2348,107501
(defun helm-ff-directory-files (directory)helm-ff-directory-files2367,108400
(defun helm-ff-handle-backslash (fname)helm-ff-handle-backslash2395,109722
(defun helm-ff-fuzzy-matching-p ()helm-ff-fuzzy-matching-p2402,109955
(defun helm-ff--transform-pattern-for-completion (pattern)helm-ff--transform-pattern-for-completion2406,110085
(defun helm-dir-is-dot (dir)helm-dir-is-dot2455,112588
(defun helm-ff-save-history ()helm-ff-save-history2458,112673
(defun helm-files-save-file-name-history (&optional force)helm-files-save-file-name-history2469,113203
(defun helm-ff-valid-symlink-p (file)helm-ff-valid-symlink-p2490,114193
(defun helm-get-default-mode-for-file (filename)helm-get-default-mode-for-file2498,114466
(defun helm-ff-properties (candidate)helm-ff-properties2504,114732
(defun helm-ff-properties-persistent ()helm-ff-properties-persistent2547,116943
(defun helm-ff-persistent-delete ()helm-ff-persistent-delete2555,117246
(defun helm-ff-dot-file-p (file)helm-ff-dot-file-p2563,117537
(defun helm-ff-quick-delete (_candidate)helm-ff-quick-delete2567,117650
(defun helm-ff-kill-buffer-fname (candidate)helm-ff-kill-buffer-fname2594,119089
(defun helm-ff-kill-or-find-buffer-fname (candidate)helm-ff-kill-or-find-buffer-fname2603,119503
(defun helm-ff-run-kill-buffer-persistent ()helm-ff-run-kill-buffer-persistent2628,120662
(defun helm-ff-prefix-filename (fname &optional file-or-symlinkp new-file)helm-ff-prefix-filename2636,120981
(defun helm-ff-score-candidate-for-pattern (str pattern)helm-ff-score-candidate-for-pattern2654,121870
(defun helm-ff-sort-candidates-1 (candidates input)helm-ff-sort-candidates-12659,122024
(defun helm-ff-sort-candidates (candidates _source)helm-ff-sort-candidates2689,123666
(defun helm-ff-boring-file-p (file)helm-ff-boring-file-p2694,123884
(defun helm-ff-filter-candidate-one-by-one (file)helm-ff-filter-candidate-one-by-one2700,124110
(defun helm-find-files-action-transformer (actions candidate)helm-find-files-action-transformer2794,128655
(defun helm-ff-goto-linum (candidate)helm-ff-goto-linum2832,130512
(defun helm-ff-mail-attach-files (_candidate)helm-ff-mail-attach-files2845,131105
(defvar image-dired-display-image-buffer)image-dired-display-image-buffer2873,132269
(defun helm-ff-rotate-current-image-1 (file &optional num-arg)helm-ff-rotate-current-image-12874,132311
(defun helm-ff-rotate-image-left (candidate)helm-ff-rotate-image-left2892,133175
(defun helm-ff-rotate-image-right (candidate)helm-ff-rotate-image-right2897,133346
(defun helm-ff-rotate-left-persistent ()helm-ff-rotate-left-persistent2902,133515
(defun helm-ff-rotate-right-persistent ()helm-ff-rotate-right-persistent2910,133805
(defun helm-ff-exif-data (candidate)helm-ff-exif-data2918,134099
(defun helm-find-files-recursive-dirs (directory &optional input)helm-find-files-recursive-dirs3071,142313
(defun helm-ff-recursive-dirs (_candidate)helm-ff-recursive-dirs3108,144073
(defun helm-ff-file-compressed-p (candidate)helm-ff-file-compressed-p3115,144353
(defun helm-ff--fname-at-point ()helm-ff--fname-at-point3120,144533
(defun helm-insert-file-name-completion-at-point (_candidate)helm-insert-file-name-completion-at-point3131,144930
(defun helm-ff--insert-fname (candidate &optional beg end full-path guess)helm-ff--insert-fname3169,146800
(defun helm-find-files-1 (fname &optional preselect)helm-find-files-13220,148987
(defun helm-ff--update-resume-after-hook (sources &optional nohook)helm-ff--update-resume-after-hook3262,150958
(defun helm-ff-clean-initial-input ()helm-ff-clean-initial-input3276,151661
(defun helm-ff-setup-update-hook ()helm-ff-setup-update-hook3282,151893
(defun helm-find-files-cleanup ()helm-find-files-cleanup3289,152214
(defun helm-find-files-toggle-to-bookmark ()helm-find-files-toggle-to-bookmark3297,152507
(defun helm-find-files-initial-input (&optional input)helm-find-files-initial-input3314,153216
(defun helm-ffap-guesser ()helm-ffap-guesser3323,153573
(defun helm-find-files-input (file-at-pt thing-at-pt)helm-find-files-input3360,155511
(defun helm-ff-find-url-at-point ()helm-ff-find-url-at-point3393,157131
(defun helm-find-library-at-point ()helm-find-library-at-point3407,157815
(defun helm-ff--valid-default-directory ()helm-ff--valid-default-directory3435,158962
(defun helm-get-dest-fnames-from-list (flist dest-cand rename-dir-flag)helm-get-dest-fnames-from-list3514,162924
(defun helm-ff-maybe-mark-candidates ()helm-ff-maybe-mark-candidates3532,163741
(defun helm-file-buffers (filename)helm-file-buffers3554,164521
(defun helm-delete-file (file &optional error-if-dot-file-p synchro)helm-delete-file3562,164823
(defun helm-delete-marked-files (_ignore)helm-delete-marked-files3616,167553
(defvar helm-ff-delete-log-filehelm-ff-delete-log-file3642,168657
(define-minor-mode helm-delete-async--modeline-modehelm-delete-async--modeline-mode3646,168832
(defun helm-delete-async-mode-line-message (text face &rest args)helm-delete-async-mode-line-message3659,169437
(defun helm-delete-marked-files-async (_ignore)helm-delete-marked-files-async3672,169916
(defun helm-find-file-or-marked (candidate)helm-find-file-or-marked3735,173246
(defun helm-ff--mkdir (dir &optional helm-ff)helm-ff--mkdir3772,175105
(defun helm-transform-file-load-el (actions candidate)helm-transform-file-load-el3792,175991
(defun helm-transform-file-browse-url (actions candidate)helm-transform-file-browse-url3799,176289
(defun helm-file-on-mounted-network-p (file)helm-file-on-mounted-network-p3809,176734
(defvar file-cache-alist)file-cache-alist3818,177112
(defun helm-ff-cache-add-file (_candidate)helm-ff-cache-add-file3820,177139
(defun helm-ff-file-cache-remove-file-1 (file)helm-ff-file-cache-remove-file-13825,177301
(defun helm-ff-file-cache-remove-file (_file)helm-ff-file-cache-remove-file3836,177695
(defvar helm-source-file-name-historyhelm-source-file-name-history3845,177912
(defvar helm-source--ff-file-name-history nilhelm-source--ff-file-name-history3852,178175
(defun helm-file-name-history-transformer (candidates _source)helm-file-name-history-transformer3856,178360
(defun helm-ff-file-name-history ()helm-ff-file-name-history3866,178850
(defvar helm--browse-project-cache (make-hash-table :test 'equal))helm--browse-project-cache3906,180670
(defvar helm-buffers-in-project-p)helm-buffers-in-project-p3907,180737
(defun helm-browse-project-get-buffers (root-directory)helm-browse-project-get-buffers3909,180773
(defun helm-browse-project-build-buffers-source (directory)helm-browse-project-build-buffers-source3921,181357
(defun helm-browse-project-walk-directory (directory)helm-browse-project-walk-directory3929,181704
(defun helm-browse-project-ag-find-files (directory)helm-browse-project-ag-find-files3935,181915
(defun helm-browse-project-find-files (directory &optional refresh)helm-browse-project-find-files3946,182288
(defvar helm-browse-project-history nil)helm-browse-project-history3976,183923
(defun helm-projects-history ()helm-projects-history3979,183980
(defun helm-browse-project (arg)helm-browse-project3990,184361
(defun helm-browse-project-get--root-dir (directory)helm-browse-project-get--root-dir4033,186348
(defun helm-ff-browse-project (_candidate)helm-ff-browse-project4041,186767
(defun helm-ff-run-browse-project ()helm-ff-run-browse-project4047,186990
(defun helm-ff-gid (_candidate)helm-ff-gid4053,187173
(defun helm-ff-run-gid ()helm-ff-run-gid4057,187282
(defun helm-ff-find-sh-command (_candidate)helm-ff-find-sh-command4064,187475
(defun helm-ff-run-find-sh-command ()helm-ff-run-find-sh-command4069,187630
(defun helm-find-files (arg)helm-find-files4078,187900
(defun helm-delete-tramp-connection ()helm-delete-tramp-connection4127,190852

elpa/helm-20180610.2230/helm-imenu.el,2352
(defgroup helm-imenu nilhelm-imenu28,924
(defcustom helm-imenu-delimiter " / "helm-imenu-delimiter32,1021
(defcustom helm-imenu-execute-action-at-once-if-onehelm-imenu-execute-action-at-once-if-one37,1162
(defcustom helm-imenu-lynx-style-map thelm-imenu-lynx-style-map43,1347
(defcustom helm-imenu-all-buffer-assoc nilhelm-imenu-all-buffer-assoc48,1469
(defcustom helm-imenu-in-all-buffers-separate-sources thelm-imenu-in-all-buffers-separate-sources57,1877
(defcustom helm-imenu-type-faceshelm-imenu-type-faces70,2434
(defcustom helm-imenu-extra-modes nilhelm-imenu-extra-modes84,3092
(defvar helm-imenu-maphelm-imenu-map90,3256
(defun helm-imenu-next-or-previous-section (n)helm-imenu-next-or-previous-section102,3805
(defun helm-imenu-next-section ()helm-imenu-next-section118,4437
(defun helm-imenu-previous-section ()helm-imenu-previous-section122,4531
(defvar helm-cached-imenu-alist nil)helm-cached-imenu-alist128,4646
(defvar helm-cached-imenu-candidates nil)helm-cached-imenu-candidates131,4738
(defvar helm-cached-imenu-tick nil)helm-cached-imenu-tick134,4840
(defvar helm-imenu--in-all-buffers-cache nil)helm-imenu--in-all-buffers-cache137,4930
(defvar helm-source-imenu nil "See (info \"(emacs)Imenu\")")helm-source-imenu139,4978
(defvar helm-source-imenu-all nil)helm-source-imenu-all140,5039
(defclass helm-imenu-source (helm-source-sync)helm-imenu-source142,5075
(defcustom helm-imenu-fuzzy-match nilhelm-imenu-fuzzy-match153,5535
(defun helm-imenu--maybe-switch-to-buffer (candidate)helm-imenu--maybe-switch-to-buffer163,5862
(defun helm-imenu--execute-action-at-once-p ()helm-imenu--execute-action-at-once-p168,6038
(defun helm-imenu-action (candidate)helm-imenu-action180,6392
(defun helm-imenu-persistent-action (candidate)helm-imenu-persistent-action193,6882
(defun helm-imenu-candidates (&optional buffer)helm-imenu-candidates199,7088
(defun helm-imenu-candidates-in-all-buffers (&optional build-sources)helm-imenu-candidates-in-all-buffers211,7634
(defun helm-imenu--candidates-1 (alist)helm-imenu--candidates-1238,8998
(defun helm-imenu--get-prop (item)helm-imenu--get-prop266,10454
(defun helm-imenu-transformer (candidates)helm-imenu-transformer279,10918
(defun helm-imenu ()helm-imenu306,12150
(defun helm-imenu-in-all-buffers ()helm-imenu-in-all-buffers323,12749

elpa/helm-20180610.2230/helm-ring.el,2862
(defgroup helm-ring nilhelm-ring29,1025
(defcustom helm-kill-ring-threshold 3helm-kill-ring-threshold33,1120
(defcustom helm-kill-ring-max-offset 400helm-kill-ring-max-offset38,1272
(defcustom helm-kill-ring-actionshelm-kill-ring-actions49,1768
(defcustom helm-kill-ring-separator "\n"helm-kill-ring-separator56,2024
(defcustom helm-register-max-offset 160helm-register-max-offset61,2170
(defvar helm-kill-ring-maphelm-kill-ring-map69,2330
(defvar helm-source-kill-ringhelm-source-kill-ring80,2787
(defun helm-kill-ring-candidates ()helm-kill-ring-candidates97,3419
(defun helm-kill-ring-transformer (candidates _source)helm-kill-ring-transformer103,3674
(defvar helm-kill-ring--truncated-flag nil)helm-kill-ring--truncated-flag110,3944
(defun helm-kill-ring-toggle-truncated ()helm-kill-ring-toggle-truncated111,3988
(defun helm-kill-ring-kill-selection ()helm-kill-ring-kill-selection126,4615
(defun helm-kill-ring--preselect-fn (candidate)helm-kill-ring--preselect-fn133,4875
(defun helm-kill-ring-action-yank (_str)helm-kill-ring-action-yank145,5379
(defun helm-kill-ring-action-yank-1 (str)helm-kill-ring-action-yank-1159,5967
(define-obsolete-function-alias 'helm-kill-ring-action 'helm-kill-ring-action-yank "2.4.0")helm-kill-ring-action211,8702
(defun helm-kill-ring-action-delete (_candidate)helm-kill-ring-action-delete213,8795
(defun helm-kill-ring-delete ()helm-kill-ring-delete219,9011
(defun helm-mark-ring-line-string-at-pos (pos)helm-mark-ring-line-string-at-pos233,9406
(defun helm-mark-ring-get-candidates ()helm-mark-ring-get-candidates244,9759
(defun helm-mark-ring-default-action (candidate)helm-mark-ring-default-action259,10477
(defvar helm-source-mark-ringhelm-source-mark-ring275,11114
(defvar helm-source-global-mark-ringhelm-source-global-mark-ring283,11376
(defun helm-global-mark-ring-format-buffer (marker)helm-global-mark-ring-format-buffer290,11637
(defun helm-global-mark-ring-get-candidates ()helm-global-mark-ring-get-candidates303,12200
(defvar helm-source-registerhelm-source-register317,12757
(defun helm-register-candidates ()helm-register-candidates333,13406
(defun helm-register-action-transformer (actions register-and-functions)helm-register-action-transformer400,16266
(defun helm-mark-ring ()helm-mark-ring431,17725
(defun helm-global-mark-ring ()helm-global-mark-ring439,17934
(defun helm-all-mark-rings ()helm-all-mark-rings447,18171
(defun helm-register ()helm-register457,18477
(defun helm-show-kill-ring ()helm-show-kill-ring465,18680
(defun helm-execute-kmacro ()helm-execute-kmacro479,19114
(defun helm-kbd-macro-execute (candidate)helm-kbd-macro-execute513,20491
(defun helm-kbd-macro-concat-macros (_candidate)helm-kbd-macro-concat-macros521,20760
(defun helm-kbd-macro-delete-macro (_candidate)helm-kbd-macro-delete-macro536,21395

elpa/helm-20180610.2230/helm-grep.el,8508
(defvar helm--ansi-color-regexp)helm--ansi-color-regexp33,1229
(defgroup helm-grep nilhelm-grep36,1265
(defcustom helm-grep-default-commandhelm-grep-default-command40,1360
(defcustom helm-grep-default-recurse-commandhelm-grep-default-recurse-command103,4007
(defcustom helm-default-zgrep-commandhelm-default-zgrep-command110,4286
(defcustom helm-pdfgrep-default-commandhelm-pdfgrep-default-command120,4651
(defcustom helm-pdfgrep-default-recurse-commandhelm-pdfgrep-default-recurse-command128,4940
(defcustom helm-grep-use-ioccur-style-keys thelm-grep-use-ioccur-style-keys136,5246
(defcustom helm-pdfgrep-default-read-command nilhelm-pdfgrep-default-read-command141,5373
(defcustom helm-grep-max-length-history 100helm-grep-max-length-history152,5719
(defcustom helm-zgrep-file-extension-regexphelm-zgrep-file-extension-regexp157,5861
(defcustom helm-grep-preferred-ext nilhelm-grep-preferred-ext163,6038
(defcustom helm-grep-save-buffer-name-no-confirm nilhelm-grep-save-buffer-name-no-confirm168,6170
(defcustom helm-grep-ignored-fileshelm-grep-ignored-files173,6314
(defcustom helm-grep-ignored-directorieshelm-grep-ignored-directories182,6682
(defcustom helm-grep-truncate-lines thelm-grep-truncate-lines188,6880
(defcustom helm-grep-file-path-style 'basenamehelm-grep-file-path-style193,7020
(defcustom helm-grep-actionshelm-grep-actions204,7490
(defcustom helm-grep-pipe-cmd-switches nilhelm-grep-pipe-cmd-switches214,7854
(defcustom helm-grep-ag-pipe-cmd-switches nilhelm-grep-ag-pipe-cmd-switches229,8418
(defgroup helm-grep-faces nilhelm-grep-faces242,8761
(defface helm-grep-matchhelm-grep-match248,8895
(defface helm-grep-filehelm-grep-file255,9137
(defface helm-grep-linenohelm-grep-lineno261,9301
(defface helm-grep-finishhelm-grep-finish266,9440
(defface helm-grep-cmd-linehelm-grep-cmd-line271,9575
(defvar helm-grep-maphelm-grep-map280,9755
(defvar helm-pdfgrep-maphelm-pdfgrep-map294,10422
(defvar helm-grep-mode-maphelm-grep-mode-map302,10682
(defvar helm-rzgrep-cache (make-hash-table :test 'equal))helm-rzgrep-cache320,11474
(defvar helm-grep-default-function 'helm-grep-init)helm-grep-default-function321,11532
(defvar helm-zgrep-recurse-flag nil)helm-zgrep-recurse-flag322,11584
(defvar helm-grep-history nil)helm-grep-history323,11621
(defvar helm-grep-ag-history nil)helm-grep-ag-history324,11652
(defvar helm-grep-last-targets nil)helm-grep-last-targets325,11686
(defvar helm-grep-include-files nil)helm-grep-include-files326,11722
(defvar helm-grep-in-recurse nil)helm-grep-in-recurse327,11759
(defvar helm-grep-use-zgrep nil)helm-grep-use-zgrep328,11793
(defvar helm-grep-default-directory-fn nilhelm-grep-default-directory-fn329,11826
(defvar helm-pdfgrep-targets nil)helm-pdfgrep-targets332,12011
(defvar helm-grep-last-cmd-line nil)helm-grep-last-cmd-line333,12045
(defvar helm-grep-split-line-regexp "^\\([[:lower:][:upper:]]?:?.*?\\):\\([0-9]+\\):\\(.*\\)")helm-grep-split-line-regexp334,12082
(defun helm-grep-prepare-candidates (candidates in-directory)helm-grep-prepare-candidates340,12195
(defun helm-grep-command (&optional recursive grep)helm-grep-command403,16022
(defun helm-grep--pipe-command-for-grep-command (smartcase pipe-switches &optional grep-cmd)helm-grep--pipe-command-for-grep-command425,17005
(defun helm-grep--prepare-cmd-line (only-files &optional include zgrep)helm-grep--prepare-cmd-line437,17522
(defun helm-grep-init (cmd-line)helm-grep-init496,20583
(defun helm-grep-collect-candidates ()helm-grep-collect-candidates578,24985
(defun helm-grep-action (candidate &optional where)helm-grep-action590,25337
(defun helm-grep-persistent-action (candidate)helm-grep-persistent-action643,28055
(defun helm-grep-other-window (candidate)helm-grep-other-window649,28262
(defun helm-grep-other-frame (candidate)helm-grep-other-frame653,28402
(defun helm-goto-next-or-prec-file (n)helm-goto-next-or-prec-file657,28539
(defun helm-goto-precedent-file ()helm-goto-precedent-file700,30509
(defun helm-goto-next-file ()helm-goto-next-file709,30759
(defun helm-grep-run-default-action ()helm-grep-run-default-action715,30917
(defun helm-grep-run-other-window-action ()helm-grep-run-other-window-action722,31149
(defun helm-grep-run-other-frame-action ()helm-grep-run-other-frame-action729,31407
(defun helm-grep-run-save-buffer ()helm-grep-run-save-buffer736,31661
(defun helm-grep-save-results (candidate)helm-grep-save-results747,31925
(defun helm-grep-save-results-1 ()helm-grep-save-results-1750,32006
(defun helm-grep-mode-mouse-jump (event)helm-grep-mode-mouse-jump799,34451
(define-derived-mode helm-grep-modehelm-grep-mode809,34794
(defun helm-grep-mode--revert-buffer-function (&optional _ignore-auto _noconfirm)helm-grep-mode--revert-buffer-function821,35216
(defun helm-grep-mode--sentinel (process event)helm-grep-mode--sentinel835,35859
(defun helm-gm-next-file ()helm-gm-next-file853,36755
(defun helm-gm-precedent-file ()helm-gm-precedent-file857,36835
(defun helm-grep-mode-jump ()helm-grep-mode-jump861,36921
(defun helm-grep-mode-jump-other-window-1 (arg)helm-grep-mode-jump-other-window-1867,37076
(defun helm-grep-mode-jump-other-window-forward ()helm-grep-mode-jump-other-window-forward878,37440
(defun helm-grep-mode-jump-other-window-backward ()helm-grep-mode-jump-other-window-backward882,37550
(defun helm-grep-mode-jump-other-window ()helm-grep-mode-jump-other-window886,37662
(defun helm-grep-hack-types ()helm-grep-hack-types898,37970
(defun helm-grep-ack-types-transformer (candidates _source)helm-grep-ack-types-transformer918,38923
(defvar helm-grep-ack-types-cache nil)helm-grep-ack-types-cache925,39124
(defun helm-grep-read-ack-type ()helm-grep-read-ack-type926,39163
(defun helm-grep-guess-extensions (files)helm-grep-guess-extensions945,39815
(defun helm-grep-get-file-extensions (files)helm-grep-get-file-extensions965,40772
(defvar helm-grep-before-init-hook nilhelm-grep-before-init-hook987,41783
(defvar helm-grep-after-init-hook nilhelm-grep-after-init-hook990,41885
(defclass helm-grep-class (helm-source-async)helm-grep-class993,41985
(defvar helm-source-grep nil)helm-source-grep1020,43138
(defmethod helm--setup-source ((source helm-grep-class))helm--setup-source1022,43169
(defun helm-ff-zgrep-1 (flist recursive)helm-ff-zgrep-11121,47566
(defun helm-grep-split-line (line)helm-grep-split-line1143,48374
(defun helm-grep--filter-candidate-1 (candidate &optional dir)helm-grep--filter-candidate-11154,48852
(defun helm-grep-filter-one-by-one (candidate)helm-grep-filter-one-by-one1188,50647
(defun helm-grep-highlight-match (str &optional multi-match)helm-grep-highlight-match1202,51277
(defun helm-grep-buffers-1 (candidate &optional zgrep)helm-grep-buffers-11234,52639
(defun helm-grep-buffers (candidate)helm-grep-buffers1269,54243
(defun helm-zgrep-buffers (candidate)helm-zgrep-buffers1273,54344
(defvar helm-pdfgrep-default-function 'helm-pdfgrep-init)helm-pdfgrep-default-function1282,54588
(defun helm-pdfgrep-init (only-files &optional recurse)helm-pdfgrep-init1283,54646
(defun helm-do-pdfgrep-1 (only &optional recurse)helm-do-pdfgrep-11327,56815
(defun helm-pdfgrep-action (candidate)helm-pdfgrep-action1360,58429
(defun helm-pdfgrep-action-1 (_split pageno fname)helm-pdfgrep-action-11363,58506
(defcustom helm-grep-ag-commandhelm-grep-ag-command1376,58930
(defun helm-grep--ag-command ()helm-grep--ag-command1408,60158
(defun helm-grep-ag-get-types ()helm-grep-ag-get-types1412,60280
(defun helm-grep-ag-prepare-cmd-line (pattern directory &optional type)helm-grep-ag-prepare-cmd-line1430,61078
(defun helm-grep-ag-init (directory &optional type)helm-grep-ag-init1451,62192
(defclass helm-grep-ag-class (helm-source-async)helm-grep-ag-class1514,65456
(defvar helm-source-grep-ag nil)helm-source-grep-ag1531,66168
(defmethod helm--setup-source ((source helm-grep-ag-class))helm--setup-source1533,66202
(defun helm-grep-ag-1 (directory &optional type)helm-grep-ag-11540,66474
(defun helm-grep-ag (directory with-types)helm-grep-ag1555,67163
(defvar helm-source-grep-git nil)helm-source-grep-git1572,67744
(defcustom helm-grep-git-grep-commandhelm-grep-git-grep-command1574,67779
(defun helm-grep-git-1 (directory &optional all default input)helm-grep-git-11589,68440
(defun helm-do-grep-ag (arg)helm-do-grep-ag1609,69441
(defun helm-grep-do-git-grep (arg)helm-grep-do-git-grep1617,69724

elpa/helm-20180610.2230/helm-locate.el,2372
(defgroup helm-locate nilhelm-locate30,1031
(defcustom helm-locate-db-file-regexp "m?locate\.db$"helm-locate-db-file-regexp34,1130
(defcustom helm-ff-locate-db-filename "locate.db"helm-ff-locate-db-filename40,1298
(defcustom helm-locate-command nilhelm-locate-command49,1686
(defcustom helm-locate-create-db-commandhelm-locate-create-db-command79,2780
(defcustom helm-locate-case-fold-search helm-case-fold-searchhelm-locate-case-fold-search85,2947
(defcustom helm-locate-fuzzy-match nilhelm-locate-fuzzy-match96,3390
(defcustom helm-locate-fuzzy-sort-fnhelm-locate-fuzzy-sort-fn102,3576
(defcustom helm-locate-project-list nilhelm-locate-project-list108,3745
(defcustom helm-locate-recursive-dirs-command "locate -i -e -A --regex '^%s' '%s.*$'"helm-locate-recursive-dirs-command115,3984
(defvar helm-generic-files-maphelm-generic-files-map130,4512
(defface helm-locate-finishhelm-locate-finish162,6256
(defun helm-ff-find-locatedb (&optional from-ff)helm-ff-find-locatedb168,6401
(defun helm-locate-create-db-default-function (db-name directory)helm-locate-create-db-default-function180,6930
(defvar helm-locate-create-db-functionhelm-locate-create-db-function187,7241
(defun helm-locate-1 (&optional localdb init from-ff default)helm-locate-1193,7460
(defun helm-locate-set-command ()helm-locate-set-command236,9762
(defun helm-locate-initial-setup ()helm-locate-initial-setup246,10111
(defvar helm-file-name-history nil)helm-file-name-history250,10205
(defun helm-locate-with-db (&optional db initial-input default)helm-locate-with-db251,10241
(defun helm-locate-init ()helm-locate-init291,12103
(defun helm-locate-default-fuzzy-sort-fn (candidates)helm-locate-default-fuzzy-sort-fn353,15315
(defclass helm-locate-source (helm-source-async helm-type-file)helm-locate-source358,15525
(defvar helm-source-locatehelm-source-locate368,15976
(defun helm-locate-pattern-transformer (pattern)helm-locate-pattern-transformer380,16520
(defun helm-locate-find-dbs-in-projects (&optional update)helm-locate-find-dbs-in-projects396,17220
(defclass helm-locate-subdirs-source (helm-source-in-buffer)helm-locate-subdirs-source415,18013
(defun helm-locate-init-subdirs ()helm-locate-init-subdirs425,18323
(defun helm-projects-find-files (update)helm-projects-find-files439,18767
(defun helm-locate (arg)helm-locate453,19336

elpa/helm-20180610.2230/helm-adaptive.el,1289
(defgroup helm-adapt nilhelm-adapt27,929
(defcustom helm-adaptive-history-filehelm-adaptive-history-file31,1018
(defcustom helm-adaptive-history-length 50helm-adaptive-history-length40,1343
(defcustom helm-adaptive-sort-by-frequent-recent-usage thelm-adaptive-sort-by-frequent-recent-usage45,1479
(defvar helm-adaptive-done nilhelm-adaptive-done62,2029
(defvar helm-adaptive-history nilhelm-adaptive-history66,2138
(defconst helm-adaptive-freq-coefficient 5)helm-adaptive-freq-coefficient70,2302
(defconst helm-adaptive-recent-coefficient 2)helm-adaptive-recent-coefficient71,2346
(defun helm-adaptive-done-reset ()helm-adaptive-done-reset73,2393
(define-minor-mode helm-adaptive-modehelm-adaptive-mode77,2477
(defun helm-adapt-use-adaptive-p (&optional source-name)helm-adapt-use-adaptive-p100,3568
(defun helm-adaptive-store-selection ()helm-adaptive-store-selection110,4109
(defun helm-adaptive-maybe-load-history ()helm-adaptive-maybe-load-history167,7515
(defun helm-adaptive-save-history (&optional arg)helm-adaptive-save-history174,7839
(defun helm-adaptive-sort (candidates source)helm-adaptive-sort188,8395
(defun helm-reset-adaptive-history ()helm-reset-adaptive-history253,12082
(defun helm-adaptive-compare (x y)helm-adaptive-compare261,12414

elpa/helm-20180610.2230/helm-buffers.el,7909
(defgroup helm-buffers nilhelm-buffers34,1169
(defcustom helm-boring-buffer-regexp-listhelm-boring-buffer-regexp-list38,1270
(defcustom helm-white-buffer-regexp-list nilhelm-white-buffer-regexp-list47,1640
(defcustom helm-buffers-favorite-modes '(lisp-interaction-modehelm-buffers-favorite-modes54,1879
(defcustom helm-buffer-max-length 20helm-buffer-max-length62,2215
(defcustom helm-buffer-details-flag thelm-buffer-details-flag69,2485
(defcustom helm-buffers-fuzzy-matching nilhelm-buffers-fuzzy-matching74,2619
(defcustom helm-buffer-skip-remote-checking nilhelm-buffer-skip-remote-checking81,2856
(defcustom helm-buffers-truncate-lines thelm-buffers-truncate-lines86,3003
(defcustom helm-mini-default-sources '(helm-source-buffers-listhelm-mini-default-sources91,3143
(defcustom helm-buffers-end-truncated-string "..."helm-buffers-end-truncated-string101,3555
(defcustom helm-buffers-column-separator "  "helm-buffers-column-separator106,3707
(defgroup helm-buffers-faces nilhelm-buffers-faces114,3856
(defface helm-buffer-saved-outhelm-buffer-saved-out120,3999
(defface helm-buffer-not-savedhelm-buffer-not-saved125,4170
(defface helm-buffer-modifiedhelm-buffer-modified130,4328
(defface helm-buffer-sizehelm-buffer-size135,4468
(defface helm-buffer-processhelm-buffer-process141,4662
(defface helm-buffer-directoryhelm-buffer-directory146,4801
(defface helm-buffer-filehelm-buffer-file151,4976
(defface helm-buffer-archivehelm-buffer-archive156,5131
(defface helm-non-file-bufferhelm-non-file-buffer161,5279
(defvar helm-buffers-tick-counter nilhelm-buffers-tick-counter166,5428
(defvar helm-buffer-maphelm-buffer-map181,5898
(defvar helm-buffers-ido-virtual-maphelm-buffers-ido-virtual-map210,7609
(defvar helm-buffer-max-len-mode nil)helm-buffer-max-len-mode222,8115
(defvar helm-buffers-in-project-p nil)helm-buffers-in-project-p223,8153
(defvar helm-source-buffers-list nil)helm-source-buffers-list224,8192
(defun helm-buffers-list--init ()helm-buffers-list--init226,8231
(defclass helm-source-buffers (helm-source-sync helm-type-buffer)helm-source-buffers256,10012
(defvar helm-source-buffer-not-foundhelm-source-buffer-not-found274,10706
(defvar ido-temp-list)ido-temp-list293,11584
(defvar ido-ignored-list)ido-ignored-list294,11607
(defvar ido-process-ignore-lists)ido-process-ignore-lists295,11633
(defvar ido-use-virtual-buffers)ido-use-virtual-buffers296,11667
(defvar ido-virtual-buffers)ido-virtual-buffers297,11700
(defvar helm-source-ido-virtual-buffershelm-source-ido-virtual-buffers299,11730
(defvar ido-use-virtual-buffers)ido-use-virtual-buffers323,12848
(defvar ido-ignore-buffers)ido-ignore-buffers324,12881
(defun helm-buffer-list ()helm-buffer-list325,12909
(defun helm-buffer-size (buffer)helm-buffer-size336,13250
(defun helm-buffer--show-details (buf-name prefix help-echohelm-buffer--show-details345,13488
(defun helm-buffer--details (buffer &optional details)helm-buffer--details364,14139
(defun helm-highlight-buffers (buffers _source)helm-highlight-buffers434,17696
(defun helm-buffer--get-preselection (buffer)helm-buffer--get-preselection476,20032
(defun helm-toggle-buffers-details ()helm-toggle-buffers-details495,20863
(defun helm-buffers--pattern-sans-filters (&optional separator)helm-buffers--pattern-sans-filters508,21410
(defun helm-buffers-sort-transformer (candidates source)helm-buffers-sort-transformer514,21699
(defun helm-buffers-mark-similar-buffers-1 ()helm-buffers-mark-similar-buffers-1524,22095
(defun helm-buffers-mark-similar-buffers ()helm-buffers-mark-similar-buffers550,23244
(defun helm-buffer--match-mjm (pattern mjm)helm-buffer--match-mjm565,23714
(defvar helm-buffer--memo-hash (make-hash-table :test 'equal))helm-buffer--memo-hash580,24404
(defun helm-buffer--memo-pattern (pattern)helm-buffer--memo-pattern581,24467
(defun helm-buffer--match-pattern (pattern candidate &optional nofuzzy)helm-buffer--match-pattern586,24656
(defun helm-buffers--match-from-mjm (candidate)helm-buffers--match-from-mjm600,25286
(defun helm-buffers--match-from-pat (candidate)helm-buffers--match-from-pat614,25840
(defun helm-buffers--match-from-inside (candidate)helm-buffers--match-from-inside626,26365
(defun helm-buffers--match-from-directory (candidate)helm-buffers--match-from-directory642,27030
(defun helm-buffers-match-function (candidate)helm-buffers-match-function659,27742
(defun helm-buffer-query-replace-1 (&optional regexp-flag buffers)helm-buffer-query-replace-1667,28034
(defun helm-buffer-query-replace-regexp (_candidate)helm-buffer-query-replace-regexp686,28902
(defun helm-buffer-query-replace (_candidate)helm-buffer-query-replace689,28997
(defun helm-buffer-toggle-diff (candidate)helm-buffer-toggle-diff692,29077
(defun helm-buffer-diff-persistent ()helm-buffer-diff-persistent699,29357
(defun helm-revert-buffer (candidate)helm-revert-buffer707,29636
(defun helm-revert-marked-buffers (_ignore)helm-revert-marked-buffers712,29797
(defun helm-buffer-revert-and-update (_candidate)helm-buffer-revert-and-update715,29897
(defun helm-buffer-revert-persistent ()helm-buffer-revert-persistent724,30266
(defun helm-buffer-save-and-update (_candidate)helm-buffer-save-and-update732,30570
(defun helm-buffer-save-persistent ()helm-buffer-save-persistent743,31026
(defun helm-buffers-rename-buffer (candidate)helm-buffers-rename-buffer751,31318
(defun helm-buffer-run-rename-buffer ()helm-buffer-run-rename-buffer755,31468
(defun helm-buffer-run-kill-persistent ()helm-buffer-run-kill-persistent762,31723
(defun helm-kill-marked-buffers (_ignore)helm-kill-marked-buffers770,32024
(defun helm-buffer-run-kill-buffers ()helm-buffer-run-kill-buffers779,32365
(defun helm-buffer-run-grep ()helm-buffer-run-grep786,32614
(defun helm-buffer-run-zgrep ()helm-buffer-run-zgrep793,32833
(defun helm-buffer-run-query-replace-regexp ()helm-buffer-run-query-replace-regexp800,33055
(defun helm-buffer-run-query-replace ()helm-buffer-run-query-replace807,33337
(defun helm-buffer-switch-other-window ()helm-buffer-switch-other-window814,33591
(defun helm-buffer-switch-other-frame ()helm-buffer-switch-other-frame821,33872
(defun helm-buffer-switch-buffers (_candidate)helm-buffer-switch-buffers828,34139
(defun helm-buffer-switch-buffers-other-window (_candidate)helm-buffer-switch-buffers-other-window836,34460
(defun helm-buffer-run-ediff ()helm-buffer-run-ediff841,34655
(defun helm-buffer-run-ediff-merge ()helm-buffer-run-ediff-merge848,34885
(defun helm-buffers-persistent-kill-1 (buffer-or-name)helm-buffers-persistent-kill-1855,35133
(defun helm-buffers--quote-truncated-buffer (buffer)helm-buffers--quote-truncated-buffer868,35699
(defun helm-buffers-persistent-kill (_buffer)helm-buffers-persistent-kill884,36277
(defun helm-buffers-list-persistent-action (candidate)helm-buffers-list-persistent-action904,37167
(defun helm-ediff-marked-buffers (_candidate &optional merge)helm-ediff-marked-buffers916,37756
(defun helm-ediff-marked-buffers-merge (candidate)helm-ediff-marked-buffers-merge936,38467
(defun helm-multi-occur-as-action (_candidate)helm-multi-occur-as-action941,38649
(defun helm-buffers-run-multi-occur ()helm-buffers-run-multi-occur954,39260
(defun helm-buffers-toggle-show-hidden-buffers ()helm-buffers-toggle-show-hidden-buffers961,39496
(defun helm-buffers-browse-project (buf)helm-buffers-browse-project980,40414
(defun helm-buffers-run-browse-project ()helm-buffers-run-browse-project985,40567
(defun helm-skip-boring-buffers (buffers _source)helm-skip-boring-buffers996,40901
(defun helm-shadow-boring-buffers (buffers _source)helm-shadow-boring-buffers1001,41086
(defun helm-buffers-list ()helm-buffers-list1008,41334
(defun helm-mini ()helm-mini1022,41831
(defun helm-quit-and-helm-mini ()helm-quit-and-helm-mini1034,42268

elpa/helm-20180610.2230/helm-elisp.el,6116
(defgroup helm-elisp nilhelm-elisp36,1186
(defcustom helm-turn-on-show-completion thelm-turn-on-show-completion40,1283
(defcustom helm-show-completion-min-window-height 7helm-show-completion-min-window-height45,1446
(defcustom helm-lisp-quoted-function-listhelm-lisp-quoted-function-list51,1652
(defcustom helm-lisp-unquoted-function-listhelm-lisp-unquoted-function-list60,1991
(defcustom helm-apropos-fuzzy-match nilhelm-apropos-fuzzy-match67,2228
(defcustom helm-lisp-fuzzy-completion nilhelm-lisp-fuzzy-completion72,2367
(defcustom helm-apropos-function-list '(helm-def-source--emacs-commandshelm-apropos-function-list80,2700
(defcustom helm-apropos-defaut-info-lookup-sources '(helm-source-info-elisphelm-apropos-defaut-info-lookup-sources90,3261
(defcustom helm-show-completion-display-functionhelm-show-completion-display-function97,3617
(defgroup helm-elisp-faces nilhelm-elisp-faces111,4049
(defface helm-lisp-show-completionhelm-lisp-show-completion117,4186
(defface helm-lisp-completion-infohelm-lisp-completion-info122,4355
(defcustom helm-elisp-help-functionhelm-elisp-help-function127,4508
(defcustom helm-locate-library-fuzzy-match thelm-locate-library-fuzzy-match136,4853
(defvar helm-show-completion-overlay nil)helm-show-completion-overlay146,5098
(defun helm-show-completion ()helm-show-completion149,5189
(defun helm-show-completion-init-overlay (beg end)helm-show-completion-init-overlay155,5398
(defun helm-show-completion-default-display-function (buffer &rest _args)helm-show-completion-default-display-function160,5605
(defmacro with-helm-show-completion (beg end &rest body)with-helm-show-completion179,6642
(defun helm-lisp-completion--predicate-at-point (beg)helm-lisp-completion--predicate-at-point211,7976
(defun helm-thing-before-point (&optional limits regexp)helm-thing-before-point248,9682
(defun helm-bounds-of-thing-before-point (&optional regexp)helm-bounds-of-thing-before-point266,10353
(defun helm-insert-completion-at-point (beg end str)helm-insert-completion-at-point271,10556
(defvar helm-lisp-completion--cache nil)helm-lisp-completion--cache286,11137
(defvar helm-lgst-len nil)helm-lgst-len287,11178
(defun helm-lisp-completion-at-point ()helm-lisp-completion-at-point289,11220
(defun helm-lisp-completion-persistent-action (candidate &optional name)helm-lisp-completion-persistent-action340,13872
(defun helm-lisp-completion-persistent-help ()helm-lisp-completion-persistent-help346,14168
(defun helm-elisp--show-help-1 (candidate &optional name)helm-elisp--show-help-1352,14467
(defun helm-elisp-show-help (candidate &optional name)helm-elisp-show-help365,15018
(defun helm-elisp-show-doc-modeline (candidate &optional name)helm-elisp-show-doc-modeline374,15422
(defun helm-lisp-completion-transformer (candidates _source)helm-lisp-completion-transformer384,15786
(defun helm-get-first-line-documentation (sym &optional name)helm-get-first-line-documentation399,16432
(defun helm-complete-file-name-at-point (&optional force)helm-complete-file-name-at-point424,17458
(defun helm-lisp-indent ()helm-lisp-indent452,18633
(defun helm-lisp-completion-or-file-name-at-point ()helm-lisp-completion-or-file-name-at-point462,19034
(defvar helm-apropos-history nil)helm-apropos-history478,19579
(defun helm-apropos-init (test default)helm-apropos-init480,19614
(defun helm-apropos-init-faces (default)helm-apropos-init-faces491,20055
(defun helm-apropos-default-sort-fn (candidates _source)helm-apropos-default-sort-fn508,20706
(defun helm-apropos-clean-history-variable (candidate)helm-apropos-clean-history-variable513,20862
(defun helm-apropos-clean-ring (candidate)helm-apropos-clean-ring527,21524
(defun helm-apropos-action-transformer (actions candidate)helm-apropos-action-transformer546,22302
(defun helm-def-source--emacs-variables (&optional default)helm-def-source--emacs-variables570,23425
(defun helm-def-source--emacs-faces (&optional default)helm-def-source--emacs-faces589,24342
(defun helm-def-source--emacs-commands (&optional default)helm-def-source--emacs-commands611,25362
(defun helm-def-source--emacs-functions (&optional default)helm-def-source--emacs-functions627,26116
(defun helm-def-source--eieio-classes (&optional default)helm-def-source--eieio-classes648,27129
(defun helm-def-source--eieio-generic (&optional default)helm-def-source--eieio-generic666,27958
(defun helm-info-lookup-fallback-source (candidate)helm-info-lookup-fallback-source684,28810
(defun helm-info-lookup-symbol-1 (c)helm-info-lookup-symbol-1711,29785
(defun helm-info-lookup-symbol (candidate)helm-info-lookup-symbol719,30108
(defun helm-apropos (default)helm-apropos726,30381
(defvar helm-source-advicehelm-source-advice743,30979
(defun helm-advice-candidates ()helm-advice-candidates753,31367
(defun helm-advice-persistent-action (func-class-advice)helm-advice-persistent-action768,32079
(defun helm-advice-toggle (func-class-advice)helm-advice-toggle773,32257
(defun helm-advice-update-current-display-string ()helm-advice-update-current-display-string785,32697
(defun helm-manage-advice ()helm-manage-advice794,33036
(defun helm-locate-library-scan-list ()helm-locate-library-scan-list803,33235
(defun helm-locate-library ()helm-locate-library812,33547
(defun helm-set-variable (var)helm-set-variable837,34886
(defclass helm-absolute-time-timers-class (helm-source-sync helm-type-timers)helm-absolute-time-timers-class850,35345
(defvar helm-source-absolute-time-timershelm-source-absolute-time-timers859,35667
(defclass helm-idle-time-timers-class (helm-source-sync helm-type-timers)helm-idle-time-timers-class862,35787
(defvar helm-source-idle-time-timershelm-source-idle-time-timers871,36110
(defun helm-elisp--format-timer (timer)helm-elisp--format-timer874,36218
(defun helm-timers ()helm-timers887,36778
(defun helm-btf--usable-p ()helm-btf--usable-p898,37025
(defvar helm-source-complex-command-historyhelm-source-complex-command-history939,38657
(defun helm-complex-command-history ()helm-complex-command-history961,39753

elpa/helm-20180610.2230/helm-easymenu.el,0

elpa/helm-20180610.2230/helm-sys.el,2967
(defgroup helm-sys nilhelm-sys26,895
(defface helm-top-columnshelm-top-columns30,968
(defcustom helm-top-commandhelm-top-command36,1094
(defcustom helm-top-sort-columns-alist '((com . 11)helm-top-sort-columns-alist60,2245
(defcustom helm-top-poll-delay 1.5helm-top-poll-delay71,2811
(defcustom helm-top-poll-delay-post-command 1.0helm-top-poll-delay-post-command77,3031
(defcustom helm-top-poll-preselection 'linumhelm-top-poll-preselection84,3239
(defvar helm-top-sort-fn nil)helm-top-sort-fn96,3670
(defvar helm-top-maphelm-top-map97,3700
(defvar helm-top-after-init-hook nilhelm-top-after-init-hook106,4050
(defvar helm-top--poll-timer nil)helm-top--poll-timer109,4118
(defun helm-top-poll (&optional no-update delay)helm-top-poll111,4153
(defun helm-top--poll-delay ()helm-top--poll-delay138,5278
(defun helm-top-poll-no-update ()helm-top-poll-no-update141,5343
(defun helm-top-initialize-poll-hooks ()helm-top-initialize-poll-hooks145,5481
(define-minor-mode helm-top-poll-modehelm-top-poll-mode158,6033
(defvar helm-source-tophelm-source-top169,6498
(defvar helm-top--line nil)helm-top--line193,7517
(defun helm-top-transformer (candidates _source)helm-top-transformer194,7545
(defun helm-top--skip-top-line ()helm-top--skip-top-line206,8065
(defun helm-top-action-transformer (actions _candidate)helm-top-action-transformer215,8395
(defun helm-top--marked-pids ()helm-top--marked-pids242,9963
(defun helm-top-sh (sig pids)helm-top-sh245,10066
(defun helm-top-sh-persistent-action (pid)helm-top-sh-persistent-action252,10354
(defun helm-top-init ()helm-top-init256,10467
(defun helm-top-display-to-real (line)helm-top-display-to-real265,10796
(defun helm-top-set-mode-line (str)helm-top-set-mode-line271,10917
(defun helm-top-sort-transformer (candidates source)helm-top-sort-transformer276,11184
(defun helm-top-sort-by-com (s1 s2)helm-top-sort-by-com289,11643
(defun helm-top-sort-by-mem (s1 s2)helm-top-sort-by-mem297,11914
(defun helm-top-sort-by-cpu (s1 s2)helm-top-sort-by-cpu305,12217
(defun helm-top-sort-by-user (s1 s2)helm-top-sort-by-user313,12520
(defun helm-top--preselect-fn ()helm-top--preselect-fn321,12797
(defun helm-top-run-sort-by-com ()helm-top-run-sort-by-com330,13095
(defun helm-top-run-sort-by-cpu ()helm-top-run-sort-by-cpu336,13270
(defun helm-top-run-sort-by-mem ()helm-top-run-sort-by-mem344,13553
(defun helm-top-run-sort-by-user ()helm-top-run-sort-by-user350,13728
(defun helm-xrandr-info ()helm-xrandr-info362,13984
(defun helm-xrandr-screen ()helm-xrandr-screen376,14509
(defun helm-xrandr-output ()helm-xrandr-output380,14603
(defvar helm-source-xrandr-change-resolutionhelm-source-xrandr-change-resolution384,14697
(defvar helm-source-emacs-processhelm-source-emacs-process409,15606
(defun helm-top ()helm-top424,16257
(defun helm-list-emacs-process ()helm-list-emacs-process439,16823
(defun helm-xrandr-set ()helm-xrandr-set445,17000

elpa/helm-20180610.2230/helm-elisp-package.el,3378
(defgroup helm-el-package nilhelm-el-package24,894
(defcustom helm-el-package-initial-filter 'allhelm-el-package-initial-filter28,966
(defcustom helm-el-truncate-lines thelm-el-truncate-lines37,1390
(defvar helm-el-package--show-only 'all)helm-el-package--show-only43,1538
(defvar helm-el-package--initialized-p nil)helm-el-package--initialized-p44,1579
(defvar helm-el-package--tabulated-list nil)helm-el-package--tabulated-list45,1623
(defvar helm-el-package--upgrades nil)helm-el-package--upgrades46,1668
(defvar helm-el-package--removable-packages nil)helm-el-package--removable-packages47,1707
(defvar package-menu-async) ; Only available on emacs-25.package-menu-async50,1794
(defun helm-el-package--init ()helm-el-package--init53,1927
(defun helm-el-package-describe (candidate)helm-el-package-describe94,4001
(defun helm-el-package-visit-homepage (candidate)helm-el-package-visit-homepage100,4252
(defun helm-el-run-visit-homepage ()helm-el-run-visit-homepage113,4836
(defun helm-el-package-install-1 (pkg-list)helm-el-package-install-1119,5027
(defun helm-el-package-install (_candidate)helm-el-package-install136,5975
(defun helm-el-run-package-install ()helm-el-run-package-install139,6076
(defun helm-el-package-uninstall-1 (pkg-list &optional force)helm-el-package-uninstall-1145,6262
(defun helm-el-package-uninstall (_candidate)helm-el-package-uninstall191,8667
(defun helm-el-run-package-uninstall ()helm-el-run-package-uninstall194,8796
(defun helm-el-package-menu--find-upgrades ()helm-el-package-menu--find-upgrades200,8988
(defun helm-el-package-upgrade-1 (pkg-list)helm-el-package-upgrade-1219,9884
(defun helm-el-package-upgrade (_candidate)helm-el-package-upgrade240,10726
(defun helm-el-run-package-upgrade ()helm-el-run-package-upgrade248,11024
(defun helm-el-package-upgrade-all ()helm-el-package-upgrade-all254,11210
(defun helm-el-package-upgrade-all-action (_candidate)helm-el-package-upgrade-all-action263,11641
(defun helm-el-run-package-upgrade-all ()helm-el-run-package-upgrade-all266,11730
(defun helm-el-package--transformer (candidates _source)helm-el-package--transformer272,11935
(defun helm-el-package-show-built-in ()helm-el-package-show-built-in305,13737
(defun helm-el-package-show-upgrade ()helm-el-package-show-upgrade312,13933
(defun helm-el-package-show-installed ()helm-el-package-show-installed319,14126
(defun helm-el-package-show-all ()helm-el-package-show-all326,14325
(defun helm-el-package-show-uninstalled ()helm-el-package-show-uninstalled333,14506
(defvar helm-el-package-maphelm-el-package-map340,14711
(defvar helm-source-list-el-package nil)helm-source-list-el-package356,15542
(defclass helm-list-el-package-source (helm-source-in-buffer)helm-list-el-package-source357,15583
(defun helm-el-package--action-transformer (actions candidate)helm-el-package--action-transformer370,16256
(defun helm-el-package--update ()helm-el-package--update402,18107
(defun helm-el-package-recompile (_pkg)helm-el-package-recompile405,18187
(defun helm-el-package-reinstall (_pkg)helm-el-package-reinstall415,18713
(defun helm-el-run-package-reinstall ()helm-el-run-package-reinstall436,19811
(defun helm-list-elisp-packages (arg)helm-list-elisp-packages443,20018
(defun helm-list-elisp-packages-no-fetch (arg)helm-list-elisp-packages-no-fetch456,20519

elpa/helm-20180610.2230/helm-utils.el,4865
(defvar winner-boring-buffers)winner-boring-buffers27,1027
(defvar helm-show-completion-overlay)helm-show-completion-overlay28,1058
(defgroup helm-utils nilhelm-utils31,1099
(defcustom helm-su-or-sudo "sudo"helm-su-or-sudo35,1174
(defcustom helm-default-kbsize 1024.0helm-default-kbsize40,1288
(defcustom helm-highlight-matches-around-point-max-lines 15helm-highlight-matches-around-point-max-lines51,1621
(defcustom helm-buffers-to-resize-on-pa nilhelm-buffers-to-resize-on-pa56,1791
(defcustom helm-resize-on-pa-text-height 12helm-resize-on-pa-text-height61,1982
(defcustom helm-sources-using-help-echo-popup '("Moccur" "Imenu in all buffers"helm-sources-using-help-echo-popup66,2134
(defcustom helm-html-decode-entities-function #'helm-html-decode-entities-stringhelm-html-decode-entities-function72,2424
(defvar helm-goto-line-before-hook '(helm-save-current-pos-to-mark-ring)helm-goto-line-before-hook83,2881
(defvar helm-save-pos-before-jump-register ?_helm-save-pos-before-jump-register94,3470
(defconst helm-html-entities-alisthelm-html-entities-alist97,3596
(defvar helm-find-many-files-after-hook nilhelm-find-many-files-after-hook202,6702
(defface helm-selection-linehelm-selection-line207,6815
(defface helm-match-itemhelm-match-item212,6997
(defcustom helm-window-prefer-horizontal-split nilhelm-window-prefer-horizontal-split221,7163
(defcustom helm-window-show-buffers-function #'helm-window-default-split-fnhelm-window-show-buffers-function240,7871
(defun helm-window-show-buffers (buffers &optional other-window)helm-window-show-buffers252,8419
(defun helm-window-default-split-fn (candidates &optional other-window-fn)helm-window-default-split-fn269,9138
(defun helm-window-alternate-split-fn (candidates &optional other-window-fn)helm-window-alternate-split-fn287,9912
(defun helm-window-mosaic-fn (candidates &optional other-window-fn)helm-window-mosaic-fn308,10859
(defun helm-window-other-window (buffer-or-name &optional balance)helm-window-other-window378,14686
(defun helm-goto-char (loc)helm-goto-char406,15949
(defun helm-goto-line (lineno &optional noanim)helm-goto-line420,16490
(defun helm-save-pos-to-register-before-jump ()helm-save-pos-to-register-before-jump432,16928
(defun helm-save-current-pos-to-mark-ring ()helm-save-current-pos-to-mark-ring439,17233
(defun helm-show-all-in-this-source-only (arg)helm-show-all-in-this-source-only447,17521
(defun helm-display-all-sources ()helm-display-all-sources459,18064
(defun helm-displaying-source-names ()helm-displaying-source-names466,18288
(defun helm-handle-winner-boring-buffers ()helm-handle-winner-boring-buffers476,18692
(defun helm-quit-and-find-file ()helm-quit-and-find-file484,19076
(defun helm-generic-sort-fn (s1 s2)helm-generic-sort-fn560,22520
(defun helm-split-mode-file-attributes (str &optional string)helm-split-mode-file-attributes697,29483
(defun helm-format-columns-of-files (files)helm-format-columns-of-files715,30191
(defmacro with-helm-display-marked-candidates (buffer-or-name candidates &rest body)with-helm-display-marked-candidates722,30429
(defvar helm-match-line-overlay nil)helm-match-line-overlay748,31454
(defvar helm--match-item-overlays nil)helm--match-item-overlays749,31491
(defun helm-highlight-current-line (&optional start end buf face)helm-highlight-current-line751,31531
(defun helm--translate-pcre-to-elisp (regexp)helm--translate-pcre-to-elisp807,34296
(defun helm-match-line-cleanup ()helm-match-line-cleanup827,35098
(defun helm-match-line-cleanup-maybe ()helm-match-line-cleanup-maybe834,35339
(defun helm-match-line-update ()helm-match-line-update838,35442
(defun helm-persistent-autoresize-hook ()helm-persistent-autoresize-hook843,35589
(defun helm-match-line-cleanup-pulse ()helm-match-line-cleanup-pulse849,35865
(defvar helm--show-help-echo-timer nil)helm--show-help-echo-timer860,36360
(defun helm-cancel-help-echo-timer ()helm-cancel-help-echo-timer862,36401
(defun helm-maybe-show-help-echo ()helm-maybe-show-help-echo867,36565
(define-minor-mode helm-popup-tip-modehelm-popup-tip-mode889,37502
(defun helm-open-file-with-default-tool (file)helm-open-file-with-default-tool900,37968
(defun helm-open-dired (file)helm-open-dired914,38570
(defun helm-require-or-error (feature function)helm-require-or-error922,38810
(defun helm-find-file-as-root (candidate)helm-find-file-as-root926,38945
(defun helm-find-many-files (_ignore)helm-find-many-files943,39600
(defun helm-read-repeat-string (prompt &optional count)helm-read-repeat-string950,39895
(defun helm-html-bookmarks-to-alist (file url-regexp bmk-regexp)helm-html-bookmarks-to-alist961,40321
(defun helm-html-entity-to-string (entity)helm-html-entity-to-string979,41085
(defun helm-html-decode-entities-string (str)helm-html-decode-entities-string988,41423

elpa/helm-20180610.2230/helm-tags.el,1940
(defgroup helm-tags nilhelm-tags27,898
(defcustom helm-etags-tag-file-name "TAGS"helm-etags-tag-file-name31,993
(defcustom helm-etags-tag-file-search-limit 10helm-etags-tag-file-search-limit36,1100
(defcustom helm-etags-match-part-only 'taghelm-etags-match-part-only42,1291
(defcustom helm-etags-execute-action-at-once-if-one thelm-etags-execute-action-at-once-if-one53,1723
(defgroup helm-tags-faces nilhelm-tags-faces60,1894
(defface helm-etags-filehelm-etags-file66,2034
(defun helm-etags-run-switch-other-window ()helm-etags-run-switch-other-window76,2215
(defun helm-etags-run-switch-other-frame ()helm-etags-run-switch-other-frame85,2537
(defvar helm-etags-maphelm-etags-map94,2855
(defvar helm-etags-mtime-alist nilhelm-etags-mtime-alist104,3258
(defvar helm-etags-cache (make-hash-table :test 'equal)helm-etags-cache106,3352
(defun helm-etags-get-tag-file (&optional directory)helm-etags-get-tag-file109,3472
(defun helm-etags-all-tag-files ()helm-etags-all-tag-files120,3955
(defun helm-etags-find-tag-file-directory (current-dir)helm-etags-find-tag-file-directory132,4451
(defun helm-etags-get-header-name (_x)helm-etags-get-header-name153,5423
(defun helm-etags-create-buffer (file)helm-etags-create-buffer159,5614
(defun helm-etags-init ()helm-etags-init187,6996
(defvar helm-source-etags-select nilhelm-source-etags-select210,8045
(defun helm-etags-build-source ()helm-etags-build-source213,8111
(defcustom helm-etags-fuzzy-match nilhelm-etags-fuzzy-match243,9544
(defvar find-tag-marker-ring)find-tag-marker-ring252,9800
(defsubst helm-etags--file-from-tag (fname)helm-etags--file-from-tag254,9831
(defun helm-etags-action-goto (switcher candidate)helm-etags-action-goto261,10061
(defun helm-etags-mtime (file)helm-etags-mtime283,11044
(defun helm-etags-file-modified-p (file)helm-etags-file-modified-p287,11163
(defun helm-etags-select (reinit)helm-etags-select296,11479

elpa/helm-20180610.2230/helm-eval.el,1104
(defgroup helm-eval nilhelm-eval26,901
(defcustom helm-eldoc-in-minibuffer-show-fnhelm-eldoc-in-minibuffer-show-fn30,996
(defcustom helm-show-info-in-mode-line-delay 12helm-show-info-in-mode-line-delay37,1192
(defvar helm-eldoc-active-minibuffers-list nil)helm-eldoc-active-minibuffers-list68,2382
(defvar helm-eval-expression-maphelm-eval-expression-map70,2431
(defun helm-build-evaluation-result-source ()helm-build-evaluation-result-source84,3071
(defun helm-eval-new-line-and-indent ()helm-eval-new-line-and-indent109,4543
(defun helm-eldoc-store-minibuffer ()helm-eldoc-store-minibuffer113,4632
(defun helm-eldoc-show-in-eval ()helm-eldoc-show-in-eval118,4854
(defun helm-show-info-in-mode-line (str)helm-show-info-in-mode-line135,5743
(defvar helm-source-calculation-resulthelm-source-calculation-result147,6081
(defun helm-eval-expression (arg)helm-eval-expression164,7027
(defvar eldoc-idle-delay)eldoc-idle-delay173,7359
(defun helm-eval-expression-with-eldoc ()helm-eval-expression-with-eldoc175,7400
(defun helm-calcul-expression ()helm-calcul-expression190,7974

elpa/helm-20180610.2230/helm-man.el,747
(defvar woman-topic-all-completions)woman-topic-all-completions24,853
(defvar woman-manpath)woman-manpath25,890
(defvar woman-path)woman-path26,913
(defvar woman-expanded-directory-path)woman-expanded-directory-path27,933
(defgroup helm-man nilhelm-man35,1390
(defcustom helm-man-or-woman-function 'Man-getpage-in-backgroundhelm-man-or-woman-function39,1471
(defcustom helm-man-format-switches (cl-case system-typehelm-man-format-switches46,1756
(defvar helm-man--pages nilhelm-man--pages55,2081
(defun helm-man-default-action (candidate)helm-man-default-action60,2208
(defun helm-man--init ()helm-man--init81,3220
(defvar helm-source-man-pageshelm-source-man-pages92,3660
(defun helm-man-woman (arg)helm-man-woman103,4016

elpa/helm-20180610.2230/helm-org.el,2668
(defgroup helm-org nilhelm-org30,1046
(defcustom helm-org-headings-fontify nilhelm-org-headings-fontify34,1122
(defcustom helm-org-format-outline-path nilhelm-org-format-outline-path41,1349
(defcustom helm-org-show-filename nilhelm-org-show-filename46,1463
(defcustom helm-org-headings-min-depth 1helm-org-headings-min-depth52,1672
(defcustom helm-org-headings-max-depth 8helm-org-headings-max-depth57,1800
(defcustom helm-org-headings-actionshelm-org-headings-actions62,1930
(defcustom helm-org-truncate-lines thelm-org-truncate-lines72,2449
(defcustom helm-org-ignore-autosaves nilhelm-org-ignore-autosaves77,2567
(defvar org-capture-templates)org-capture-templates86,2754
(defun helm-source-org-capture-templates ()helm-source-org-capture-templates87,2785
(defun helm-org-goto-marker (marker)helm-org-goto-marker97,3174
(defun helm-org--open-heading-in-indirect-buffer (marker)helm-org--open-heading-in-indirect-buffer104,3374
(defun helm-org-run-open-heading-in-indirect-buffer ()helm-org-run-open-heading-in-indirect-buffer113,3771
(defvar helm-org-headings-maphelm-org-headings-map120,4063
(defclass helm-org-headings-class (helm-source-sync)helm-org-headings-class129,4460
(defmethod helm--setup-source :after ((source helm-org-headings-class))helm--setup-source146,4999
(defun helm-source-org-headings-for-files (filenames &optional parents)helm-source-org-headings-for-files153,5331
(defun helm-org-startup-visibility (candidates _source)helm-org-startup-visibility159,5578
(defun helm-org-get-candidates (filenames &optional parents)helm-org-get-candidates204,7968
(defun helm-org--get-candidates-in-file (filename &optional fontify nofname parents)helm-org--get-candidates-in-file214,8335
(defun helm-org-insert-link-to-heading-at-marker (marker)helm-org-insert-link-to-heading-at-marker273,11543
(defun helm-org-run-insert-link-to-heading-at-marker ()helm-org-run-insert-link-to-heading-at-marker282,11969
(defun helm-org--refile-heading-to (marker)helm-org--refile-heading-to288,12148
(defun helm-org-in-buffer-preselect ()helm-org-in-buffer-preselect308,13060
(defun helm-org-run-refile-heading-to ()helm-org-run-refile-heading-to315,13335
(defun helm-org-agenda-files-headings ()helm-org-agenda-files-headings322,13547
(defun helm-org-in-buffer-headings ()helm-org-in-buffer-headings341,14432
(defun helm-org-parent-headings ()helm-org-parent-headings353,14867
(defun helm-org-capture-templates ()helm-org-capture-templates367,15404
(defvar crm-separator)crm-separator380,15850
(defun helm-org-completing-read-tags (prompt collection pred req initialhelm-org-completing-read-tags383,15889

elpa/helm-20180610.2230/helm-bookmark.el,6673
(defgroup helm-bookmark nilhelm-bookmark33,1170
(defcustom helm-bookmark-show-location nilhelm-bookmark-show-location37,1260
(defcustom helm-bookmark-default-filtered-sourceshelm-bookmark-default-filtered-sources42,1388
(defface helm-bookmark-infohelm-bookmark-info58,1974
(defface helm-bookmark-w3mhelm-bookmark-w3m63,2120
(defface helm-bookmark-gnushelm-bookmark-gnus68,2266
(defface helm-bookmark-manhelm-bookmark-man73,2389
(defface helm-bookmark-filehelm-bookmark-file78,2516
(defface helm-bookmark-file-not-foundhelm-bookmark-file-not-found83,2644
(defface helm-bookmark-directoryhelm-bookmark-directory88,2780
(defface helm-bookmark-addressbookhelm-bookmark-addressbook93,2913
(defvar helm-bookmark-maphelm-bookmark-map99,3051
(defclass helm-source-basic-bookmarks (helm-source-in-buffer helm-type-bookmark)helm-source-basic-bookmarks109,3466
(defvar helm-source-bookmarkshelm-source-bookmarks117,3848
(defun helm-bookmark-transformer (candidates _source)helm-bookmark-transformer121,3979
(defun helm-bookmark-toggle-filename-1 (_candidate)helm-bookmark-toggle-filename-1135,4586
(defun helm-bookmark-toggle-filename ()helm-bookmark-toggle-filename149,5283
(defun helm-bookmark-jump (candidate)helm-bookmark-jump158,5611
(defun helm-bookmark-jump-other-window (candidate)helm-bookmark-jump-other-window164,5794
(defvar helm-source-bookmark-sethelm-source-bookmark-set171,5936
(defconst helm-bookmark--non-file-filename "   - no file -"helm-bookmark--non-file-filename187,6549
(defun helm-bookmark-gnus-bookmark-p (bookmark)helm-bookmark-gnus-bookmark-p190,6673
(defun helm-bookmark-w3m-bookmark-p (bookmark)helm-bookmark-w3m-bookmark-p197,7021
(defun helm-bookmark-woman-bookmark-p (bookmark)helm-bookmark-woman-bookmark-p204,7365
(defun helm-bookmark-man-bookmark-p (bookmark)helm-bookmark-man-bookmark-p211,7710
(defun helm-bookmark-woman-man-bookmark-p (bookmark)helm-bookmark-woman-man-bookmark-p218,8045
(defun helm-bookmark-info-bookmark-p (bookmark)helm-bookmark-info-bookmark-p224,8304
(defun helm-bookmark-image-bookmark-p (bookmark)helm-bookmark-image-bookmark-p229,8515
(defun helm-bookmark-file-p (bookmark)helm-bookmark-file-p235,8736
(defun helm-bookmark-org-file-p (bookmark)helm-bookmark-org-file-p243,9163
(defun helm-bookmark-helm-find-files-p (bookmark)helm-bookmark-helm-find-files-p248,9360
(defun helm-bookmark-addressbook-p (bookmark)helm-bookmark-addressbook-p253,9594
(defun helm-bookmark-uncategorized-bookmark-p (bookmark)helm-bookmark-uncategorized-bookmark-p261,9954
(defun helm-bookmark-filter-setup-alist (fn)helm-bookmark-filter-setup-alist275,10652
(defvar w3m-async-exec)w3m-async-exec284,10956
(defun helm-bookmark-jump-w3m (bookmark)helm-bookmark-jump-w3m285,10980
(defalias 'bookmark-w3m-bookmark-jump 'helm-bookmark-jump-w3m)bookmark-w3m-bookmark-jump311,12341
(defalias 'bmkext-jump-woman 'woman-bookmark-jump)bmkext-jump-woman315,12519
(defalias 'bmkext-jump-man 'Man-bookmark-jump)bmkext-jump-man316,12570
(defalias 'bmkext-jump-w3m 'helm-bookmark-jump-w3m)bmkext-jump-w3m317,12617
(defalias 'bmkext-jump-gnus 'gnus-summary-bookmark-jump)bmkext-jump-gnus318,12669
(defalias 'bookmarkp-jump-gnus 'gnus-summary-bookmark-jump)bookmarkp-jump-gnus319,12726
(defalias 'bookmarkp-jump-w3m 'helm-bookmark-jump-w3m)bookmarkp-jump-w3m320,12786
(defalias 'bookmarkp-jump-woman 'woman-bookmark-jump)bookmarkp-jump-woman321,12841
(defalias 'bookmarkp-jump-man 'Man-bookmark-jump)bookmarkp-jump-man322,12895
(defclass helm-source-filtered-bookmarks (helm-source-in-buffer helm-type-bookmark)helm-source-filtered-bookmarks328,12985
(defun helm-bookmark-w3m-setup-alist ()helm-bookmark-w3m-setup-alist335,13206
(defvar helm-source-bookmark-w3mhelm-source-bookmark-w3m339,13366
(defun helm-bookmark-images-setup-alist ()helm-bookmark-images-setup-alist348,13653
(defvar helm-source-bookmark-imageshelm-source-bookmark-images352,13821
(defun helm-bookmark-man-setup-alist ()helm-bookmark-man-setup-alist361,14120
(defvar helm-source-bookmark-manhelm-source-bookmark-man365,14286
(defun helm-bookmark-org-setup-alist ()helm-bookmark-org-setup-alist374,14582
(defvar helm-source-bookmark-orghelm-source-bookmark-org378,14743
(defun helm-bookmark-gnus-setup-alist ()helm-bookmark-gnus-setup-alist387,15037
(defvar helm-source-bookmark-gnushelm-source-bookmark-gnus391,15200
(defun helm-bookmark-info-setup-alist ()helm-bookmark-info-setup-alist400,15488
(defvar helm-source-bookmark-infohelm-source-bookmark-info404,15651
(defun helm-bookmark-local-files-setup-alist ()helm-bookmark-local-files-setup-alist413,15956
(defvar helm-source-bookmark-files&dirshelm-source-bookmark-files&dirs417,16125
(defun helm-bookmark-helm-find-files-setup-alist ()helm-bookmark-helm-find-files-setup-alist426,16460
(defun helm-bookmark-browse-project (candidate)helm-bookmark-browse-project430,16649
(defun helm-bookmark-run-browse-project ()helm-bookmark-run-browse-project436,16846
(defvar helm-bookmark-find-files-maphelm-bookmark-find-files-map443,17101
(defclass helm-bookmark-override-inheritor (helm-source) ())helm-bookmark-override-inheritor450,17347
(defmethod helm--setup-source ((source helm-bookmark-override-inheritor))helm--setup-source452,17409
(defclass helm-bookmark-find-files-class (helm-source-filtered-bookmarkshelm-bookmark-find-files-class462,17881
(defvar helm-source-bookmark-helm-find-fileshelm-source-bookmark-helm-find-files466,18037
(defun helm-bookmark-uncategorized-setup-alist ()helm-bookmark-uncategorized-setup-alist477,18486
(defvar helm-source-bookmark-uncategorizedhelm-source-bookmark-uncategorized481,18676
(defun helm-highlight-bookmark (bookmarks _source)helm-highlight-bookmark491,19000
(defun helm-bookmark-edit-bookmark (bookmark-name)helm-bookmark-edit-bookmark588,24478
(defun helm-bookmark-edit-bookmark-1 (bookmark-name handler)helm-bookmark-edit-bookmark-1598,24974
(defun helm-bookmark-maybe-save-bookmark ()helm-bookmark-maybe-save-bookmark624,26345
(defun helm-bookmark-rename (old &optional new batch)helm-bookmark-rename629,26584
(defun helm-bookmark-run-edit ()helm-bookmark-run-edit656,27852
(defun helm-bookmark-run-jump-other-window ()helm-bookmark-run-jump-other-window664,28087
(defun helm-bookmark-run-delete ()helm-bookmark-run-delete671,28333
(defun helm-bookmark-get-bookmark-from-name (bmk)helm-bookmark-get-bookmark-from-name679,28599
(defun helm-delete-marked-bookmarks (_ignore)helm-delete-marked-bookmarks685,28858
(defun helm-bookmarks ()helm-bookmarks693,29106
(defun helm-filtered-bookmarks ()helm-filtered-bookmarks702,29377

elpa/helm-20180610.2230/helm-for-files.el,1704
(defcustom helm-multi-files-toggle-locate-binding "C-c p"helm-multi-files-toggle-locate-binding24,887
(defcustom helm-for-files-preferred-listhelm-for-files-preferred-list29,1059
(defvar file-cache-alist)file-cache-alist46,1532
(defclass helm-file-cache (helm-source-in-buffer helm-type-file)helm-file-cache48,1559
(defun helm-file-cache-get-candidates ()helm-file-cache-get-candidates51,1680
(defvar helm-source-file-cache nil)helm-source-file-cache57,1916
(defcustom helm-file-cache-fuzzy-match nilhelm-file-cache-fuzzy-match59,1953
(defun helm-transform-file-cache (actions _candidate)helm-transform-file-cache81,2747
(defvar helm-recentf--basename-flag nil)helm-recentf--basename-flag92,3085
(defun helm-recentf-pattern-transformer (pattern)helm-recentf-pattern-transformer94,3127
(defcustom helm-turn-on-recentf thelm-turn-on-recentf106,3641
(defclass helm-recentf-source (helm-source-sync helm-type-file)helm-recentf-source111,3770
(defmethod helm--setup-source :after ((source helm-recentf-source))helm--setup-source124,4440
(defvar helm-source-recentf nilhelm-source-recentf132,4851
(defcustom helm-recentf-fuzzy-match nilhelm-recentf-fuzzy-match136,5003
(defun helm-highlight-files (files _source)helm-highlight-files151,5480
(defclass helm-files-in-current-dir-source (helm-source-sync helm-type-file)helm-files-in-current-dir-source194,7686
(defvar helm-source-files-in-current-dirhelm-source-files-in-current-dir208,8430
(defun helm-for-files ()helm-for-files213,8580
(defun helm-multi-files-toggle-to-locate ()helm-multi-files-toggle-to-locate226,9067
(defun helm-multi-files ()helm-multi-files244,9821
(defun helm-recentf ()helm-recentf286,11717

elpa/helm-20180610.2230/helm-semantic.el,983
(defgroup helm-semantic nilhelm-semantic34,1149
(defcustom helm-semantic-lynx-style-map thelm-semantic-lynx-style-map38,1257
(defcustom helm-semantic-display-stylehelm-semantic-display-style43,1385
(defvar helm-semantic-maphelm-semantic-map64,2247
(defvar helm-semantic--tags-cache nil)helm-semantic--tags-cache73,2564
(defun helm-semantic--fetch-candidates (tags depth &optional class)helm-semantic--fetch-candidates75,2604
(defun helm-semantic-default-action (_candidate &optional persistent)helm-semantic-default-action114,4153
(defun helm-semantic--maybe-set-needs-update ()helm-semantic--maybe-set-needs-update127,4715
(defvar helm-source-semantic nil)helm-source-semantic132,4887
(defclass helm-semantic-source (helm-source-in-buffer)helm-semantic-source134,4922
(defcustom helm-semantic-fuzzy-match nilhelm-semantic-fuzzy-match150,5816
(defun helm-semantic (arg)helm-semantic161,6183
(defun helm-semantic-or-imenu (arg)helm-semantic-or-imenu184,7165

elpa/helm-20180610.2230/helm-external.el,953
(defgroup helm-external nilhelm-external26,921
(defcustom helm-raise-command nilhelm-raise-command30,1025
(defcustom helm-external-programs-associations nilhelm-external-programs-associations37,1270
(defcustom helm-default-external-file-browser "nautilus"helm-default-external-file-browser44,1578
(defvar helm-external-command-history nil)helm-external-command-history56,1971
(defvar helm-external-commands-list nilhelm-external-commands-list57,2014
(defun helm-external-commands-list-1 (&optional sort)helm-external-commands-list-162,2192
(defun helm-run-or-raise (exe &optional file)helm-run-or-raise83,3278
(defun helm-get-mailcap-for-file (filename)helm-get-mailcap-for-file118,4919
(defun helm-get-default-program-for-file (filename)helm-get-default-program-for-file128,5391
(defun helm-open-file-externally (file)helm-open-file-externally139,5974
(defun helm-run-external-command (program)helm-run-external-command185,8311

elpa/helm-20180610.2230/helm-color.el,1025
(defun helm-custom-faces-init ()helm-custom-faces-init27,901
(defvar helm-source-customize-facehelm-source-customize-face41,1343
(defun helm-colors-init ()helm-colors-init61,2056
(defun helm-color-insert-name (candidate)helm-color-insert-name72,2353
(defun helm-color-kill-name (candidate)helm-color-kill-name76,2472
(defun helm-color-insert-rgb (candidate)helm-color-insert-rgb79,2560
(defun helm-color-kill-rgb (candidate)helm-color-kill-rgb83,2677
(defun helm-color-run-insert-name ()helm-color-run-insert-name86,2763
(defun helm-color-run-kill-name ()helm-color-run-kill-name92,2993
(defun helm-color-run-insert-rgb ()helm-color-run-insert-rgb98,3215
(defun helm-color-run-kill-rgb ()helm-color-run-kill-rgb104,3441
(defvar helm-color-maphelm-color-map110,3659
(defvar helm-source-colorshelm-source-colors119,4012
(defun helm-colors-get-name (candidate)helm-colors-get-name133,4527
(defun helm-colors-get-rgb (candidate)helm-colors-get-rgb144,4822
(defun helm-colors ()helm-colors156,5131

elpa/helm-20180610.2230/helm-dabbrev.el,1901
(defgroup helm-dabbrev nilhelm-dabbrev25,920
(defcustom helm-dabbrev-always-search-all thelm-dabbrev-always-search-all29,1021
(defcustom helm-dabbrev-max-length-result 20helm-dabbrev-max-length-result37,1286
(defcustom helm-dabbrev-candidates-number-limit 600helm-dabbrev-candidates-number-limit45,1587
(defcustom helm-dabbrev-ignored-buffers-regexpshelm-dabbrev-ignored-buffers-regexps51,1810
(defcustom helm-dabbrev-related-buffer-fn #'helm-dabbrev--same-major-mode-phelm-dabbrev-related-buffer-fn57,2051
(defcustom helm-dabbrev-major-mode-assoc nil helm-dabbrev-major-mode-assoc68,2535
(defcustom helm-dabbrev-lineno-around 30helm-dabbrev-lineno-around83,3242
(defcustom helm-dabbrev-cycle-threshold 5helm-dabbrev-cycle-threshold88,3389
(defcustom helm-dabbrev-case-fold-search 'smarthelm-dabbrev-case-fold-search94,3622
(defvar helm-dabbrev-separator-regexp "\\s-\\|\t\\|[(\[\{\"'`=<$;,@.#+]\\|\\s\\\\|^\n\\|^"helm-dabbrev-separator-regexp105,4100
(defvaralias 'helm-dabbrev--regexp 'helm-dabbrev-separator-regexp)helm-dabbrev--regexp107,4246
(defvar helm-dabbrev-maphelm-dabbrev-map111,4402
(defvar helm-dabbrev--exclude-current-buffer-flag nil)helm-dabbrev--exclude-current-buffer-flag119,4625
(defvar helm-dabbrev--cache nil)helm-dabbrev--cache120,4680
(defvar helm-dabbrev--data nil)helm-dabbrev--data121,4713
(defun helm-dabbrev--buffer-list ()helm-dabbrev--buffer-list125,4805
(defun helm-dabbrev--same-major-mode-p (start-buffer)helm-dabbrev--same-major-mode-p133,5138
(defun helm-dabbrev--collect (str limit ignore-case all)helm-dabbrev--collect137,5321
(defun helm-dabbrev--search (pattern beg sep-regexp)helm-dabbrev--search201,8809
(defun helm-dabbrev--get-candidates (abbrev)helm-dabbrev--get-candidates224,9701
(defun helm-dabbrev-default-action (candidate)helm-dabbrev-default-action242,10644
(defun helm-dabbrev ()helm-dabbrev254,11004

elpa/helm-20180610.2230/emacs-helm.sh,0

elpa/helm-20180610.2230/helm-mode.el,2993
(defvar crm-separator)crm-separator25,893
(defgroup helm-mode nilhelm-mode28,919
(defcustom helm-completing-read-handlers-alisthelm-completing-read-handlers-alist32,988
(defcustom helm-comp-read-case-fold-search helm-case-fold-searchhelm-comp-read-case-fold-search136,5234
(defcustom helm-mode-handle-completion-in-region thelm-mode-handle-completion-in-region142,5455
(defcustom helm-mode-reverse-history thelm-mode-reverse-history149,5700
(defcustom helm-mode-no-completion-in-region-in-modes nilhelm-mode-no-completion-in-region-in-modes154,5859
(defcustom helm-completion-in-region-fuzzy-match nilhelm-completion-in-region-fuzzy-match159,6026
(defcustom helm-completion-in-region-default-sort-fnhelm-completion-in-region-default-sort-fn165,6256
(defcustom helm-mode-fuzzy-match nilhelm-mode-fuzzy-match177,6710
(defcustom helm-mode-minibuffer-setup-hook-black-list '(minibuffer-completion-help)helm-mode-minibuffer-setup-hook-black-list187,7100
(defcustom helm-completing-read-dynamic-complete nilhelm-completing-read-dynamic-complete195,7441
(defvar helm-comp-read-maphelm-comp-read-map212,8090
(defun helm-cr-empty-string ()helm-cr-empty-string223,8381
(defun helm-mode--keyboard-quit ()helm-mode--keyboard-quit232,8603
(defun helm-cr--pattern-in-candidates-p (candidates)helm-cr--pattern-in-candidates-p334,13757
(defun helm-cr-default-transformer (candidates source)helm-cr-default-transformer341,14034
(defun helm-comp-read--move-to-first-real-candidate ()helm-comp-read--move-to-first-real-candidate379,15774
(defun helm-cr-default (default cands)helm-cr-default384,15967
(defvar helm-completion-mode-string " Helm")helm-completion-mode-string683,29052
(defvar helm-completion-mode-quit-messagehelm-completion-mode-quit-message685,29098
(defvar helm-completion-mode-start-messagehelm-completion-mode-start-message688,29171
(defun helm-completing-read-symbolshelm-completing-read-symbols694,29275
(defun helm-completing-read-default-1helm-completing-read-default-1727,30479
(defun helm-completing-read-default-find-taghelm-completing-read-default-find-tag771,32385
(defun helm-completing-read-sync-default-handlerhelm-completing-read-sync-default-handler786,33146
(defun helm-completing-read-default-handlerhelm-completing-read-default-handler795,33546
(defun helm-mode--default-filename (fname dir initial)helm-mode--default-filename1094,47007
(defun helm-read-file-name-handler-1 (prompt dir default-filenamehelm-read-file-name-handler-11206,52422
(defun helm-mode--advice-lisp--local-variables (old--fn &rest args)helm-mode--advice-lisp--local-variables1235,53503
(defun helm-completion-in-region-sort-fn (candidates _source)helm-completion-in-region-sort-fn1239,53616
(defun helm--completion-in-region (start end collection &optional predicate)helm--completion-in-region1243,53774
(defun helm-mode--in-file-completion-p ()helm-mode--in-file-completion-p1371,61010
(define-minor-mode helm-modehelm-mode1379,61298

elpa/helm-20180610.2230/helm-find.el,552
(defcustom helm-findutils-skip-boring-files thelm-findutils-skip-boring-files23,862
(defcustom helm-findutils-search-full-path nilhelm-findutils-search-full-path28,998
(defvar helm-source-findutilshelm-source-findutils34,1214
(defun helm-findutils-transformer (candidates _source)helm-findutils-transformer47,1739
(defun helm-find--build-cmd-line ()helm-find--build-cmd-line67,2744
(defun helm-find-shell-command-fn ()helm-find-shell-command-fn97,4305
(defun helm-find-1 (dir)helm-find-1127,5667
(defun helm-find (arg)helm-find139,5987

elpa/helm-20180610.2230/helm-info.el,1442
(defvar Info-history)Info-history29,1108
(defvar Info-directory-list)Info-directory-list30,1130
(defgroup helm-info nilhelm-info34,1176
(defcustom helm-info-default-sourceshelm-info-default-sources38,1271
(defun helm-info-goto (node-line)helm-info-goto84,3155
(defun helm-info-display-to-real (line)helm-info-display-to-real88,3261
(defclass helm-info-source (helm-source-in-buffer)helm-info-source95,3625
(defmacro helm-build-info-source (fname &rest args)helm-build-info-source104,3967
(defun helm-build-info-index-command (name doc source buffer)helm-build-info-index-command108,4122
(defun helm-define-info-index-sources (var-value &optional commands)helm-define-info-index-sources120,4549
(defun helm-info-index-set (var value)helm-info-index-set133,5214
(defvar helm-info-searched (make-ring 32)helm-info-searched142,5471
(defun helm-get-info-files ()helm-get-info-files145,5559
(defcustom helm-default-info-index-listhelm-default-info-index-list161,6208
(defun helm-info-search-index (candidate)helm-info-search-index168,6405
(defun helm-def-source--info-files ()helm-def-source--info-files177,6747
(defun helm-info (&optional refresh)helm-info190,7156
(defvar helm-info--pages-cache nilhelm-info--pages-cache219,8319
(defvar helm-source-info-pageshelm-source-info-pages222,8400
(defun helm-info-pages-init ()helm-info-pages-init232,8800
(defun helm-info-at-point ()helm-info-at-point247,9316

elpa/helm-20180610.2230/helm-net.el,4881
(defgroup helm-net nilhelm-net28,922
(defcustom helm-google-suggest-default-browser-function nilhelm-google-suggest-default-browser-function32,1015
(defcustom helm-home-url "https://www.google.com"helm-home-url39,1275
(defcustom helm-surfraw-default-browser-function nilhelm-surfraw-default-browser-function44,1398
(defcustom helm-google-suggest-urlhelm-google-suggest-url50,1601
(defcustom helm-google-suggest-search-urlhelm-google-suggest-search-url57,1838
(defcustom helm-net-prefer-curl nilhelm-net-prefer-curl64,2063
(defvaralias 'helm-google-suggest-use-curl-p 'helm-net-prefer-curl)helm-google-suggest-use-curl-p70,2244
(defcustom helm-surfraw-duckduckgo-urlhelm-surfraw-duckduckgo-url73,2400
(defcustom helm-wikipedia-suggest-urlhelm-wikipedia-suggest-url82,2706
(defcustom helm-search-suggest-action-wikipedia-urlhelm-search-suggest-action-wikipedia-url89,2947
(defcustom helm-wikipedia-summary-urlhelm-wikipedia-summary-url96,3173
(defcustom helm-search-suggest-action-youtube-urlhelm-search-suggest-action-youtube-url103,3442
(defcustom helm-search-suggest-action-imdb-urlhelm-search-suggest-action-imdb-url110,3662
(defcustom helm-search-suggest-action-google-maps-urlhelm-search-suggest-action-google-maps-url117,3859
(defcustom helm-search-suggest-action-google-news-urlhelm-search-suggest-action-google-news-url124,4083
(defcustom helm-google-suggest-actionshelm-google-suggest-actions131,4336
(defcustom helm-browse-url-firefox-new-window "-new-tab"helm-browse-url-firefox-new-window157,5561
(defun helm-search-suggest-perform-additional-action (url query)helm-search-suggest-perform-additional-action171,5926
(defun helm-net--url-retrieve-sync (request parser)helm-net--url-retrieve-sync175,6100
(defun helm-google-suggest-parser ()helm-google-suggest-parser187,6401
(defun helm-google-suggest-fetch (input)helm-google-suggest-fetch196,6715
(defun helm-google-suggest-set-candidates (&optional request-prefix)helm-google-suggest-set-candidates203,6987
(defun helm-ggs-set-number-result (num)helm-ggs-set-number-result219,7703
(defun helm-google-suggest-action (candidate)helm-google-suggest-action234,8205
(defvar helm-google-suggest-default-functionhelm-google-suggest-default-function242,8533
(defvar helm-source-google-suggesthelm-source-google-suggest246,8670
(defun helm-google-suggest-emacs-lisp ()helm-google-suggest-emacs-lisp255,8946
(defun helm-wikipedia-suggest-fetch ()helm-wikipedia-suggest-fetch263,9186
(defun helm-wikipedia--parse-buffer ()helm-wikipedia--parse-buffer271,9496
(defvar helm-wikipedia--summary-cache (make-hash-table :test 'equal))helm-wikipedia--summary-cache283,10047
(defun helm-wikipedia-show-summary (input)helm-wikipedia-show-summary284,10117
(defun helm-wikipedia-persistent-action (candidate)helm-wikipedia-persistent-action296,10521
(defun helm-wikipedia--get-summary (input)helm-wikipedia--get-summary311,11112
(defun helm-wikipedia--fetch-summary (input)helm-wikipedia--fetch-summary330,11865
(defun helm-wikipedia--parse-summary ()helm-wikipedia--parse-summary336,12100
(defvar helm-wikipedia-maphelm-wikipedia-map369,13519
(defvar helm-source-wikipedia-suggesthelm-source-wikipedia-suggest375,13712
(defun helm-wikipedia-show-summary-action ()helm-wikipedia-show-summary-action389,14340
(defvar helm-browse-url-chromium-program "chromium-browser")helm-browse-url-chromium-program403,14765
(defvar helm-browse-url-uzbl-program "uzbl-browser")helm-browse-url-uzbl-program404,14826
(defvar helm-browse-url-conkeror-program "conkeror")helm-browse-url-conkeror-program405,14879
(defvar helm-browse-url-opera-program "opera")helm-browse-url-opera-program406,14932
(defvar helm-browse-url-default-browser-alisthelm-browse-url-default-browser-alist407,14979
(defun helm-browse-url-firefox (url &optional _ignore)helm-browse-url-firefox438,16370
(defun helm-browse-url-opera (url &optional _ignore)helm-browse-url-opera456,17059
(defun helm-browse-url-chromium (url &optional _ignore)helm-browse-url-chromium472,17682
(defun helm-browse-url-uzbl (url &optional _ignore)helm-browse-url-uzbl479,17888
(defun helm-browse-url-conkeror (url &optional _ignore)helm-browse-url-conkeror485,18079
(defun helm-browse-url-default-browser (url &rest args)helm-browse-url-default-browser490,18262
(defun helm-browse-url (url &rest args)helm-browse-url499,18670
(defvar helm-surfraw-engines-history nil)helm-surfraw-engines-history512,18960
(defvar helm-surfraw-input-history nil)helm-surfraw-input-history513,19002
(defvar helm-surfraw--elvi-cache nil)helm-surfraw--elvi-cache514,19042
(defun helm-build-elvi-list ()helm-build-elvi-list516,19081
(defun helm-surfraw (pattern engine)helm-surfraw525,19421
(defun helm-google-suggest ()helm-google-suggest563,21078
(defun helm-wikipedia-suggest ()helm-wikipedia-suggest569,21271

elpa/helm-20180610.2230/helm-id-utils.el,472
(defgroup helm-id-utils nilhelm-id-utils23,857
(defcustom helm-gid-program "gid"helm-gid-program27,960
(defcustom helm-gid-db-file-name "ID"helm-gid-db-file-name36,1318
(defun helm-gid-candidates-process ()helm-gid-candidates-process41,1469
(defun helm-gid-filtered-candidate-transformer (candidates _source)helm-gid-filtered-candidate-transformer73,3100
(defclass helm-gid-source (helm-source-async)helm-gid-source78,3339
(defun helm-gid ()helm-gid103,4362

elpa/helm-20180610.2230/helm-help.el,2197
(defvar helm-org-headings--nofilename)helm-org-headings--nofilename21,821
(defgroup helm-help nilhelm-help25,931
(defface helm-helperhelm-helper29,1002
(defvar helm-help--string-list '(helm-help-messagehelm-help--string-list34,1121
(defvar helm-documentation-buffer-name "*helm documentation*")helm-documentation-buffer-name55,2293
(defun helm-documentation ()helm-documentation58,2373
(defvar helm-buffer-help-messagehelm-buffer-help-message85,3253
(defvar helm-ff-help-messagehelm-ff-help-message220,8474
(defun helm-read-file-name-help-message ()helm-read-file-name-help-message866,35742
(defvar helm-generic-file-help-messagehelm-generic-file-help-message963,39403
(defvar helm-grep-help-messagehelm-grep-help-message1030,42241
(defvar helm-pdfgrep-help-messagehelm-pdfgrep-help-message1139,46176
(defvar helm-etags-help-messagehelm-etags-help-message1151,46440
(defvar helm-ucs-help-messagehelm-ucs-help-message1163,46696
(defvar helm-bookmark-help-messagehelm-bookmark-help-message1182,47172
(defvar helm-esh-help-messagehelm-esh-help-message1195,47537
(defvar helm-buffers-ido-virtual-help-messagehelm-buffers-ido-virtual-help-message1240,48617
(defvar helm-moccur-help-messagehelm-moccur-help-message1255,49066
(defvar helm-top-help-messagehelm-top-help-message1332,51924
(defvar helm-el-package-help-messagehelm-el-package-help-message1345,52241
(defvar helm-M-x-help-messagehelm-M-x-help-message1403,54576
(defvar helm-imenu-help-messagehelm-imenu-help-message1421,55082
(defvar helm-colors-help-messagehelm-colors-help-message1432,55297
(defvar helm-semantic-help-messagehelm-semantic-help-message1445,55634
(defvar helm-kmacro-help-messagehelm-kmacro-help-message1454,55748
(defvar helm-kill-ring-help-messagehelm-kill-ring-help-message1475,56280
(defvar helm-org-headings-help-messagehelm-org-headings-help-message1526,58574
(defun helm-comp-read-help-message ()helm-comp-read-help-message1553,59512
(defvar helm-comp-read-mode-line "\helm-comp-read-mode-line1583,60478
(defvar helm-read-file-name-mode-line-string "\helm-read-file-name-mode-line-string1594,60750
(defvar helm-top-mode-line "\helm-top-mode-line1606,61097

elpa/w3-4.0.49/w3-mouse.el,745
(defun w3-follow-mouse-other-frame (e)w3-follow-mouse-other-frame30,1014
(defun w3-follow-inlined-image-mouse (e)w3-follow-inlined-image-mouse37,1251
(defun w3-follow-inlined-image ()w3-follow-inlined-image43,1407
(defvar w3-mouse-button1 (condw3-mouse-button156,1863
(defvar w3-mouse-button2 (condw3-mouse-button259,1954
(defvar w3-mouse-button3 (condw3-mouse-button362,2045
(define-key w3-mode-map (vector w3-mouse-button3) 'w3-popup-menu)w3-mode-map66,2138
(define-key w3-netscape-emulation-minor-mode-mapw3-netscape-emulation-minor-mode-map68,2205
(define-key w3-mode-map (vector (list 'meta w3-mouse-button2))w3-mode-map71,2314
(define-key w3-netscape-emulation-minor-mode-mapw3-netscape-emulation-minor-mode-map73,2409

elpa/w3-4.0.49/w3-dired.el,447
(defvar w3-dired-minor-mode-mapw3-dired-minor-mode-map42,1386
(defvar w3-dired-minor-mode nilw3-dired-minor-mode48,1553
(defun w3-dired-find-file ()w3-dired-find-file53,1680
(defun w3-dired-find-file-mouse (event)w3-dired-find-file-mouse62,2031
(defun w3-dired-minor-mode (&optional arg)w3-dired-minor-mode69,2235
(defun w3-dired-find-file-dired (dir)w3-dired-find-file-dired83,2613
(defun turn-on-w3-dired ()turn-on-w3-dired90,2826

elpa/w3-4.0.49/w3-keymap.el,40
(defvar w3-mode-mapw3-mode-map31,1167

elpa/w3-4.0.49/w3-pkg.el,111
(define-package "w3" "4.0.49" "Fully customizable, largely undocumented web browser for Emacs" 'nil)"w3"2,44

elpa/w3-4.0.49/w3-speak.el,1437
(defun w3-speak-summarize-form-field ()w3-speak-summarize-form-field66,2181
(defadvice w3-widget-forward (after emacspeak pre act comp)w3-widget-forward76,2547
(defadvice w3-widget-backward (after emacspeak pre act comp)w3-widget-backward81,2735
(defadvice w3-scroll-up (after emacspeak pre act comp)w3-scroll-up86,2924
(defadvice w3-revert-form (after emacspeak pre act)w3-revert-form95,3200
(defadvice w3-finish-text-entry (after emacspeak pre act )w3-finish-text-entry99,3330
(defadvice w3-start-of-document (after emacspeak pre act)w3-start-of-document104,3492
(defadvice w3-end-of-document (after emacspeak pre act)w3-end-of-document110,3709
(defadvice w3-goto-last-buffer (after emacspeak pre act)w3-goto-last-buffer116,3923
(defadvice w3-quit (after emacspeak pre act)w3-quit122,4129
(defvar dtk-punctuation-mode)dtk-punctuation-mode128,4320
(defvar voice-lock-mode)voice-lock-mode129,4350
(defadvice w3-fetch (around  emacspeak  act comp )w3-fetch131,4376
(defun w3-speak-mode-hook ()w3-speak-mode-hook139,4645
(defun w3-speak-use-voice-locking (&optional arg) w3-speak-use-voice-locking147,4933
(defun w3-speak-browse-page ()w3-speak-browse-page158,5360
(define-key w3-mode-map "." 'w3-speak-browse-page)w3-mode-map164,5524
(defvar w3-speak--last-progress-indication 0w3-speak--last-progress-indication166,5576
(defadvice url-lazy-message (around emacspeak pre act)url-lazy-message169,5682

elpa/w3-4.0.49/w3-java.el,244
(defgroup w3-java nilw3-java31,1058
(defcustom w3-java-vm-program "hotjava"w3-java-vm-program36,1149
(defcustom w3-java-vm-arguments '(file)w3-java-vm-arguments41,1327
(defun w3-java-run-applet (options params)w3-java-run-applet48,1609

elpa/w3-4.0.49/url-hotlist.el,250
(defun url-hotlist-html-generator (node)url-hotlist-html-generator32,1082
(defun url-hotlist (url)url-hotlist46,1541
(defun url-hotlist-view (_query-args)url-hotlist-view71,2378
(defun url-hotlist-search (query-args)url-hotlist-search81,2613

elpa/w3-4.0.49/w3-menu.el,3637
(defvar w3-html-bookmarks)w3-html-bookmarks31,1031
(defvar w3-menu-fsfemacs-bookmark-menu nil)w3-menu-fsfemacs-bookmark-menu47,1687
(defvar w3-menu-fsfemacs-debug-menu nil)w3-menu-fsfemacs-debug-menu48,1731
(defvar w3-menu-fsfemacs-edit-menu nil)w3-menu-fsfemacs-edit-menu49,1772
(defvar w3-menu-fsfemacs-file-menu nil)w3-menu-fsfemacs-file-menu50,1812
(defvar w3-menu-fsfemacs-go-menu nil)w3-menu-fsfemacs-go-menu51,1852
(defvar w3-menu-fsfemacs-help-menu nil)w3-menu-fsfemacs-help-menu52,1890
(defvar w3-menu-fsfemacs-view-menu nil)w3-menu-fsfemacs-view-menu53,1930
(defvar w3-menu-fsfemacs-options-menu nil)w3-menu-fsfemacs-options-menu54,1970
(defvar w3-menu-fsfemacs-style-menu nil)w3-menu-fsfemacs-style-menu55,2013
(defvar w3-menu-fsfemacs-search-menu nil)w3-menu-fsfemacs-search-menu56,2054
(defvar w3-menu-w3-menubar nil)w3-menu-w3-menubar57,2096
(defcustom w3-use-menus '(file edit view go bookmark options buffers stylew3-use-menus59,2129
(defvar w3-menu-hotlist-menu nil)w3-menu-hotlist-menu104,4067
(defvar w3-menu-html-links-menu nil)w3-menu-html-links-menu105,4101
(defvar w3-menu-links-menu nil)w3-menu-links-menu106,4138
(defun w3-menu-breakup (menu-desc max-len)w3-menu-breakup111,4325
(defun w3-menu-truncate-item (string)w3-menu-truncate-item118,4563
(defun w3-menu-dummy-menu (item)w3-menu-dummy-menu123,4718
(defun w3-menu-hotlist-constructor (_menu-items)w3-menu-hotlist-constructor128,4863
(defun w3-menu-html-links-constructor (_menu-items)w3-menu-html-links-constructor144,5337
(defun w3-menu-links-constructor (_menu-items)w3-menu-links-constructor181,6425
(defun w3-toggle-minibuffer ()w3-toggle-minibuffer202,7122
(defun w3-toggle-location ()w3-toggle-location224,7763
(defun w3-toggle-menubar ()w3-toggle-menubar232,7992
(defun w3-location-active ()w3-location-active244,8290
(defun w3-menubar-active ()w3-menubar-active249,8413
(defun w3-menu-global-menubar ()w3-menu-global-menubar254,8588
(defconst w3-menu-file-menuw3-menu-file-menu259,8737
(defconst w3-menu-edit-menuw3-menu-edit-menu299,10065
(defconst w3-menu-view-menuw3-menu-view-menu321,10584
(defconst w3-menu-debug-menuw3-menu-debug-menu338,11085
(defconst w3-menu-go-menuw3-menu-go-menu348,11371
(defconst w3-menu-bookmark-menuw3-menu-bookmark-menu363,11834
(defconst w3-menu-options-menuw3-menu-options-menu380,12359
(defconst w3-menu-style-menuw3-menu-style-menu422,13934
(defconst w3-menu-buffer-menuw3-menu-buffer-menu439,14564
(defconst w3-menu-search-menuw3-menu-search-menu448,14751
(defconst w3-menu-emacs-buttonw3-menu-emacs-button460,15126
(defconst w3-menu-help-menuw3-menu-help-menu464,15240
(defvar w3-mode-menu-map nil)w3-mode-menu-map475,15561
(defun w3-menu-initialize-w3-mode-menu-map ()w3-menu-initialize-w3-mode-menu-map477,15592
(defun w3-menu-make-xemacs-menubar ()w3-menu-make-xemacs-menubar574,19223
(defun w3-menu-install-menubar ()w3-menu-install-menubar605,20151
(defun w3-menu-install-menubar-item ()w3-menu-install-menubar-item619,20657
(defun w3-menu-install-menus ()w3-menu-install-menus631,21092
(defun w3-menu-set-menubar-dirty-flag ()w3-menu-set-menubar-dirty-flag638,21251
(defun w3-menu-toggle-menubar ()w3-menu-toggle-menubar644,21383
(defvar print-readably)print-readably669,22252
(defun w3-menu-save-options ()w3-menu-save-options671,22277
(defun w3-menu-e19-bogus-filter-constructor (_name menu)w3-menu-e19-bogus-filter-constructor749,25353
(defalias 'w3-event-glyphw3-event-glyph766,25756
(defun w3-menu-popup-menu (menu)w3-menu-popup-menu769,25837
(defun w3-popup-menu (e)w3-popup-menu776,26065

elpa/w3-4.0.49/w3-speak-table.el,2897
(defsubst w3-table-inside-table-display-p ()w3-table-inside-table-display-p36,1120
(defmacro w3-within-cell (cell-info table-info &rest forms)w3-within-cell43,1391
(defmacro w3-table-compute-relative-movement (&rest forms)w3-table-compute-relative-movement87,3160
(defsubst w3-table-redo-relative-movement (movement)w3-table-redo-relative-movement102,3884
(defmacro w3-table-move-within-cell (at-depth cell-info move-function)w3-table-move-within-cell110,4174
(defmacro w3-table-move-within-subtable (at-depth cell-info move-function)w3-table-move-within-subtable123,4779
(defun w3-find-table (&optional at-depth)w3-find-table142,5490
(defstruct w3-table-infow3-table-info167,6385
(defun w3-table-info (&optional to-depth noerror)w3-table-info179,6682
(defun w3-table-current-row-number (&optional table-info)w3-table-current-row-number225,8233
(defun w3-table-current-column-number (&optional table-info)w3-table-current-column-number241,8885
(defun w3-table-row-column-spans (&optional table-info)w3-table-row-column-spans255,9376
(defstruct w3-cell-infow3-cell-info304,11276
(defun w3-cell-info (&optional table-info to-depth)w3-cell-info314,11631
(defun w3-table-this-cell-contents (&optional at-depth table-info)w3-table-this-cell-contents379,14269
(defun w3-table-speak-this-cell-info (&optional at-depth)w3-table-speak-this-cell-info398,15092
(defun w3-table-focus-on-this-cell (&optional at-depth)w3-table-focus-on-this-cell414,15731
(defun w3-table-speak-this-cell (&optional at-depth)w3-table-speak-this-cell436,16498
(defun w3-table-move-to-table-start (&optional at-depth table-info)w3-table-move-to-table-start446,16790
(defun w3-table-move-to-table-end (&optional at-depth table-info)w3-table-move-to-table-end461,17432
(defun w3-table-move-to-beginning-of-previous-table-row (&optional at-depth table-info)w3-table-move-to-beginning-of-previous-table-row476,18077
(defun w3-table-move-to-beginning-of-next-table-row (&optional at-depth table-info)w3-table-move-to-beginning-of-next-table-row494,18881
(defun w3-table-move-to-previous-table-row (&optional at-depth table-info)w3-table-move-to-previous-table-row512,19699
(defun w3-table-move-to-next-table-row (&optional at-depth table-info)w3-table-move-to-next-table-row532,20571
(defun w3-table-move-to-previous-table-column (&optional at-depth table-info)w3-table-move-to-previous-table-column552,21457
(defun w3-table-move-to-next-table-column (&optional at-depth table-info)w3-table-move-to-next-table-column581,22541
(defun w3-table-move-to-top-of-table-column (&optional at-depth table-info)w3-table-move-to-top-of-table-column608,23631
(defun w3-table-speak-current-table-column (&optional at-depth table-info)w3-table-speak-current-table-column638,24702
(defvar emacspeak-prefix)emacspeak-prefix680,26269
(defun w3-table-setup-keys ()w3-table-setup-keys683,26311

elpa/w3-4.0.49/w3-print.el,176
(defvar w3-postscript-print-function 'ps-print-buffer-with-facesw3-postscript-print-function30,1018
(defun w3-print-this-url (&optional url format)w3-print-this-url38,1349

elpa/w3-4.0.49/w3-vars.el,4004
(defconst w3-version-numberw3-version-number31,1049
(defconst w3-version-date (let ((x "$Date: 2001/10/01 11:42:46 $"))w3-version-date40,1381
(defconst w3-versionw3-version46,1615
(defvar w3-track-last-buffer nilw3-track-last-buffer53,1942
(defvar w3-gc-cons-threshold-multiplier 1w3-gc-cons-threshold-multiplier57,2059
(defvar w3-html-entities w3-html-entities69,2789
(defvar w3-popup-menuw3-popup-menu235,7166
(defvar w3-graphlink-menuw3-graphlink-menu247,7605
(defvar w3-hyperlink-menuw3-hyperlink-menu257,8085
(defvar w3-graphics-list nilw3-graphics-list272,8934
(defvar w3-delayed-images nilw3-delayed-images275,9003
(defvar w3-frameset-structure nilw3-frameset-structure279,9119
(defvar w3-frame-name nilw3-frame-name282,9257
(defvar w3-base-target nilw3-base-target285,9300
(defvar w3-target-window-distances nilw3-target-window-distances288,9350
(defvar w3-tty-char-width 8w3-tty-char-width291,9419
(defvar w3-tty-char-height 15w3-tty-char-height294,9486
(defvar w3-form-radio-elements nil "Internal variable - do not touch!")w3-form-radio-elements297,9556
(defvar w3-form-elements nil "Internal variable - do not touch!")w3-form-elements298,9628
(defvar w3-user-stylesheet nilw3-user-stylesheet300,9695
(defvar w3-current-stylesheet nilw3-current-stylesheet303,9769
(defvar w3-last-fill-pos nilw3-last-fill-pos306,9843
(defvar w3-active-faces nil "The list of active faces.")w3-active-faces310,9996
(defvar w3-active-voices nil "The list of active voices.")w3-active-voices311,10053
(defconst w3-bug-address "w3-bugs@xemacs.org"w3-bug-address313,10113
(defvar w3-current-isindex nil "Is the current document a searchable index?")w3-current-isindex315,10222
(defvar w3-current-buffer nil "Is the current W3 buffer")w3-current-buffer316,10300
(defvar w3-current-last-buffer nil "Last W3 buffer seen before this one.")w3-current-last-buffer317,10358
(defvar w3-current-links nil "An assoc list of <link> tags for this doc.")w3-current-links318,10433
(defvar w3-current-metainfo nil "An assoc list of <meta> tags for this doc.")w3-current-metainfo319,10508
(defvar w3-current-source nil "Source of current document.")w3-current-source320,10586
(defvar w3-current-parse nil "Parsed version of current document.")w3-current-parse321,10647
(defvar w3-current-badhtml nil "List of HTML warnings for this page.")w3-current-badhtml322,10715
(defvar w3-find-this-link nil "Link to go to within a document.")w3-find-this-link323,10786
(defvar w3-hidden-forms nil "List of hidden form areas and their info.")w3-hidden-forms324,10852
(defvar w3-hotlist nil "Default hotlist.")w3-hotlist325,10925
(defvar w3-last-buffer nil "The last W3 buffer visited.")w3-last-buffer326,10968
(defvar w3-roman-characters "ivxLCDMVX" "Roman numerals.")w3-roman-characters327,11026
(defvar w3-setup-done nil "Have we been through setup code yet?")w3-setup-done328,11085
(defvar w3-strict-width nilw3-strict-width330,11152
(defvar w3-submit-button nilw3-submit-button336,11414
(defvar w3-explicit-conversion-tree nilw3-explicit-conversion-tree339,11518
(defvar w3-explicit-encodings-changed-since-last-save nilw3-explicit-encodings-changed-since-last-save344,11714
(defvar w3-id-positions nil "Internal use only.")w3-id-positions350,12083
(defvar w3-imagemaps nil "Internal use only.")w3-imagemaps351,12133
(defvar w3-persistent-variablesw3-persistent-variables354,12230
(defvar w3-netscape-emulation-minor-mode nilw3-netscape-emulation-minor-mode387,13157
(defvar w3-netscape-emulation-minor-mode-map (make-sparse-keymap)w3-netscape-emulation-minor-mode-map389,13260
(defvar w3-lynx-emulation-minor-mode nilw3-lynx-emulation-minor-mode391,13362
(defvar w3-lynx-emulation-minor-mode-map (make-sparse-keymap)w3-lynx-emulation-minor-mode-map393,13457
(defvar w3-last-search-item nil)w3-last-search-item395,13551
(defvar w3-form-labels nil "")w3-form-labels400,13763
(defvar w3-table-structure nilw3-table-structure412,14203

elpa/w3-4.0.49/w3-forms.el,6429
(defvar w3-form-use-old-style nilw3-form-use-old-style47,1348
(defvar w3-form-keymapw3-form-keymap50,1451
(defsubst w3-form-element-type          (obj) (aref obj 0))w3-form-element-type77,2646
(defsubst w3-form-element-name          (obj) (aref obj 1))w3-form-element-name78,2706
(defsubst w3-form-element-default-value (obj) (aref obj 2))w3-form-element-default-value79,2766
(defsubst w3-form-element-value         (obj) (aref obj 3))w3-form-element-value80,2826
(defsubst w3-form-element-size          (obj) (aref obj 4))w3-form-element-size81,2886
(defsubst w3-form-element-maxlength     (obj) (aref obj 5))w3-form-element-maxlength82,2946
(defsubst w3-form-element-options       (obj) (aref obj 6))w3-form-element-options83,3006
(defsubst w3-form-element-action        (obj) (aref obj 7))w3-form-element-action84,3066
(defsubst w3-form-element-widget        (obj) (aref obj 8))w3-form-element-widget85,3126
(defsubst w3-form-element-plist         (obj) (aref obj 9))w3-form-element-plist86,3186
(defsubst w3-form-element-set-type          (obj val) (aset obj 0 val))w3-form-element-set-type88,3247
(defsubst w3-form-element-set-name          (obj val) (aset obj 1 val))w3-form-element-set-name89,3319
(defsubst w3-form-element-set-default-value (obj val) (aset obj 2 val))w3-form-element-set-default-value90,3391
(defsubst w3-form-element-set-value         (obj val) (aset obj 3 val))w3-form-element-set-value91,3463
(defsubst w3-form-element-set-size          (obj val) (aset obj 4 val))w3-form-element-set-size92,3535
(defsubst w3-form-element-set-maxlength     (obj val) (aset obj 5 val))w3-form-element-set-maxlength93,3607
(defsubst w3-form-element-set-options       (obj val) (aset obj 6 val))w3-form-element-set-options94,3679
(defsubst w3-form-element-set-action        (obj val) (aset obj 7 val))w3-form-element-set-action95,3751
(defsubst w3-form-element-set-widget        (obj val) (aset obj 8 val))w3-form-element-set-widget96,3823
(defsubst w3-form-element-set-plist         (obj val) (aset obj 9 val))w3-form-element-set-plist97,3895
(defvar w3-form-valid-key-sizesw3-form-valid-key-sizes99,3968
(defun w3-form-determine-size (el size)w3-form-determine-size110,4259
(defun w3-form-add-element (plist face)w3-form-add-element145,5226
(defvar widget-push-button-gui)widget-push-button-gui172,6104
(defun w3-form-resurrect-widgets ()w3-form-resurrect-widgets175,6152
(defsubst w3-form-mark-widget (widget el)w3-form-mark-widget194,6881
(defun w3-form-add-element-internal (el face)w3-form-add-element-internal222,8014
(defvar w3-custom-options nil)w3-custom-options256,9731
(defun w3-form-create-custom (el _face)w3-form-create-custom259,9811
(defun w3-form-create-checkbox (el face)w3-form-create-checkbox274,10325
(defun w3-form-radio-button-update (widget child event)w3-form-radio-button-update279,10463
(defun w3-form-create-radio-button (el face)w3-form-create-radio-button283,10629
(defun w3-form-create-button (el face)w3-form-create-button320,11770
(defun w3-form-create-image (el face)w3-form-create-image332,12166
(defun w3-form-create-submit-button (el face)w3-form-create-submit-button349,12646
(defun w3-form-create-file-browser (el face)w3-form-create-file-browser359,12970
(defun w3-form-create-keygen-list (_el face)w3-form-create-keygen-list367,13171
(defun w3-form-create-option-list (el face)w3-form-create-option-list391,13862
(defun w3-form-create-multiline (_el face)w3-form-create-multiline420,14721
(defun w3-form-create-integer (el face)w3-form-create-integer426,14873
(defun w3-form-create-float (el face)w3-form-create-float438,15192
(defun w3-form-create-text (el face)w3-form-create-text450,15508
(defun w3-form-create-password (el face)w3-form-create-password460,15800
(defun w3-form-default-widget-creator (el face)w3-form-default-widget-creator474,16266
(defun w3-form-default-button-update (w v)w3-form-default-button-update484,16564
(defun w3-form-default-button-callback (widget &rest _ignore)w3-form-default-button-callback495,16870
(defun w3-form-summarize-field (widget &rest _ignore)w3-form-summarize-field524,18240
(defsubst w3-form-field-label (data)w3-form-field-label548,19201
(defun w3-form-summarize-default (data _widget)w3-form-summarize-default555,19458
(defun w3-form-summarize-password (data _widget)w3-form-summarize-password562,19730
(defun w3-form-summarize-multiline (data _widget)w3-form-summarize-multiline568,19956
(defun w3-form-summarize-checkbox (data _widget)w3-form-summarize-checkbox576,20242
(defun w3-form-summarize-option-list (data _widget)w3-form-summarize-option-list582,20503
(defun w3-form-summarize-image (data _widget)w3-form-summarize-image588,20747
(defun w3-form-summarize-submit-button (data _widget)w3-form-summarize-submit-button593,20939
(defun w3-form-summarize-radio-button (data widget)w3-form-summarize-radio-button603,21318
(defun w3-form-summarize-file-browser (data _widget)w3-form-summarize-file-browser614,21790
(defun w3-form-summarize-keygen-list (data _widget)w3-form-summarize-keygen-list621,22070
(defun w3-form-maybe-submit-by-keypress ()w3-form-maybe-submit-by-keypress625,22240
(defsubst w3-all-widgets (actn)w3-all-widgets631,22390
(defun w3-form-possibly-submit (widget &rest _ignore)w3-form-possibly-submit635,22528
(defun w3-form-submit/reset-callback (widget &rest _ignore)w3-form-submit/reset-callback662,23311
(defun w3-do-text-entry (widget &rest _ignore)w3-do-text-entry675,23843
(defun w3-finish-text-entry ()w3-finish-text-entry689,24401
(defun w3-revert-form (actn)w3-revert-form708,25012
(defun w3-form-encode-helper (formobjs)w3-form-encode-helper738,25899
(defun w3-form-encode-make-mime-part (id data separator)w3-form-encode-make-mime-part829,28946
(defun w3-form-encode-multipart/x-www-form-data (formobjs)w3-form-encode-multipart/x-www-form-data841,29319
(defun w3-form-encode (result &optional enctype)w3-form-encode861,30040
(defun w3-form-encode-text/plain (result)w3-form-encode-text/plain869,30396
(defun w3-form-encode-xwfu (chunk)w3-form-encode-xwfu890,30941
(defun w3-form-encode-application/x-www-form-urlencoded (result)w3-form-encode-application/x-www-form-urlencoded915,31825
(defun w3-form-encode-application/x-w3-isindex (result)w3-form-encode-application/x-w3-isindex923,32070
(defun w3-submit-form (ident)w3-submit-form930,32272

elpa/w3-4.0.49/w3-cus.el,3224
(defgroup w3 '((url custom-group))w328,988
(defgroup w3-files nilw3-files32,1088
(defgroup w3-images nilw3-images37,1176
(defgroup w3-printing nilw3-printing42,1263
(defgroup w3-menus nilw3-menus47,1369
(defgroup w3-parsing nilw3-parsing52,1457
(defgroup w3-display nilw3-display57,1550
(defgroup w3-hooks nilw3-hooks62,1661
(defcustom w3-configuration-directory "~/.w3/"w3-configuration-directory68,1774
(defcustom w3-default-configuration-file "profile"w3-default-configuration-file73,1924
(defcustom w3-default-homepage nilw3-default-homepage80,2152
(defcustom w3-default-stylesheet nilw3-default-stylesheet88,2489
(defcustom w3-hotlist-file nilw3-hotlist-file94,2656
(defcustom w3-explicit-encodings-file nilw3-explicit-encodings-file103,2962
(defcustom w3-documentation-root "http://www.cs.indiana.edu/elisp/w3/"w3-documentation-root110,3171
(defcustom w3-display-frames tw3-display-frames116,3374
(defcustom w3-bulletsw3-bullets128,3899
(defcustom w3-echo-link '(title url text name)w3-echo-link141,4222
(defcustom w3-horizontal-rule-char nilw3-horizontal-rule-char160,4916
(defcustom w3-force-conversion-alist nilw3-force-conversion-alist169,5280
(defcustom w3-use-terminal-characters nilw3-use-terminal-characters177,5652
(defcustom w3-use-terminal-characters-on-tty nilw3-use-terminal-characters-on-tty182,5814
(defcustom w3-use-terminal-glyphs nilw3-use-terminal-glyphs189,6081
(defcustom w3-use-unicode-table-characters nilw3-use-unicode-table-characters202,6766
(defcustom w3-do-incremental-display nilw3-do-incremental-display209,7051
(defcustom w3-defined-link-typesw3-defined-link-types214,7183
(defcustom w3-debug-html nilw3-debug-html231,7950
(defcustom w3-debug-buffer "*HTML Debug*"w3-debug-buffer238,8192
(defcustom w3-auto-image-alt 'w3-default-image-alt-funcw3-auto-image-alt244,8355
(defcustom w3-delay-image-loads (not (or (and (fboundp 'display-images-p)w3-delay-image-loads260,9029
(defcustom w3-image-mappingsw3-image-mappings270,9341
(defcustom w3-max-menu-length 35w3-max-menu-length301,10401
(defcustom w3-max-menu-width 40w3-max-menu-width308,10647
(defcustom w3-modeline-formatw3-modeline-format314,10785
(defcustom w3-netscape-compatible-comments nilw3-netscape-compatible-comments330,11142
(defcustom w3-notify 'semibullyw3-notify335,11280
(defcustom w3-popup-menu-on-mouse-3 tw3-popup-menu-on-mouse-3367,12661
(defcustom w3-reuse-buffers 'yesw3-reuse-buffers373,12880
(defcustom w3-right-margin 2w3-right-margin390,13536
(defcustom w3-maximum-line-length nilw3-maximum-line-length397,13755
(defcustom w3-track-mouse tw3-track-mouse404,14005
(defcustom w3-honor-stylesheets nilw3-honor-stylesheets409,14144
(defcustom w3-user-colors-take-precedence nilw3-user-colors-take-precedence414,14276
(defcustom w3-user-fonts-take-precedence nilw3-user-fonts-take-precedence421,14521
(defcustom w3-load-hook nilw3-load-hook428,14732
(defcustom w3-mode-hook nilw3-mode-hook433,14826
(defcustom w3-source-file-hook nilw3-source-file-hook438,14926
(defcustom w3-display-errors-hook nilw3-display-errors-hook443,15040
(defcustom w3-html-errors-font-lock-keywordsw3-html-errors-font-lock-keywords448,15167

elpa/w3-4.0.49/font.el,6391
(defconst font-window-system-mappingsfont-window-system-mappings75,2675
(defconst font-emacs21-weight-mappingsfont-emacs21-weight-mappings86,3282
(defconst x-font-weight-mappingsx-font-weight-mappings100,3720
(defconst font-possible-weightsfont-possible-weights114,4179
(defvar font-rgb-file nilfont-rgb-file117,4252
(defvar font-maximum-slippage "1pt"font-maximum-slippage120,4314
(defvar font-style-keywords nil)font-style-keywords123,4414
(defun set-font-family (fontobj family)set-font-family125,4448
(defun set-font-weight (fontobj weight)set-font-weight128,4516
(defun set-font-style (fontobj style)set-font-style131,4584
(defun set-font-size (fontobj size)set-font-size134,4649
(defun set-font-registry (fontobj reg)set-font-registry137,4711
(defsubst font-set-font-encoding (fontobj enc)font-set-font-encoding140,4775
(defun font-family (fontobj)font-family143,4848
(defun font-weight (fontobj)font-weight146,4898
(defun font-style (fontobj)font-style149,4948
(defun font-size (fontobj)font-size152,4997
(defun font-registry (fontobj)font-registry155,5045
(defun font-encoding (fontobj)font-encoding158,5097
(define-new-mask bold        1)bold194,6268
(define-new-mask italic      2)italic195,6300
(define-new-mask oblique     3)oblique196,6332
(define-new-mask dim         4)dim197,6364
(define-new-mask underline   5)underline198,6396
(define-new-mask overline    6)overline199,6428
(define-new-mask linethrough 7)linethrough200,6460
(define-new-mask strikethru  8)strikethru201,6492
(define-new-mask reverse     9)reverse202,6524
(define-new-mask blink       10)blink203,6556
(define-new-mask smallcaps   11)smallcaps204,6589
(define-new-mask bigcaps     12)bigcaps205,6622
(define-new-mask dropcaps    13)dropcaps206,6655
(defvar font-caps-display-tablefont-caps-display-table208,6689
(defvar font-func)font-func230,7325
(defun set-font-style-by-keywords (fontobj styles)set-font-style-by-keywords232,7345
(defun font-properties-from-style (fontobj)font-properties-from-style242,7777
(defun font-unique (list)font-unique252,8044
(defun font-higher-weight (w1 w2)font-higher-weight263,8257
(defun font-spatial-to-canonical (spec &optional device)font-spatial-to-canonical274,8501
(defun make-font (&rest args)make-font331,10442
(defun font-create-name (fontobj &optional device)font-create-name349,10855
(defun font-create-object (fontname &optional device)font-create-object355,11088
(defun font-combine-fonts-internal (fontobj-1 fontobj-2)font-combine-fonts-internal360,11316
(defun font-combine-fonts (&rest args)font-combine-fonts389,12371
(defun tty-font-create-object (fontname &optional device)tty-font-create-object407,12988
(defun tty-font-create-plist (fontobj &optional device)tty-font-create-plist410,13075
(defvar font-x-font-regexp (or (and (featurep 'xemacs)font-x-font-regexp424,13645
(defvar font-x-font-regexp-foundry-and-familyfont-x-font-regexp-foundry-and-family452,14528
(defvar font-x-registry-and-encoding-regexpfont-x-registry-and-encoding-regexp459,14696
(defvar font-x-family-mappingsfont-x-family-mappings468,15012
(defun x-font-create-object (fontname &optional device)x-font-create-object501,15763
(defvar device-fonts-cache)device-fonts-cache546,17486
(defun x-font-families-for-device (&optional device no-resetp)x-font-families-for-device548,17515
(defvar font-default-cache nil)font-default-cache564,18183
(defun font-default-font-for-device (&optional device)font-default-font-for-device567,18231
(defun font-default-object-for-device (&optional device)font-default-object-for-device579,18655
(defun font-default-family-for-device (&optional device)font-default-family-for-device587,18938
(defun font-default-registry-for-device (&optional device)font-default-registry-for-device591,19068
(defun font-default-encoding-for-device (&optional device)font-default-encoding-for-device595,19202
(defun font-default-size-for-device (&optional device)font-default-size-for-device599,19336
(defun x-font-create-name (fontobj &optional device)x-font-create-name605,19595
(defvar font-mswindows-font-regexpfont-mswindows-font-regexp690,22811
(defconst mswindows-font-weight-mappingsmswindows-font-weight-mappings703,23183
(defvar font-mswindows-family-mappingsfont-mswindows-family-mappings718,23697
(defun mswindows-font-create-object (fontname &optional device)mswindows-font-create-object736,24170
(defun mswindows-font-create-name (fontobj &optional device)mswindows-font-create-name774,25408
(defun x-font-build-cache (&optional device)x-font-build-cache838,27734
(defalias 'font-set-face-fontfont-set-face-font869,29143
(defun font-find-available-family (fontobj &optional device)font-find-available-family936,32233
(defun font-update-device-fonts (device)font-update-device-fonts972,33615
(defun font-update-one-face (face &optional device-list)font-update-one-face986,34092
(defun font-lookup-rgb-components (color)font-lookup-rgb-components1029,35588
(defun font-hex-string-to-number (string)font-hex-string-to-number1088,37436
(defun font-parse-rgb-components (color)font-parse-rgb-components1108,38004
(defun font-rgb-color-p (obj)font-rgb-color-p1169,40094
(defun font-rgb-color-red (obj) (aref obj 1))font-rgb-color-red1174,40203
(defun font-rgb-color-green (obj) (aref obj 2))font-rgb-color-green1175,40249
(defun font-rgb-color-blue (obj) (aref obj 3))font-rgb-color-blue1176,40297
(defun font-color-rgb-components (color)font-color-rgb-components1178,40345
(defsubst font-tty-compute-color-delta (col1 col2)font-tty-compute-color-delta1217,41913
(defun font-tty-find-closest-color (r g b)font-tty-find-closest-color1226,42203
(defun font-normalize-color (color &optional device)font-normalize-color1261,43366
(defun font-set-face-background (&optional face color &rest args)font-set-face-background1281,44077
(defun font-set-face-foreground (&optional face color &rest args)font-set-face-foreground1293,44430
(defun font-map-windows (func &optional arg frame)font-map-windows1307,44968
(defun font-face-visible-in-window-p (window face)font-face-visible-in-window-p1316,45242
(defun font-blink-callback ()font-blink-callback1334,45863
(defcustom font-blink-interval 0.5font-blink-interval1347,46322
(defun font-blink-initialize ()font-blink-initialize1352,46421

elpa/w3-4.0.49/w3-compat.el,0

elpa/w3-4.0.49/w3-parse.el,1783
(defvar w3-p-d-current-element)w3-p-d-current-element82,3326
(defvar w3-p-d-exceptions)w3-p-d-exceptions86,3474
(defvar w3-p-d-in-parsed-marked-section)w3-p-d-in-parsed-marked-section94,3891
(defvar w3-p-d-non-markup-chars)w3-p-d-non-markup-chars98,4074
(defvar w3-p-d-null-end-tag-enabled)w3-p-d-null-end-tag-enabled103,4280
(defvar w3-p-d-open-element-stack)w3-p-d-open-element-stack107,4421
(defvar w3-p-d-shortrefs)w3-p-d-shortrefs112,4634
(defvar w3-p-d-shortref-chars)w3-p-d-shortref-chars123,5225
(defvar w3-p-d-tag-name)w3-p-d-tag-name134,5863
(defvar w3-p-d-end-tag-p)w3-p-d-end-tag-p139,6042
(defun w3-debug-html-aux (message &optional outer nocontext)w3-debug-html-aux209,8870
(defun w3-quote-for-string (string)w3-quote-for-string230,9724
(defconst w3-invalid-sgml-char-replacementw3-invalid-sgml-char-replacement257,10584
(defalias 'w3-int-to-charw3-int-to-char292,12479
(defun w3-resolve-numeric-char (code)w3-resolve-numeric-char327,13734
(defvar w3-sgml-md-syntax-tablew3-sgml-md-syntax-table522,22172
(defun w3-open-elements-string (&optional skip-count)w3-open-elements-string777,32324
(defvar w3-last-parse-tree nilw3-last-parse-tree1979,86065
(defun w3-display-parse-tree (&optional ptree)w3-display-parse-tree1983,86209
(defalias 'w3-display-last-parse-tree 'w3-display-parse-tree)w3-display-last-parse-tree1991,86438
(defalias 'w3-preparse-buffer 'w3-parse-buffer)w3-preparse-buffer1994,86553
(defcustom w3-parse-hooks nilw3-parse-hooks1996,86602
(defun w3-parse-munge-ethiopic-text ()w3-parse-munge-ethiopic-text2003,86787
(defalias 'w3-char-intw3-char-int2011,87108
(defun w3-slow-parse-buffer (&optional buff)w3-slow-parse-buffer2020,87530
(defun w3-parse-buffer (&optional buff)w3-parse-buffer2914,132700

elpa/w3-4.0.49/ssl.el,1255
(defgroup ssl nilssl31,1083
(defcustom ssl-certificate-directory "~/.w3/certs/"ssl-certificate-directory35,1171
(defcustom ssl-rehash-program-name "c_rehash"ssl-rehash-program-name40,1308
(defcustom ssl-view-certificate-program-name "x509"ssl-view-certificate-program-name46,1486
(defcustom ssl-view-certificate-program-arguments '("-text" "-inform" "DER")ssl-view-certificate-program-arguments51,1645
(defcustom ssl-certificate-directory-style 'ssleayssl-certificate-directory-style58,1920
(defcustom ssl-certificate-verification-policy 0ssl-certificate-verification-policy65,2233
(defcustom ssl-program-name "openssl"ssl-program-name73,2578
(defcustom ssl-program-argumentsssl-program-arguments78,2715
(defcustom ssl-view-certificate-program-name ssl-program-namessl-view-certificate-program-name95,3310
(defcustom ssl-view-certificate-program-argumentsssl-view-certificate-program-arguments100,3479
(defun ssl-certificate-information (der)ssl-certificate-information108,3753
(defun ssl-accept-ca-certificate ()ssl-accept-ca-certificate138,4793
(defvar ssl-exec-wrapper nil)ssl-exec-wrapper177,6233
(defun ssl-get-command ()ssl-get-command179,6264
(defun open-ssl-stream (name buffer host service)open-ssl-stream196,6969

elpa/w3-4.0.49/w3-widget.el,1665
(defvar widget-image-keymap (make-sparse-keymap)widget-image-keymap61,2580
(defconst widget-mouse-button1 'mouse1)widget-mouse-button164,2678
(defconst widget-mouse-button2 'mouse2)widget-mouse-button265,2718
(defconst widget-mouse-button3 'mouse3)widget-mouse-button366,2758
(defvar widget-image-inaudible-p nilwidget-image-inaudible-p68,2799
(define-key widget-image-keymap (vector widget-mouse-button1)widget-image-keymap71,2884
(define-key widget-image-keymap (vector widget-mouse-button2)widget-image-keymap73,2976
(define-widget 'image 'defaultimage76,3071
(defun widget-image-convert (widget)widget-image-convert90,3539
(defun widget-image-value-get (widget)widget-image-value-get98,3762
(defun widget-image-create (widget)widget-image-create103,3922
(defun widget-image-value-set (widget value)widget-image-value-set118,4410
(defsubst widget-image-usemap (widget)widget-image-usemap133,4849
(defun widget-image-callback (widget _widget-ignore &optional _event)widget-image-callback141,5126
(defmacro widget-image-create-subwidget (&rest args)widget-image-create-subwidget145,5302
(defun widget-image-value-create (widget)widget-image-value-create155,5571
(defun widget-image-delete (widget)widget-image-delete288,9758
(defun widget-image-button-press (event)widget-image-button-press315,10516
(defun widget-image-usemap-default (usemap)widget-image-usemap-default327,10936
(defun widget-image-summarize (widget)widget-image-summarize336,11178
(defvar widget-image-auto-retrieve 'askwidget-image-auto-retrieve361,12122
(defun widget-image-notify (widget widget-changed &optional event)widget-image-notify368,12397

elpa/w3-4.0.49/contrib/http-tunnel.el,222
(defvar http-tunnel-host "firewallmachine")http-tunnel-host22,797
(defvar http-tunnel-port 80)http-tunnel-port23,841
(defun open-http-tunneled-connection (name buffer host service)open-http-tunneled-connection25,871

elpa/w3-4.0.49/contrib/w3-imenu.el,455
(defvar w3-imenu-index-html-elementsw3-imenu-index-html-elements26,852
(defsubst w3-html-stack () (get-text-property (point) 'html-stack))w3-html-stack35,1089
(defsubst w3-html-stack-top-element (stack)w3-html-stack-top-element37,1158
(defun w3-imenu-goto-next-element (element)w3-imenu-goto-next-element43,1271
(defun w3-imenu-create-index ()w3-imenu-create-index66,2083
(defvar imenu-create-index-function)imenu-create-index-function88,2735

elpa/w3-4.0.49/contrib/clean-cache,0

elpa/w3-4.0.49/w3-imap.el,1147
(defsubst w3-image-poly-nsegs (p)w3-image-poly-nsegs78,2524
(defsubst w3-image-poly-used-segs (p)w3-image-poly-used-segs81,2573
(defsubst w3-image-poly-x-coords (p)w3-image-poly-x-coords84,2626
(defsubst w3-image-poly-y-coords (p)w3-image-poly-y-coords87,2678
(defsubst w3-image-poly-x-coord (p n)w3-image-poly-x-coord90,2730
(defsubst w3-image-poly-y-coord (p n)w3-image-poly-y-coord93,2808
(defun w3-image-poly-alloc (n)w3-image-poly-alloc96,2886
(defun w3-image-poly-assign (p x y)w3-image-poly-assign102,3058
(defun w3-image-ccw (p0 p1 p2)w3-image-ccw109,3413
(defun w3-image-line-intersect (l1 l2)w3-image-line-intersect130,3968
(defun w3-point-in-poly (point &rest pgon)w3-point-in-poly136,4228
(defun w3-point-in-map (point map &optional alt-text)w3-point-in-map177,5532
(defvar w3-allowed-image-typesw3-allowed-image-types202,6333
(defvar w3-image-size-restriction nil)w3-image-size-restriction204,6433
(defmacro w3-image-cached-p (href)w3-image-cached-p206,6473
(defun w3-image-loadable-p (href force)w3-image-loadable-p210,6606
(defmacro w3-image-invalid-glyph-p (glyph)w3-image-invalid-glyph-p223,7222

elpa/w3-4.0.49/w3.el,7660
(defun w3-notify-when-ready (buff)w3-notify-when-ready52,1673
(defun w3-open-local (fname)w3-open-local84,2786
(defun w3-find-file (fname)w3-find-file94,3104
(defun w3-fetch-other-frame (&optional url)w3-fetch-other-frame102,3354
(defun w3-fetch-other-window (&optional url)w3-fetch-other-window115,3752
(defun w3-read-url-with-default ()w3-read-url-with-default121,3958
(defvar w3-explicit-coding-system nilw3-explicit-coding-system144,4578
(defun w3-decode-charset (handle)w3-decode-charset150,4791
(defvar http-header)			; dynamically bound belowhttp-header184,6153
(defun w3-http-equiv-headers (tree)w3-http-equiv-headers186,6203
(defun w3-nasty-disgusting-http-equiv-handling (buffer url)w3-nasty-disgusting-http-equiv-handling205,6786
(defun w3-setup-reload-timer (url must-be-viewing &optional time)w3-setup-reload-timer249,8527
(defun w3-handle-refresh-header (reload)w3-handle-refresh-header271,9270
(defun w3-fetch-redirect-callback (&rest args)w3-fetch-redirect-callback289,9937
(defun w3-fetch-callback (url)w3-fetch-callback312,10621
(defun w3-fetch (&optional url target)w3-fetch392,13622
(defvar w3-history-stack nilw3-history-stack456,15918
(defun w3-history-find-url-internal (url)w3-history-find-url-internal464,16263
(defun w3-history-forward ()w3-history-forward481,16823
(defun w3-history-backward ()w3-history-backward489,17044
(defun w3-history-push (referer url)w3-history-push497,17267
(defalias 'w3-add-urls-to-history 'w3-history-push)w3-add-urls-to-history508,17711
(defalias 'w3-backward-in-history 'w3-history-backward)w3-backward-in-history509,17763
(defalias 'w3-forward-in-history 'w3-history-forward)w3-forward-in-history510,17819
(defun w3-describe-entities ()w3-describe-entities516,18064
(defun w3-document-information (&optional buff)w3-document-information532,18577
(defun w3-insert-formatted-url (p)w3-insert-formatted-url659,22548
(defun w3-first-n-items (l n)w3-first-n-items682,23321
(defun w3-widget-button-press ()w3-widget-button-press693,23533
(defun w3-widget-button-click (e)w3-widget-button-click698,23647
(defun w3-maybe-follow-link-mouse (e)w3-maybe-follow-link-mouse715,24088
(defun w3-maybe-follow-link ()w3-maybe-follow-link725,24356
(defun w3-follow-url-at-point-other-frame (&optional pt)w3-follow-url-at-point-other-frame741,24884
(defun w3-follow-url-at-point (&optional pt)w3-follow-url-at-point748,25122
(defun w3-fix-spaces (string)w3-fix-spaces754,25321
(defun w3-source-document-at-point ()w3-source-document-at-point760,25534
(defun w3-source-document (under)w3-source-document765,25679
(defun w3-mail-document-under-point ()w3-mail-document-under-point786,26391
(defun w3-mail-current-document (under &optional format)w3-mail-current-document791,26542
(defun w3-internal-use-history (hist-item)w3-internal-use-history881,29680
(defun w3-relative-link (url)w3-relative-link911,30689
(defun w3-maybe-eval ()w3-maybe-eval919,30911
(defun w3-use-links ()w3-use-links925,31123
(defun w3-find-this-file ()w3-find-this-file932,31344
(defun w3-insert-this-url (pref-arg)w3-insert-this-url951,32008
(defun w3-in-assoc (elt list)w3-in-assoc962,32414
(defun w3-goto-last-buffer ()w3-goto-last-buffer974,32780
(defun w3-preview-this-buffer ()w3-preview-this-buffer989,33176
(defun w3-source ()w3-source997,33512
(defvar w3-mime-list-for-code-conversionw3-mime-list-for-code-conversion1010,33967
(defvar w3-compression-encodingsw3-compression-encodings1014,34100
(defvar w3-no-conversion-encodingsw3-no-conversion-encodings1019,34259
(defun w3-show-history-list ()w3-show-history-list1024,34465
(defvar ps-spool-buffer-name)ps-spool-buffer-name1029,34614
(defun w3-save-as (&optional type)w3-save-as1031,34645
(defun w3-reconstruct-tag (tagname desc)w3-reconstruct-tag1072,36136
(defun w3-debug-if-found (regexp type desc)w3-debug-if-found1080,36338
(defun w3-log-bad-html (type desc)w3-log-bad-html1086,36504
(defun w3-add-delayed-graphic (widget)w3-add-delayed-graphic1119,37822
(defun w3-load-flavors ()w3-load-flavors1124,37972
(defun w3-submit-bug ()w3-submit-bug1141,38551
(defalias 'w3-bug 'w3-submit-bug)w3-bug1167,39320
(defun w3-nuke-spaces-in-search (x)w3-nuke-spaces-in-search1172,39554
(defun w3-search ()w3-search1181,39813
(defun w3-help ()w3-help1219,41190
(defun w3-version (&optional here)w3-version1225,41299
(defun w3 ()w31240,41746
(defun w3-ff (file)w3-ff1271,42976
(defun w3-default-local-file()w3-default-local-file1281,43334
(defun w3-search-forward (string)w3-search-forward1288,43646
(defun w3-search-again ()w3-search-again1298,43957
(defun w3-find-specific-link (link)w3-find-specific-link1309,44293
(defun w3-force-reload-document ()w3-force-reload-document1318,44532
(defun w3-reload-document (&optional explicit-coding-system)w3-reload-document1324,44723
(defun w3-recall-explicit-coding-system (url)w3-recall-explicit-coding-system1344,45467
(defun w3-find-explicit-coding-system (fname-list tree)w3-find-explicit-coding-system1356,45929
(defun w3-record-explicit-coding-system (url coding-system)w3-record-explicit-coding-system1365,46245
(defun w3-add-explicit-coding-system (fname-list coding-system tree)w3-add-explicit-coding-system1382,46950
(defun w3-write-explicit-encodings (&optional fname)w3-write-explicit-encodings1410,47923
(defun w3-leave-buffer ()w3-leave-buffer1433,48792
(defun w3-quit (&optional mega)w3-quit1444,49075
(defun w3-leave-or-quit-frameset (x quit-p &optional top-down-p)w3-leave-or-quit-frameset1462,49527
(defun w3-view-this-url (&optional no-show)w3-view-this-url1490,50217
(defun w3-load-delayed-images ()w3-load-delayed-images1509,50718
(defun w3-save-this-url ()w3-save-this-url1519,51013
(defun w3-save-url (under-pt)w3-save-url1524,51119
(defun w3-scroll-up (&optional lines)w3-scroll-up1540,51530
(defun w3-mail-document-author ()w3-mail-document-author1565,52303
(defun w3-kill-emacs-func ()w3-kill-emacs-func1597,53451
(defalias 'w3-warnw3-warn1619,54255
(defun w3-map-links (function &optional maparg)w3-map-links1640,54865
(defun w3-refresh-stylesheets ()w3-refresh-stylesheets1659,55584
(defvar w3-loaded-stylesheets nilw3-loaded-stylesheets1667,55749
(defvar w3--package-directory (file-name-directory load-file-name))w3--package-directory1670,55847
(defun w3-find-default-stylesheets ()w3-find-default-stylesheets1672,55916
(defvar w3-widget-global-map nil)w3-widget-global-map1741,58376
(defun w3-do-setup ()w3-do-setup1744,58426
(defun w3-mark-link-as-followed (ext dat)w3-mark-link-as-followed1835,61352
(defun w3-only-links ()w3-only-links1839,61476
(defun w3-download-redirect-callback (&rest args)w3-download-redirect-callback1844,61581
(defun w3-download-callback (fname)w3-download-callback1869,62301
(defun w3-download-url-at-point ()w3-download-url-at-point1878,62605
(defun w3-download-this-url ()w3-download-this-url1883,62722
(defun w3-download-url-wrapper (under-pt)w3-download-url-wrapper1888,62835
(defun w3-download-url (url &optional file-name)w3-download-url1895,63039
(defun w3-follow-link-other-frame (&optional p)w3-follow-link-other-frame1911,63588
(defun w3-follow-link (&optional p)w3-follow-link1924,63972
(defun w3-next-document ()w3-next-document1939,64365
(defun w3-prev-document ()w3-prev-document1956,64943
(defun w3-widget-forward (arg)w3-widget-forward1973,65536
(defun w3-widget-backward (arg)w3-widget-backward1979,65705
(defun w3-complete-link ()w3-complete-link1985,65886
(defun w3-display-errors ()w3-display-errors2043,67852
(defun w3-mode ()w3-mode2074,68958

elpa/w3-4.0.49/w3-style.el,142
(defun w3-handle-style (&optional plist)w3-handle-style41,1249
(defun w3-display-stylesheet (&optional sheet)w3-display-stylesheet61,1973

elpa/w3-4.0.49/w3-emacs.el,483
(defun w3-setup-version-specifics ()w3-setup-version-specifics33,1068
(defvar w3-emacs-window-width nil)w3-emacs-window-width40,1274
(defun w3-window-size-change-function (frame)w3-window-size-change-function43,1426
(defvar w3-face-index)w3-face-index53,1789
(defvar w3-display-background-properties)w3-display-background-properties54,1812
(defun w3-mode-version-specifics ()w3-mode-version-specifics56,1855
(defun w3-tooltip-get-tips (event)w3-tooltip-get-tips72,2516

elpa/w3-4.0.49/w3-xemac.el,255
(defun w3-mouse-handler (e)w3-mouse-handler37,1296
(defun w3-setup-version-specifics ()w3-setup-version-specifics52,1892
(defun w3-mode-motion-hook (e)w3-mode-motion-hook92,3365
(defun w3-mode-version-specifics ()w3-mode-version-specifics109,3936

elpa/w3-4.0.49/css.el,2730
(defconst css-propertiescss-properties53,1994
(defconst css-weightscss-weights181,7307
(defvar css-syntax-tablecss-syntax-table194,7500
(defvar css-scratch-val)css-scratch-val203,7789
(defvar css-scratch-id)css-scratch-id204,7814
(defvar css-scratch-class)css-scratch-class205,7838
(defvar css-scratch-possibles)css-scratch-possibles206,7865
(defvar css-scratch-current)css-scratch-current207,7896
(defvar css-scratch-classes)css-scratch-classes208,7925
(defvar css-scratch-class-match)css-scratch-class-match209,7954
(defvar css-scratch-current-rule)css-scratch-current-rule210,7987
(defvar css-scratch-current-value)css-scratch-current-value211,8021
(defsubst css-replace-regexp (regexp to-string)css-replace-regexp213,8057
(defun css-contextual-match (rule stack)css-contextual-match218,8212
(defsubst css-get-internal (tag args sheet element-stack)css-get-internal250,8998
(defsubst css-get (tag args &optional sheet element-stack)css-get288,10449
(defun css-ancestor-get (info ancestors sheet)css-ancestor-get306,11075
(defun css-split-selector (tag)css-split-selector315,11376
(defun css-applies-to (st nd)css-applies-to346,12355
(defun css-split-font-shorthand (font)css-split-font-shorthand362,12796
(defun css-expand-length (spec &optional height)css-expand-length390,13912
(defsubst css-unhex-char (x)css-unhex-char421,15180
(defsubst css-pow (x n)css-pow428,15297
(defun css-unhex (x)css-unhex431,15352
(defmacro css-symbol-list-as-regexp (&rest keys)css-symbol-list-as-regexp441,15574
(defun css-expand-color (color)css-expand-color448,15733
(defvar css--url)css--url504,17869
(defvar css--purl)css--purl505,17887
(defun css-expand-value (type value)css-expand-value507,17907
(defun css-parse-args (st &optional nd)css-parse-args649,22952
(defun css-handle-media-directive (data active)css-handle-media-directive709,24723
(defvar url-mime-accept-string)url-mime-accept-string722,25149
(defvar url-current-object)url-current-object723,25181
(defun css-handle-import (data)css-handle-import725,25210
(defun css-clean-buffer ()css-clean-buffer741,25881
(defalias 'css-color-light-pcss-color-light-p758,26438
(defun css-active-device-types (&optional device)css-active-device-types800,28162
(defmacro css-rule-specificity-internal (rule)css-rule-specificity-internal843,29617
(defsubst css-specificity (rule)css-specificity853,29833
(defun css-copy-stylesheet (sheet)css-copy-stylesheet868,30300
(defsubst css-store-rule (attrs applies-to sheet)css-store-rule876,30498
(defun css-parse (url &optional string inherit)css-parse901,31254
(defun css-rule-name (rule)css-rule-name1010,35065
(defun css-display (sheet)css-display1027,35514

elpa/w3-4.0.49/w3-emulate.el,9928
(define-key w3-netscape-emulation-minor-mode-map "\M-s" 'w3-save-as)w3-netscape-emulation-minor-mode-map62,1920
(define-key w3-netscape-emulation-minor-mode-map "\M-m" 'w3-mailto)w3-netscape-emulation-minor-mode-map63,1989
(define-key w3-netscape-emulation-minor-mode-map "\M-n" 'make-frame)w3-netscape-emulation-minor-mode-map64,2057
(define-key w3-netscape-emulation-minor-mode-map "\M-l" 'w3-fetch)w3-netscape-emulation-minor-mode-map65,2126
(define-key w3-netscape-emulation-minor-mode-map "\M-o" 'w3-open-local)w3-netscape-emulation-minor-mode-map66,2193
(define-key w3-netscape-emulation-minor-mode-map "\M-p" 'w3-print-this-url)w3-netscape-emulation-minor-mode-map67,2265
(define-key w3-netscape-emulation-minor-mode-map "\M-q" 'w3-quit)w3-netscape-emulation-minor-mode-map68,2341
(define-key w3-netscape-emulation-minor-mode-map "\M-f" 'w3-search-forward)w3-netscape-emulation-minor-mode-map69,2407
(define-key w3-netscape-emulation-minor-mode-map "\M-g" 'w3-search-again)w3-netscape-emulation-minor-mode-map70,2483
(define-key w3-netscape-emulation-minor-mode-map "\M-r" 'w3-reload-document)w3-netscape-emulation-minor-mode-map71,2557
(define-key w3-netscape-emulation-minor-mode-map "\M-i" 'w3-load-delayed-images)w3-netscape-emulation-minor-mode-map72,2634
(define-key w3-netscape-emulation-minor-mode-map "\M-a" 'w3-hotlist-add-document)w3-netscape-emulation-minor-mode-map73,2715
(define-key w3-netscape-emulation-minor-mode-map "\M-b" 'w3-hotlist-view)w3-netscape-emulation-minor-mode-map74,2797
(define-key w3-netscape-emulation-minor-mode-map "\M-h" 'w3-show-history-list)w3-netscape-emulation-minor-mode-map75,2871
(define-key w3-netscape-emulation-minor-mode-map [up]w3-netscape-emulation-minor-mode-map77,2951
(define-key w3-netscape-emulation-minor-mode-map [down]w3-netscape-emulation-minor-mode-map79,3061
(define-key w3-netscape-emulation-minor-mode-map [right] 'scroll-left)w3-netscape-emulation-minor-mode-map81,3171
(define-key w3-netscape-emulation-minor-mode-map [left] 'scroll-right)w3-netscape-emulation-minor-mode-map82,3242
(define-key w3-netscape-emulation-minor-mode-map [(meta left)]w3-netscape-emulation-minor-mode-map83,3313
(define-key w3-netscape-emulation-minor-mode-map [(meta right)]w3-netscape-emulation-minor-mode-map85,3400
(defun turn-on-netscape-emulation ()turn-on-netscape-emulation88,3488
(defun w3-netscape-emulation-minor-mode (&optional arg)w3-netscape-emulation-minor-mode93,3617
(defsubst w3-skip-word ()w3-skip-word109,4098
(defun turn-on-lynx-emulation ()turn-on-lynx-emulation120,4461
(defun w3-lynx-emulation-minor-mode (&optional arg)w3-lynx-emulation-minor-mode125,4586
(define-key w3-lynx-emulation-minor-mode-map [up]   'widget-backward)w3-lynx-emulation-minor-mode-map144,5205
(define-key w3-lynx-emulation-minor-mode-map [down] 'widget-forward)w3-lynx-emulation-minor-mode-map145,5275
(define-key w3-lynx-emulation-minor-mode-map [right] 'widget-button-press)w3-lynx-emulation-minor-mode-map146,5344
(define-key w3-lynx-emulation-minor-mode-map [left] 'w3-history-backward)w3-lynx-emulation-minor-mode-map147,5419
(define-key w3-lynx-emulation-minor-mode-map "+"    'w3-scroll-up)w3-lynx-emulation-minor-mode-map150,5507
(define-key w3-lynx-emulation-minor-mode-map "-"    'scroll-down)w3-lynx-emulation-minor-mode-map151,5574
(define-key w3-lynx-emulation-minor-mode-map "b"    'scroll-down)w3-lynx-emulation-minor-mode-map152,5640
(define-key w3-lynx-emulation-minor-mode-map "\C-a" 'w3-start-of-document)w3-lynx-emulation-minor-mode-map153,5706
(define-key w3-lynx-emulation-minor-mode-map "\C-e" 'w3-end-of-document)w3-lynx-emulation-minor-mode-map154,5781
(define-key w3-lynx-emulation-minor-mode-map "\C-f" 'scroll-up)w3-lynx-emulation-minor-mode-map155,5854
(define-key w3-lynx-emulation-minor-mode-map "\C-b" 'scroll-down)w3-lynx-emulation-minor-mode-map156,5918
(define-key w3-lynx-emulation-minor-mode-map "\C-n" (lambda () (interactive) (scroll-up 2)))w3-lynx-emulation-minor-mode-map157,5984
(define-key w3-lynx-emulation-minor-mode-map "\C-p" (lambda () (interactive) (scroll-down 2)))w3-lynx-emulation-minor-mode-map158,6077
(define-key w3-lynx-emulation-minor-mode-map ")"    'ignore) ; forward halfw3-lynx-emulation-minor-mode-map159,6172
(define-key w3-lynx-emulation-minor-mode-map "("    'ignore) ; back halfw3-lynx-emulation-minor-mode-map160,6248
(define-key w3-lynx-emulation-minor-mode-map "#"    'w3-toggle-toolbar)w3-lynx-emulation-minor-mode-map161,6321
(define-key w3-lynx-emulation-minor-mode-map "?"   'w3-help)w3-lynx-emulation-minor-mode-map166,6452
(define-key w3-lynx-emulation-minor-mode-map "a"   'w3-hotlist-add-document)w3-lynx-emulation-minor-mode-map167,6513
(define-key w3-lynx-emulation-minor-mode-map "c"   'w3-mail-document-author)w3-lynx-emulation-minor-mode-map168,6590
(define-key w3-lynx-emulation-minor-mode-map "d"   'w3-download-url) w3-lynx-emulation-minor-mode-map169,6667
(define-key w3-lynx-emulation-minor-mode-map "e"   'ignore) ; edit currentw3-lynx-emulation-minor-mode-map170,6737
(define-key w3-lynx-emulation-minor-mode-map "f"   'dired)w3-lynx-emulation-minor-mode-map171,6812
(define-key w3-lynx-emulation-minor-mode-map "g"   'w3-fetch)w3-lynx-emulation-minor-mode-map172,6871
(define-key w3-lynx-emulation-minor-mode-map "h"   'w3-help)w3-lynx-emulation-minor-mode-map173,6933
(define-key w3-lynx-emulation-minor-mode-map "i"   'ignore)w3-lynx-emulation-minor-mode-map174,6994
(define-key w3-lynx-emulation-minor-mode-map "j"   'w3-use-hotlist)w3-lynx-emulation-minor-mode-map175,7054
(define-key w3-lynx-emulation-minor-mode-map "k"   'describe-mode)w3-lynx-emulation-minor-mode-map176,7122
(define-key w3-lynx-emulation-minor-mode-map "l"   'w3-complete-link)w3-lynx-emulation-minor-mode-map177,7189
(define-key w3-lynx-emulation-minor-mode-map "m"   'w3)w3-lynx-emulation-minor-mode-map178,7259
(define-key w3-lynx-emulation-minor-mode-map "n"   'w3-search-again)w3-lynx-emulation-minor-mode-map179,7315
(define-key w3-lynx-emulation-minor-mode-map "o"   'w3-preferences-edit)w3-lynx-emulation-minor-mode-map180,7384
(define-key w3-lynx-emulation-minor-mode-map "p"   'w3-print-this-url)w3-lynx-emulation-minor-mode-map181,7457
(define-key w3-lynx-emulation-minor-mode-map "q"   'w3-quit)w3-lynx-emulation-minor-mode-map182,7528
(define-key w3-lynx-emulation-minor-mode-map "r"   'w3-hotlist-delete)w3-lynx-emulation-minor-mode-map183,7589
(define-key w3-lynx-emulation-minor-mode-map "t"   'ignore) ; tagw3-lynx-emulation-minor-mode-map184,7660
(define-key w3-lynx-emulation-minor-mode-map "u"   'w3-history-backward)w3-lynx-emulation-minor-mode-map185,7726
(define-key w3-lynx-emulation-minor-mode-map "/"   'w3-search-forward)w3-lynx-emulation-minor-mode-map186,7799
(define-key w3-lynx-emulation-minor-mode-map "v"   'w3-hotlist-view)w3-lynx-emulation-minor-mode-map187,7870
(define-key w3-lynx-emulation-minor-mode-map "V"   'w3-hotlist-view)w3-lynx-emulation-minor-mode-map188,7939
(define-key w3-lynx-emulation-minor-mode-map "x"   'widget-button-press)w3-lynx-emulation-minor-mode-map189,8008
(define-key w3-lynx-emulation-minor-mode-map "z"   'keyboard-quit)w3-lynx-emulation-minor-mode-map190,8081
(define-key w3-lynx-emulation-minor-mode-map "="   'w3-document-information)w3-lynx-emulation-minor-mode-map191,8148
(define-key w3-lynx-emulation-minor-mode-map "\\"  'w3-source-document)w3-lynx-emulation-minor-mode-map192,8225
(define-key w3-lynx-emulation-minor-mode-map "!"   'shell)w3-lynx-emulation-minor-mode-map193,8297
(define-key w3-lynx-emulation-minor-mode-map "'"   'ignore) ; toggle commentw3-lynx-emulation-minor-mode-map194,8356
(define-key w3-lynx-emulation-minor-mode-map "`"   'ignore) ; toggle commentw3-lynx-emulation-minor-mode-map195,8433
(define-key w3-lynx-emulation-minor-mode-map "*"   'ignore) ; toggle image_linksw3-lynx-emulation-minor-mode-map196,8510
(define-key w3-lynx-emulation-minor-mode-map "@"   'ignore) ; toggle raw 8-bitw3-lynx-emulation-minor-mode-map197,8591
(define-key w3-lynx-emulation-minor-mode-map "["   'ignore) ; pseudo-inlinesw3-lynx-emulation-minor-mode-map198,8670
(define-key w3-lynx-emulation-minor-mode-map "]"   'ignore) ; send headw3-lynx-emulation-minor-mode-map199,8747
(define-key w3-lynx-emulation-minor-mode-map "\""  'ignore) ; toggle quotingw3-lynx-emulation-minor-mode-map200,8819
(define-key w3-lynx-emulation-minor-mode-map "\C-r" 'w3-reload-document)w3-lynx-emulation-minor-mode-map201,8896
(define-key w3-lynx-emulation-minor-mode-map "\C-w" 'w3-refresh-buffer)w3-lynx-emulation-minor-mode-map202,8969
(define-key w3-lynx-emulation-minor-mode-map "\C-u" 'ignore) ; erase inputw3-lynx-emulation-minor-mode-map203,9041
(define-key w3-lynx-emulation-minor-mode-map "\C-g" 'keyboard-quit)w3-lynx-emulation-minor-mode-map204,9116
(define-key w3-lynx-emulation-minor-mode-map "\C-t" 'ignore) ; toggle tracew3-lynx-emulation-minor-mode-map205,9184
(define-key w3-lynx-emulation-minor-mode-map "\C-k" 'ignore) ; cookie jarw3-lynx-emulation-minor-mode-map206,9260
(defun w3-masquerade-stub (arg app version)w3-masquerade-stub210,9424
(defun w3-lynx-masquerade-mode (&optional arg)w3-lynx-masquerade-mode219,9714
(defun turn-on-lynx-masquerade-mode ()turn-on-lynx-masquerade-mode223,9823
(defun turn-off-lynx-masquerade-mode ()turn-off-lynx-masquerade-mode227,9910
(defun w3-netscape-masquerade-mode (&optional arg)w3-netscape-masquerade-mode231,9998
(defun turn-on-netscape-masquerade-mode ()turn-on-netscape-masquerade-mode235,10114
(defun turn-off-netscape-masquerade-mode ()turn-off-netscape-masquerade-mode239,10209
(defun w3-ie-masquerade-mode (&optional arg)w3-ie-masquerade-mode243,10305
(defun turn-on-ie-masquerade-mode ()turn-on-ie-masquerade-mode247,10426
(defun turn-off-ie-masquerade-mode ()turn-off-ie-masquerade-mode251,10509

elpa/w3-4.0.49/w3-hot.el,1481
(defvar w3-html-bookmarks nil)w3-html-bookmarks42,1714
(defun w3-read-html-bookmarks (fname)w3-read-html-bookmarks45,1761
(defvar w3--cur-stack)w3--cur-stack60,2294
(defsubst w3-hot-push-new-menu ()w3-hot-push-new-menu62,2318
(defsubst w3-hot-push-new-item (title href)w3-hot-push-new-item71,2641
(defvar w3--cur-title)w3--cur-title74,2757
(defsubst w3-hot-finish-submenu ()w3-hot-finish-submenu76,2781
(defun w3-grok-html-bookmarks-internal (tree)w3-grok-html-bookmarks-internal88,3147
(defun w3-grok-html-bookmarks (chunk)w3-grok-html-bookmarks118,4163
(defvar w3--alist)w3--alist126,4324
(defun w3-hot-convert-to-alist-internal (l &optional prefix)w3-hot-convert-to-alist-internal128,4344
(defun w3-hot-convert-to-alist (l)w3-hot-convert-to-alist144,4879
(defun w3-delete-from-alist (x alist)w3-delete-from-alist149,5004
(defun w3-hotlist-parse-old-mosaic-format ()w3-hotlist-parse-old-mosaic-format154,5172
(defun w3-parse-hotlist (&optional fname)w3-parse-hotlist173,5784
(defun w3-use-hotlist ()w3-use-hotlist197,6709
(defun w3-hotlist-add-document-at-point (pref-arg)w3-hotlist-add-document-at-point214,7399
(defun w3-hotlist-add-document (_pref-arg &optional _the-title _the-url)w3-hotlist-add-document228,7910
(defun w3-hotlist-delete ()w3-hotlist-delete234,8113
(defun w3-hotlist-refresh ()w3-hotlist-refresh240,8275
(defun w3-hotlist-apropos (regexp)w3-hotlist-apropos247,8422
(defun w3-hotlist-view ()w3-hotlist-view254,8674

elpa/w3-4.0.49/w3-latex.el,2029
(defvar w3-latex-current-url nil "What URL we are formatting")w3-latex-current-url50,1667
(defvar w3-latex-verbatim nil "Whether we are in a {verbatim} block or not")w3-latex-verbatim51,1730
(defvar w3-latex-links-list nil "List of links for endnote usage")w3-latex-links-list52,1807
(defvar w3-latex-entitiesw3-latex-entities54,1875
(defvar w3-latex-use-maketitle t)w3-latex-use-maketitle153,4137
(defvar w3-latex-print-links tw3-latex-print-links154,4171
(defvar w3-latex-use-latex2e t)w3-latex-use-latex2e156,4237
(defvar w3-latex-docstyle "{article}")w3-latex-docstyle157,4269
(defvar w3-latex-packages nil)w3-latex-packages158,4308
(defun w3-latex-replace-entities (str)w3-latex-replace-entities160,4340
(defun w3-latex-insert-string (str)w3-latex-insert-string176,4938
(defun w3-latex-ignore (_tree)w3-latex-ignore199,5799
(defun w3-latex-contents (tree)w3-latex-contents203,5879
(defun w3-latex-html (tree)w3-latex-html210,6117
(defun w3-latex-title (tree)w3-latex-title224,6624
(defun w3-latex-heading (tree)w3-latex-heading233,6880
(defun w3-latex-bold (tree)w3-latex-bold256,7786
(defun w3-latex-italic (tree)w3-latex-italic260,7877
(defun w3-latex-typewriter (tree)w3-latex-typewriter264,7970
(defun w3-latex-list (tree)w3-latex-list269,8068
(defun w3-latex-list-item (tree)w3-latex-list-item278,8356
(defun w3-latex-center (tree)w3-latex-center290,8649
(defun w3-latex-rule (_tree)w3-latex-rule295,8764
(defun w3-latex-para (tree)w3-latex-para299,8901
(defun w3-latex-quote (tree)w3-latex-quote314,9377
(defun w3-latex-break (_tree)w3-latex-break319,9493
(defun w3-latex-endnotes ()w3-latex-endnotes323,9573
(defun w3-latex-href (tree)w3-latex-href334,9960
(defun w3-latex-preformatted (tree)w3-latex-preformatted367,11140
(defun w3-latex-xmp (tree)w3-latex-xmp374,11316
(defun w3-latex-subtree (tree)w3-latex-subtree418,12640
(defun w3-parse-tree-to-latex (tree &optional url)w3-parse-tree-to-latex437,13169
(defun w3-show-dvi ()w3-show-dvi457,13795

elpa/w3-4.0.49/w3-fast-parse.el,506
(defvar w3-last-parse-tree)             ;From w3-parse.el.w3-last-parse-tree27,949
(defvar w3-fast-parse-tidy-program nil)w3-fast-parse-tidy-program29,1009
(defun w3-fast-parse-find-program (program var)w3-fast-parse-find-program31,1050
(defun w3-fast-parse-find-tidy-program ()w3-fast-parse-find-tidy-program40,1290
(defvar base-object)base-object43,1400
(defun w3-fast-parse-cleanup (tree)w3-fast-parse-cleanup45,1422
(defun w3-fast-parse-buffer (&optional buff)w3-fast-parse-buffer76,2354

elpa/w3-4.0.49/devices.el,0

elpa/w3-4.0.49/w3-props.el,359
(defsubst w3-fillin-text-property (start end setprop markprop valuew3-fillin-text-property41,1629
(defsubst w3-props-unique (list)w3-props-unique54,2352
(defsubst prepend-text-property (start end prop value &optional object)prepend-text-property65,2854
(defsubst append-text-property (start end prop value &optional object)append-text-property80,3585

elpa/w3-4.0.49/w3-toolbar.el,2371
(defvar w3-toolbar-icon-directory nilw3-toolbar-icon-directory40,1195
(defvar w3-toolbar-back-icon (if (featurep 'tool-bar)w3-toolbar-back-icon43,1343
(defvar w3-toolbar-forw-icon (if (featurep 'tool-bar)w3-toolbar-forw-icon46,1443
(defvar w3-toolbar-home-icon (if (featurep 'tool-bar)w3-toolbar-home-icon49,1547
(defvar w3-toolbar-reld-icon (if (featurep 'tool-bar)w3-toolbar-reld-icon52,1641
(defvar w3-toolbar-imag-icon (if (featurep 'tool-bar)w3-toolbar-imag-icon55,1740
(defvar w3-toolbar-open-icon (if (featurep 'tool-bar)w3-toolbar-open-icon58,1838
(defvar w3-toolbar-print-icon (if (featurep 'tool-bar)w3-toolbar-print-icon61,1936
(defvar w3-toolbar-find-icon (if (featurep 'tool-bar)w3-toolbar-find-icon64,2037
(defvar w3-toolbar-stop-icon (if (featurep 'tool-bar)w3-toolbar-stop-icon67,2133
(defvar w3-toolbar-help-icon (if (featurep 'tool-bar)w3-toolbar-help-icon70,2229
(defvar w3-toolbar-hotl-icon (if (featurep 'tool-bar)w3-toolbar-hotl-icon73,2323
(defvar w3-toolbar-file-icon (if (featurep 'tool-bar)w3-toolbar-file-icon76,2423
(defvar w3-toolbar-printer-icon (if (featurep 'tool-bar)w3-toolbar-printer-icon79,2520
(defvar w3-link-toolbar-orientation 'bottomw3-link-toolbar-orientation83,2623
(defvar w3-toolbar-orientation 'defaultw3-toolbar-orientation93,3033
(defvar w3-toolbar-type 'bothw3-toolbar-type103,3424
(defvar w3-toolbarw3-toolbar113,3757
(defun w3-toolbar-make-captioned-buttons ()w3-toolbar-make-captioned-buttons130,4622
(defun w3-make-text-toolbar-button (text)w3-make-text-toolbar-button148,5367
(defun w3-toolbar-make-text-buttons ()w3-toolbar-make-text-buttons156,5638
(defun w3-toolbar-make-picture-buttons ()w3-toolbar-make-picture-buttons168,6353
(defun w3-toolbar-make-buttons ()w3-toolbar-make-buttons188,7057
(defun w3-link-is-defined (rel &optional rev)w3-link-is-defined213,7853
(defvar w3-link-toolbarw3-link-toolbar221,8165
(defun w3-toolbar-from-orientation (orientation)w3-toolbar-from-orientation265,9473
(defun w3-toolbar-active ()w3-toolbar-active319,11415
(defun w3-toggle-toolbar ()w3-toggle-toolbar336,12057
(defun w3-show-info-node ()w3-show-info-node357,12905
(defun w3-mouse-print-this-url (&optional e)w3-mouse-print-this-url361,12985
(defvar w3-toolbar-mapw3-toolbar-map373,13402
(defun w3-add-toolbar-to-buffer ()w3-add-toolbar-to-buffer399,14302

elpa/w3-4.0.49/w3-display.el,7724
(defvar w3-last-parse-tree)w3-last-parse-tree30,1051
(defvar w3-cookie-cache nil)w3-cookie-cache61,1970
(defmacro w3-d-s-var-def (var)w3-d-s-var-def63,2000
(defmacro w3-get-attribute (attr args)w3-get-attribute98,3271
(defmacro w3-get-face-info (info &optional other)w3-get-face-info101,3347
(defmacro w3-pop-face-info (info)w3-pop-face-info110,3776
(defmacro w3-get-all-face-info ()w3-get-all-face-info114,3880
(defmacro w3-pop-all-face-info ()w3-pop-all-face-info138,4952
(defvar w3-display-same-buffer nil)w3-display-same-buffer150,5329
(defvar w3-face-cache nil  "Cache for `w3-face-for-element'.")w3-face-cache151,5365
(defvar w3-face-index 0)w3-face-index152,5428
(defvar w3-image-widgets-waiting nil)w3-image-widgets-waiting153,5453
(defconst w3-fill-prefixes-vectorw3-fill-prefixes-vector169,5905
(defvar w3-pause-keystroke nil)w3-pause-keystroke177,6123
(defvar w3--cur-viewing-pos)w3--cur-viewing-pos179,6156
(defsubst w3-pause ()w3-pause181,6186
(defmacro w3-get-pad-string (len)w3-get-pad-string204,6852
(defsubst w3-set-fill-prefix-length (len)w3-set-fill-prefix-length212,7022
(defun w3-decimal-to-roman (n)w3-decimal-to-roman220,7282
(defun w3-decimal-to-alpha (n)w3-decimal-to-alpha249,8025
(defsubst w3-get-style-info (info &optional default)w3-get-style-info257,8300
(defun w3-decode-area-coords (str)w3-decode-area-coords260,8419
(defun w3-normalize-color (color)w3-normalize-color272,8917
(defsubst w3-voice-for-element ()w3-voice-for-element288,9412
(defun w3-display-colors-too-close-p (foreground background)w3-display-colors-too-close-p312,10364
(defun w3-get-default-color (backgroundp)w3-get-default-color320,10692
(defun w3-display-background-useless-p (color)w3-display-background-useless-p333,11187
(defun w3-display-foreground-useless-p (color)w3-display-foreground-useless-p339,11450
(defun w3-display-infer-contrasting-color (color)w3-display-infer-contrasting-color345,11711
(defalias 'w3-make-facew3-make-face373,12559
(defsubst w3-face-for-element (node)w3-face-for-element383,12862
(defun w3-normalize-spaces (string)w3-normalize-spaces424,14431
(defsubst w3-display-line-break (n)w3-display-line-break444,15055
(defsubst w3-munge-line-breaks-p ()w3-munge-line-breaks-p466,15871
(defvar w3-display-nil-face (w3-make-face nil "Stub face... don't ask." t))w3-display-nil-face469,15955
(defvar w3-scratch-start-point nil)w3-scratch-start-point471,16032
(defsubst w3-handle-string-content (string)w3-handle-string-content473,16069
(defun w3-display-get-cookie (args)w3-display-get-cookie506,17150
(defun w3-widget-buffer (widget)w3-widget-buffer526,18068
(defun w3-widget-echo (widget &rest _ignore)w3-widget-echo535,18460
(defun w3-follow-hyperlink (widget &rest _ignore)w3-follow-hyperlink560,19342
(defun w3-balloon-help-callback (object &optional _event)w3-balloon-help-callback580,19954
(defun w3-parse-link (args)w3-parse-link743,24688
(defun w3-maybe-start-image-download (widget)w3-maybe-start-image-download784,25925
(defun w3-maybe-start-background-image-download (src face)w3-maybe-start-background-image-download825,27445
(defun w3-finalize-image-download-skip-redirects (&rest args)w3-finalize-image-download-skip-redirects861,28716
(defun w3-finalize-image-download (url buffer &optional widget face)w3-finalize-image-download892,29760
(defcustom w3-min-img-size 15w3-min-img-size959,32097
(defcustom w3-dummy-img-rew3-dummy-img-re966,32299
(defcustom w3-dummy-img-alt-repl "*"w3-dummy-img-alt-repl972,32523
(defvar w3--height)w3--height977,32640
(defvar w3--width)w3--width978,32660
(defvar w3--args)w3--args979,32679
(defun w3-default-image-alt-func (fname)w3-default-image-alt-func981,32698
(defsubst w3-image-alt (src)w3-image-alt991,33102
(defvar w3--hyperimage-info)w3--hyperimage-info1007,33828
(defvar w3--hyperlink-info)w3--hyperlink-info1008,33857
(defvar w3-display-current-row nil)w3-display-current-row1010,33886
(defvar w3-display-current-col nil)w3-display-current-col1011,33922
(defsubst w3-handle-image (args)w3-handle-image1013,33959
(defun w3-make-char (oct)w3-make-char1073,36615
(defvar w3-table-ascii-border-charsw3-table-ascii-border-chars1079,36799
(defvar w3-table-glyph-border-charsw3-table-glyph-border-chars1084,37021
(defvar w3-table-graphic-border-charsw3-table-graphic-border-chars1089,37232
(defvar w3-table-border-chars w3-table-ascii-border-charsw3-table-border-chars1110,37667
(defsubst w3-table-lookup-char (l u r b &optional char)w3-table-lookup-char1117,37920
(defvar w3-terminal-properties nil)w3-terminal-properties1123,38108
(defsubst w3-insert-terminal-char (character &optional count inherit)w3-insert-terminal-char1125,38145
(defsubst w3-horizontal-rule-char ()w3-horizontal-rule-char1139,38560
(defun w3-setup-terminal-chars ()w3-setup-terminal-chars1142,38660
(defun w3-unsetup-terminal-characters nilw3-unsetup-terminal-characters1199,40793
(defun w3-excise-terminal-characters (buffs)w3-excise-terminal-characters1205,40994
(defvar w3-display-table-cut-words-p nilw3-display-table-cut-words-p1232,41968
(defvar w3-display-table-force-borders (featurep 'emacspeak)w3-display-table-force-borders1235,42073
(defvar w3-display-current-cell-offset 0)w3-display-current-cell-offset1239,42233
(defun w3-display-table-cut ()w3-display-table-cut1241,42276
(defun w3-display-fix-widgets ()w3-display-fix-widgets1257,42693
(defun w3-size-of-tree (tree minmax)w3-size-of-tree1282,43532
(defun w3-display-table-dimensions (node)w3-display-table-dimensions1326,44945
(defun w3-display-table (node)w3-display-table1512,52277
(defun w3-display-create-unique-id ()w3-display-create-unique-id1898,66326
(defun w3-display-chop-into-table (node cols)w3-display-chop-into-table1912,66758
(defun w3-fix-color (color)w3-fix-color1931,67339
(defun w3-display-normalize-form-info (args)w3-display-normalize-form-info1937,67519
(defvar w3-resurrect-images-offset nilw3-resurrect-images-offset1969,68782
(defun w3-resurrect-images ()w3-resurrect-images1973,68961
(defvar w3-display-hackmap nil "Keymap used for hyperlink widgets")w3-display-hackmap2021,70840
(defun w3-resurrect-hyperlinks ()w3-resurrect-hyperlinks2023,70911
(defun w3-display-convert-arglist (args)w3-display-convert-arglist2047,71764
(defvar w3-auto-run-java nilw3-auto-run-java2056,72006
(defun w3-display-handle-java (node)w3-display-handle-java2059,72116
(defvar filladapt-mode)filladapt-mode2072,72584
(defvar voice-lock-mode)voice-lock-mode2073,72608
(defvar widget-push-button-gui)widget-push-button-gui2074,72633
(defun w3-display-node (node &optional nofaces)w3-display-node2076,72666
(defun w3-draw-tree (tree)w3-draw-tree2688,92491
(defun time-display (&optional tree)time-display2700,92836
(defun w3-fixup-eol-faces ()w3-fixup-eol-faces2709,93076
(defsubst w3-finish-drawing ()w3-finish-drawing2719,93476
(defun w3-region (st nd)w3-region2740,94174
(defun w3-refresh-buffer ()w3-refresh-buffer2758,94734
(defun w3-prepare-tree (parse)w3-prepare-tree2773,95126
(defun w3-prepare-buffer ()w3-prepare-buffer2782,95327
(defun w3-maybe-fetch-frames ()w3-maybe-fetch-frames2800,95915
(defun w3-buffer-visiting (url)w3-buffer-visiting2808,96122
(defun w3-frames (&optional new-frame)w3-frames2824,96610
(defun w3-frameset-dimensions-p (str)w3-frameset-dimensions-p2855,97616
(defun w3-display-frameset (frameset-structure)w3-display-frameset2858,97729
(defun w3-compute-target-window-distances ()w3-compute-target-window-distances2933,100596
(defun w3-decode-frameset-dimensions (dims available-dimension min-dim pixel-dim)w3-decode-frameset-dimensions2949,101065

elpa/w3-4.0.49/w3-autoloads.el,0

elpa/w3-4.0.49/w3-hotindex.el,1002
(defun member-nocase (elt list)member-nocase44,1502
(defvar w3-hotindex ()w3-hotindex56,1952
(defvar w3-hotindex-file (concat w3-configuration-directory "hotindex")w3-hotindex-file62,2193
(defvar w3-hotindex-key-list ()w3-hotindex-key-list65,2309
(defun w3-hotindex-build-completion-key-list (key-list)w3-hotindex-build-completion-key-list68,2382
(defun w3-hotindex-build-key-list (hotindex)w3-hotindex-build-key-list73,2549
(defun w3-hotindex-add-key (name keyword)w3-hotindex-add-key88,3026
(defun w3-hotindex-rm-key (entry keyword)w3-hotindex-rm-key119,4270
(defun w3-hotindex-rename-entry (old new)w3-hotindex-rename-entry141,5078
(defun w3-hotindex-delete-entry (title)w3-hotindex-delete-entry151,5415
(defun w3-hotindex-query (key)w3-hotindex-query163,5866
(defvar print-readably)print-readably184,6610
(defun w3-hotindex-save (filename)w3-hotindex-save186,6635
(defun w3-hotindex-check ()w3-hotindex-check211,7462
(defun w3-hotindex-load ()w3-hotindex-load223,7888

elpa/w3-4.0.49/tests/url-test.el,63
(defun url-parsing-test-suite ()url-parsing-test-suite29,941

elpa/w3-4.0.49/tests/url-expansion.html,86
<a name="s" href="#s">#s</a>         =  (current document)#s        [R,2,4]s60,1760

elpa/w3-4.0.49/tests/borderless-tables.html,0

elpa/w3-4.0.49/images.el,698
(defvar image-temp-stack nil "Do no touch - internal storage.")image-temp-stack26,964
(defvar image-converters nil "Storage for the image converters.")image-converters27,1028
(defvar image-native-formatsimage-native-formats28,1094
(defun image-register-converter (from to converter)image-register-converter39,1431
(defun image-unregister-converter (from to)image-unregister-converter59,2389
(defun image-converter-registered-p (from to)image-converter-registered-p71,2708
(defun image-converter-chain (from to)image-converter-chain74,2819
(defun image-normalize (format data)image-normalize105,3781
(defun image-register-netpbm-utilities ()image-register-netpbm-utilities161,5599

elpa/with-editor-20180414.757/with-editor.el,4480
(defvar eshell-preoutput-filter-functions)eshell-preoutput-filter-functions100,4073
(defgroup with-editor nilwith-editor104,4130
(defun with-editor-locate-emacsclient ()with-editor-locate-emacsclient109,4230
(defun with-editor-locate-emacsclient-1 (path depth)with-editor-locate-emacsclient-1121,4716
(defun with-editor-emacsclient-version (exec)with-editor-emacsclient-version145,5852
(defun with-editor-emacsclient-path ()with-editor-emacsclient-path150,6044
(defcustom with-editor-emacsclient-executable (with-editor-locate-emacsclient)with-editor-emacsclient-executable168,6889
(defcustom with-editor-sleeping-editor "\with-editor-sleeping-editor174,7160
(defcustom with-editor-finish-query-functions nilwith-editor-finish-query-functions217,8805
(defcustom with-editor-cancel-query-functions nilwith-editor-cancel-query-functions231,9451
(defcustom with-editor-mode-lighter " WE"with-editor-mode-lighter245,10097
(defvar with-editor-server-window-alist nilwith-editor-server-window-alist250,10268
(defvar with-editor-file-name-history-exclude nilwith-editor-file-name-history-exclude261,10681
(defcustom with-editor-shell-command-use-emacsclient twith-editor-shell-command-use-emacsclient267,10977
(defvar with-editor-pre-finish-hook nil)with-editor-pre-finish-hook301,12264
(defvar with-editor-pre-cancel-hook nil)with-editor-pre-cancel-hook302,12305
(defvar with-editor-post-finish-hook nil)with-editor-post-finish-hook303,12346
(defvar with-editor-post-finish-hook-1 nil)with-editor-post-finish-hook-1304,12388
(defvar with-editor-post-cancel-hook nil)with-editor-post-cancel-hook305,12432
(defvar with-editor-post-cancel-hook-1 nil)with-editor-post-cancel-hook-1306,12474
(defvar with-editor-cancel-alist nil)with-editor-cancel-alist307,12518
(defvar with-editor-show-usage t)with-editor-show-usage313,12775
(defvar with-editor-cancel-message nil)with-editor-cancel-message314,12809
(defvar with-editor-previous-winconf nil)with-editor-previous-winconf315,12849
(defvar-local with-editor--pid nil "For internal use.")with-editor--pid322,13169
(defun with-editor-finish (force)with-editor-finish325,13269
(defun with-editor-cancel (force)with-editor-cancel337,13733
(defun with-editor-return (cancel)with-editor-return354,14421
(defvar with-editor-mode-mapwith-editor-mode-map391,15871
(define-minor-mode with-editor-modewith-editor-mode404,16649
(defun with-editor-kill-buffer-noop ()with-editor-kill-buffer-noop421,17328
(defun with-editor-usage-message ()with-editor-usage-message425,17483
(defvar with-editor--envvar nil "For internal use.")with-editor--envvar437,17859
(defmacro with-editor (&rest body)with-editor439,17913
(defun with-editor--setup ()with-editor--setup453,18530
(defun with-editor-server-window ()with-editor-server-window486,20065
(defun server-switch-buffer--with-editor-server-window-alistserver-switch-buffer--with-editor-server-window-alist493,20334
(defun start-file-process--with-editor-process-filterstart-file-process--with-editor-process-filter507,21001
(defun with-editor-set-process-filter (process filter)with-editor-set-process-filter534,22216
(defvar with-editor-filter-visit-hook nil)with-editor-filter-visit-hook551,22948
(defun with-editor-output-filter (string)with-editor-output-filter553,22992
(defun with-editor-process-filterwith-editor-process-filter572,23789
(defun server-visit-files--with-editor-file-name-history-excludeserver-visit-files--with-editor-file-name-history-exclude583,24221
(defun with-editor-export-git-editor ()with-editor-export-git-editor624,25936
(defun with-editor-export-hg-editor ()with-editor-export-hg-editor630,26119
(defun with-editor-emulate-terminal (process string)with-editor-emulate-terminal635,26284
(defvar with-editor-envvars '("EDITOR" "GIT_EDITOR" "HG_EDITOR"))with-editor-envvars640,26490
(define-minor-mode shell-command-with-editor-modeshell-command-with-editor-mode652,27013
(defun with-editor-async-shell-commandwith-editor-async-shell-command671,27793
(defun with-editor-shell-commandwith-editor-shell-command694,28803
(defun with-editor-shell-command-read-args (prompt &optional async)with-editor-shell-command-read-args705,29291
(defun shell-command--shell-command-with-editor-modeshell-command--shell-command-with-editor-mode719,30002
(defun with-editor-debug ()with-editor-debug756,31816
(defconst with-editor-font-lock-keywordswith-editor-font-lock-keywords814,34799

elpa/with-editor-20180414.757/with-editor-autoloads.el,84
(defvar shell-command-with-editor-mode nil "\shell-command-with-editor-mode33,991

elpa/with-editor-20180414.757/with-editor-pkg.el,96
(define-package "with-editor" "20180414.757" "Use the Emacsclient as $EDITOR""with-editor"1,0

elpa/hlinum-20180421.2112/hlinum.el,600
(defface linum-highlight-facelinum-highlight-face45,1574
(defcustom linum-highlight-in-all-buffersplinum-highlight-in-all-buffersp51,1740
(defun hlinum-color (face &optional line)hlinum-color58,1948
(defun hlinum-highlight-line (&optional line)hlinum-highlight-line80,2906
(defun hlinum-unhighlight-line (&optional line)hlinum-unhighlight-line82,2997
(defun hlinum-highlight-region ()hlinum-highlight-region86,3121
(defun hlinum-after-scroll (win start)hlinum-after-scroll93,3352
(defun hlinum-activate ()hlinum-activate100,3540
(defun hlinum-deactivate ()hlinum-deactivate109,3887

elpa/hlinum-20180421.2112/hlinum-autoloads.el,0

elpa/hlinum-20180421.2112/hlinum-pkg.el,270
(define-package "hlinum" "20180421.2112" "Extension for linum.el to highlight current line number" '((cl-lib "0.2")) :commit "f17360fe93de6df99a05b4b64b0a1ca4ee45abb6" :keywords '("convenience" "extensions") :url "https://github.com/tom-tan/hlinum-mode/")"hlinum"2,31

elpa/ghub-20180607.2101/ghub.el,3115
(defvar url-callback-arguments)url-callback-arguments55,2036
(defvar url-http-end-of-headers)url-http-end-of-headers56,2068
(defvar url-http-extra-headers)url-http-extra-headers57,2101
(defvar url-http-response-status)url-http-response-status58,2133
(defconst ghub-default-host "api.github.com")ghub-default-host62,2182
(defvar ghub-github-token-scopes '(repo)ghub-github-token-scopes64,2229
(defvar ghub-override-system-name nilghub-override-system-name84,3157
(defalias 'ghub-req-extra 'ghub--req-extra)ghub-req-extra107,3821
(define-error 'ghub-error "Ghub/Url Error" 'error)ghub-error111,3876
(define-error 'ghub-http-error "HTTP Error" 'ghub-error)ghub-http-error112,3927
(defvar ghub-response-headers nilghub-response-headers114,3985
(defun ghub-continue (req)ghub-continue361,15648
(defun ghub-response-link-relations (&optional headers)ghub-response-link-relations406,17571
(defun ghub--handle-response (status req)ghub--handle-response443,19302
(defun ghub--handle-response-headers (status req)ghub--handle-response-headers477,20886
(defun ghub--handle-response-error (status payload req)ghub--handle-response-error496,21602
(defun ghub--handle-response-payload (req)ghub--handle-response-payload517,22395
(defun ghub--read-json-payload (status)ghub--read-json-payload522,22556
(defun ghub--decode-payload (&optional _status)ghub--decode-payload537,23120
(defun ghub--url-encode-params (params)ghub--url-encode-params543,23297
(defun ghub-create-token (host username package scopes)ghub-create-token556,23706
(defun ghub-token-scopes (host username package)ghub-token-scopes598,25408
(defun ghub--headers (headers host auth username forge)ghub--headers615,26065
(defun ghub--auth (host auth &optional username forge)ghub--auth629,26619
(defun ghub--basic-auth (host username)ghub--basic-auth650,27433
(defun ghub--basic-auth-errorback (url &optional prompt _overwrite _realm _args)ghub--basic-auth-errorback655,27602
(defun ghub--token (host username package &optional nocreate forge)ghub--token677,28692
(defun ghub--host (&optional forge)ghub--host699,29822
(defun ghub--username (host &optional forge)ghub--username706,30113
(defun ghub--ident (username package)ghub--ident721,30869
(defun ghub--ident-github (package)ghub--ident-github724,30945
(defun ghub--package-scopes (package)ghub--package-scopes729,31091
(defun ghub--confirm-create-token (host username package)ghub--confirm-create-token735,31297
(defun ghub--get-token-id (host username package)ghub--get-token-id782,33098
(defun ghub--get-token-plist (host username package)ghub--get-token-plist792,33492
(defun ghub--delete-token (host username package)ghub--delete-token797,33712
(defun ghub--read-triplet ()ghub--read-triplet802,33938
(defvar ghub--2fa-cache nil)ghub--2fa-cache808,34149
(defun ghub--read-2fa-code ()ghub--read-2fa-code810,34179
(defun ghub--auth-source-get (keys &rest spec)ghub--auth-source-get821,34698
(defun auth-source-netrc-parse-next-interesting@save-match-data (fn)auth-source-netrc-parse-next-interesting@save-match-data830,35045

elpa/ghub-20180607.2101/ghub-pkg.el,96
(define-package "ghub" "20180607.2101" "minuscule client library for the Github API""ghub"1,0

elpa/ghub-20180607.2101/ghub-autoloads.el,0

elpa/magit-20180610.1519/magit-mode.el,7332
(defvar git-commit-mode)git-commit-mode40,1388
(defvar magit-diff-show-xref-buttons)magit-diff-show-xref-buttons42,1461
(defvar magit-revision-show-xref-buttons)magit-revision-show-xref-buttons43,1499
(defcustom magit-mode-hookmagit-mode-hook54,1825
(defcustom magit-mode-setup-hookmagit-mode-setup-hook64,2109
(defcustom magit-pre-refresh-hook '(magit-maybe-save-repository-buffers)magit-pre-refresh-hook80,2702
(defcustom magit-post-refresh-hook nilmagit-post-refresh-hook94,3199
(defcustom magit-display-buffer-function 'magit-display-buffer-traditionalmagit-display-buffer-function107,3610
(defcustom magit-pre-display-buffer-hook '(magit-save-window-configuration)magit-pre-display-buffer-hook123,4421
(defcustom magit-post-display-buffer-hook '(magit-maybe-set-dedicated)magit-post-display-buffer-hook131,4720
(defcustom magit-generate-buffer-name-functionmagit-generate-buffer-name-function139,5007
(defcustom magit-buffer-name-format "%x%M%v: %t%x"magit-buffer-name-format147,5348
(defcustom magit-uniquify-buffer-names tmagit-uniquify-buffer-names189,6849
(defcustom magit-bury-buffer-function 'magit-restore-window-configurationmagit-bury-buffer-function195,7023
(defcustom magit-use-sticky-arguments tmagit-use-sticky-arguments204,7435
(defcustom magit-region-highlight-hookmagit-region-highlight-hook241,9040
(defcustom magit-refresh-verbose nilmagit-refresh-verbose253,9512
(defcustom magit-refresh-buffer-hook nilmagit-refresh-buffer-hook259,9677
(defcustom magit-refresh-status-buffer tmagit-refresh-status-buffer265,9864
(defcustom magit-save-repository-buffers tmagit-save-repository-buffers279,10343
(defcustom magit-keep-region-overlay nilmagit-keep-region-overlay296,11021
(defvar magit-mode-mapmagit-mode-map345,13410
(defun magit-delete-thing ()magit-delete-thing451,19002
(defun magit-visit-thing ()magit-visit-thing458,19248
(defun magit-load-config-extensions ()magit-load-config-extensions518,21198
(define-derived-mode magit-mode special-mode "Magit"magit-mode525,21465
(defvar-local magit-region-overlays nil)magit-region-overlays553,22737
(defun magit-delete-region-overlays ()magit-delete-region-overlays555,22779
(defun magit-highlight-region (start end window rol)magit-highlight-region559,22903
(defun magit-unhighlight-region (rol)magit-unhighlight-region572,23531
(defvar-local magit-refresh-args nilmagit-refresh-args577,23722
(defvar-local magit-previous-section nil)magit-previous-section581,23860
(defun magit-mode-setup (mode &rest args)magit-mode-setup584,23952
(defun magit-mode-setup-internal (mode args &optional locked)magit-mode-setup-internal588,24099
(defvar magit-display-buffer-noselect nilmagit-display-buffer-noselect605,24797
(defun magit-display-buffer (buffer)magit-display-buffer608,24915
(defun magit-display-buffer-traditional (buffer)magit-display-buffer-traditional627,25630
(defun magit-display-buffer-same-window-except-diff-v1 (buffer)magit-display-buffer-same-window-except-diff-v1640,26222
(defun magit--display-buffer-fullframe (buffer alist)magit--display-buffer-fullframe651,26739
(defun magit-display-buffer-fullframe-status-v1 (buffer)magit-display-buffer-fullframe-status-v1659,27114
(defun magit--display-buffer-topleft (buffer alist)magit--display-buffer-topleft667,27495
(defun magit-display-buffer-fullframe-status-topleft-v1 (buffer)magit-display-buffer-fullframe-status-topleft-v1691,28751
(defun magit--display-buffer-fullcolumn (buffer alist)magit--display-buffer-fullcolumn710,29581
(defun magit-display-buffer-fullcolumn-most-v1 (buffer)magit-display-buffer-fullcolumn-most-v1717,29899
(defun magit-maybe-set-dedicated ()magit-maybe-set-dedicated740,30889
(defvar-local magit--default-directory nilmagit--default-directory752,31406
(defun magit-mode-get-buffers ()magit-mode-get-buffers759,31740
(defvar-local magit-buffer-locked-p nil)magit-buffer-locked-p766,31991
(defun magit-mode-get-buffer (mode &optional create frame value)magit-mode-get-buffer769,32081
(defun magit-generate-new-buffer (mode &optional value)magit-generate-new-buffer787,32923
(defun magit-generate-buffer-name-default-function (mode &optional value)magit-generate-buffer-name-default-function807,33858
(defun magit-toggle-buffer-lock ()magit-toggle-buffer-lock828,34786
(defvar magit-buffer-lock-functions nilmagit-buffer-lock-functions863,36352
(defun magit-mode-bury-buffer (&optional kill-buffer)magit-mode-bury-buffer923,38362
(defun magit-mode-quit-window (kill-buffer)magit-mode-quit-window930,38616
(defvar inhibit-magit-refresh nil)inhibit-magit-refresh955,39639
(defun magit-refresh ()magit-refresh957,39675
(defun magit-refresh-all ()magit-refresh-all990,41162
(defvar-local magit-refresh-start-time nil)magit-refresh-start-time1005,41723
(defun magit-refresh-buffer ()magit-refresh-buffer1007,41768
(defun magit-refresh-get-relative-position ()magit-refresh-get-relative-position1048,43732
(defvar disable-magit-save-buffers nil)disable-magit-save-buffers1070,44820
(defun magit-pre-command-hook ()magit-pre-command-hook1072,44861
(defvar magit-after-save-refresh-buffers nil)magit-after-save-refresh-buffers1076,44990
(defun magit-after-save-refresh-buffers ()magit-after-save-refresh-buffers1078,45037
(defun magit-after-save-refresh-status ()magit-after-save-refresh-status1086,45350
(defun magit-maybe-save-repository-buffers ()magit-maybe-save-repository-buffers1105,46194
(defvar-local magit-inhibit-refresh-save nil)magit-inhibit-refresh-save1125,47081
(defun magit-save-repository-buffers (&optional arg)magit-save-repository-buffers1127,47128
(defvar magit-inhibit-save-previous-winconf nil)magit-inhibit-save-previous-winconf1161,48749
(defvar-local magit-previous-window-configuration nil)magit-previous-window-configuration1163,48799
(defun magit-save-window-configuration ()magit-save-window-configuration1166,48917
(defun magit-restore-window-configuration (&optional kill-buffer)magit-restore-window-configuration1178,49417
(defun magit-go-backward ()magit-go-backward1192,50002
(defun magit-go-forward ()magit-go-forward1199,50218
(defun magit-insert-xref-buttons (&optional _)magit-insert-xref-buttons1206,50439
(defun magit-xref-insert-button (label type)magit-xref-insert-button1216,50821
(define-button-type 'magit-xref-backwardmagit-xref-backward1221,51009
(define-button-type 'magit-xref-forwardmagit-xref-forward1226,51189
(defun magit-xref-setup ()magit-xref-setup1231,51367
(defun magit-xref-restore (&rest args)magit-xref-restore1248,52110
(defvar magit-repository-local-cache nilmagit-repository-local-cache1256,52303
(defun magit-repository-local-repository ()magit-repository-local-repository1259,52417
(defun magit-repository-local-set (key value &optional repository)magit-repository-local-set1264,52584
(defun magit-repository-local-exists-p (key &optional repository)magit-repository-local-exists-p1287,53595
(defun magit-repository-local-get (key &optional default repository)magit-repository-local-get1300,54042
(defun magit-repository-local-delete (key &optional repository)magit-repository-local-delete1313,54430
(defun magit-zap-caches ()magit-zap-caches1324,54892
(defun magit-run-hook-with-benchmark (hook)magit-run-hook-with-benchmark1341,55471

elpa/magit-20180610.1519/magit-log.el,10748
(defvar magit-refs-focus-column-width)magit-refs-focus-column-width44,1706
(defvar magit-refs-margin)magit-refs-margin45,1745
(defvar magit-refs-show-commit-count)magit-refs-show-commit-count46,1772
(defvar magit-buffer-margin)magit-buffer-margin47,1810
(defvar magit-status-margin)magit-status-margin48,1839
(defvar magit-status-sections-hook)magit-status-sections-hook49,1868
(defvar bookmark-make-record-function)bookmark-make-record-function53,1942
(defgroup magit-log nilmagit-log58,2009
(defcustom magit-log-mode-hook nilmagit-log-mode-hook63,2135
(defcustom magit-log-arguments '("-n256" "--graph" "--decorate")magit-log-arguments68,2250
(defcustom magit-log-remove-graph-args '("--follow" "--grep" "-G" "-S" "-L")magit-log-remove-graph-args75,2504
(defcustom magit-log-revision-headers-format "\magit-log-revision-headers-format82,2804
(defcustom magit-log-auto-more nilmagit-log-auto-more91,3039
(defcustom magit-log-margin '(t age magit-log-margin-width t 18)magit-log-margin98,3274
(defcustom magit-log-show-refname-after-summary nilmagit-log-show-refname-after-summary121,4330
(defcustom magit-log-highlight-keywords tmagit-log-highlight-keywords128,4564
(defcustom magit-log-header-line-function 'magit-log-header-line-sentencemagit-log-header-line-function134,4749
(defface magit-log-graphmagit-log-graph142,5112
(defface magit-log-authormagit-log-author148,5333
(defface magit-log-datemagit-log-date154,5559
(defface magit-header-line-log-selectmagit-header-line-log-select160,5778
(defcustom magit-log-buffer-file-locked tmagit-log-buffer-file-locked167,5937
(defcustom magit-log-select-arguments '("-n256" "--decorate")magit-log-select-arguments176,6160
(defcustom magit-log-select-show-usage 'bothmagit-log-select-show-usage182,6388
(defcustom magit-log-select-marginmagit-log-select-margin194,6971
(defcustom magit-cherry-sections-hookmagit-cherry-sections-hook224,8196
(defcustom magit-cherry-marginmagit-cherry-margin232,8429
(defcustom magit-reflog-arguments '("-n256")magit-reflog-arguments262,9642
(defcustom magit-reflog-marginmagit-reflog-margin268,9859
(defface magit-reflog-commit '((t :foreground "green"))magit-reflog-commit296,11056
(defface magit-reflog-amend '((t :foreground "magenta"))magit-reflog-amend300,11177
(defface magit-reflog-merge '((t :foreground "green"))magit-reflog-merge304,11298
(defface magit-reflog-checkout '((t :foreground "blue"))magit-reflog-checkout308,11438
(defface magit-reflog-reset '((t :foreground "red"))magit-reflog-reset312,11562
(defface magit-reflog-rebase '((t :foreground "magenta"))magit-reflog-rebase316,11679
(defface magit-reflog-cherry-pick '((t :foreground "green"))magit-reflog-cherry-pick320,11802
(defface magit-reflog-remote '((t :foreground "cyan"))magit-reflog-remote324,11933
(defface magit-reflog-other '((t :foreground "cyan"))magit-reflog-other328,12061
(defcustom magit-log-section-commit-count 10magit-log-section-commit-count334,12198
(defcustom magit-log-section-arguments '("-n256" "--decorate")magit-log-section-arguments343,12553
(defvar magit-log-popupmagit-log-popup354,12873
(defvar magit-log-mode-refresh-popupmagit-log-mode-refresh-popup387,14709
(defvar magit-reflog-mode-refresh-popupmagit-reflog-mode-refresh-popup413,16131
(defvar magit-log-refresh-popupmagit-log-refresh-popup418,16290
(defun magit-read-file-trace (&rest _ignored)magit-read-file-trace440,17346
(defun magit-log-select-order (&rest _ignored)magit-log-select-order448,17704
(defun magit-log++header ()magit-log++header458,18118
(defun magit-log-get-buffer-args ()magit-log-get-buffer-args464,18283
(defun magit-log-arguments (&optional refresh)magit-log-arguments477,18827
(defun magit-log-popup (arg)magit-log-popup486,19197
(defun magit-log-buffer-file-popup ()magit-log-buffer-file-popup498,19630
(defun magit-log-refresh-popup (arg)magit-log-refresh-popup516,20335
(defun magit-log-refresh (args files)magit-log-refresh542,21460
(defun magit-log-set-default-arguments (args files)magit-log-set-default-arguments554,21907
(defun magit-log-save-default-arguments (args files)magit-log-save-default-arguments569,22572
(defun magit-log-refresh-assert ()magit-log-refresh-assert584,23251
(defvar magit-log-read-revs-mapmagit-log-read-revs-map592,23540
(defun magit-log-read-revs (&optional use-current)magit-log-read-revs598,23719
(defun magit-log-current (revs &optional args files)magit-log-current614,24572
(defun magit-log (revs &optional args files)magit-log623,24905
(defun magit-log-head (&optional args files)magit-log-head636,25415
(defun magit-log-branches (&optional args files)magit-log-branches642,25579
(defun magit-log-all-branches (&optional args files)magit-log-all-branches651,25880
(defun magit-log-all (&optional args files)magit-log-all660,26220
(defun magit-log-buffer-file (&optional follow beg end)magit-log-buffer-file669,26502
(defun magit-log-trace-definition (file fn rev)magit-log-trace-definition712,28349
(defun magit-diff-trace-definition ()magit-diff-trace-definition731,29060
(defun magit-reflog-current ()magit-reflog-current745,29474
(defun magit-reflog (ref)magit-reflog751,29628
(defun magit-reflog-head ()magit-reflog-head758,29868
(defun magit-log-toggle-commit-limit ()magit-log-toggle-commit-limit765,29990
(defun magit-log-double-commit-limit ()magit-log-double-commit-limit772,30270
(defun magit-log-half-commit-limit ()magit-log-half-commit-limit777,30433
(defun magit-log-set-commit-limit (fn)magit-log-set-commit-limit782,30592
(defun magit-log-get-commit-limit ()magit-log-get-commit-limit794,31049
(defun magit-log-bury-buffer (&optional arg)magit-log-bury-buffer801,31268
(defun magit-log-move-to-parent (&optional n)magit-log-move-to-parent818,31982
(defvar magit-log-mode-mapmagit-log-mode-map837,32835
(define-derived-mode magit-log-mode magit-mode "Magit Log"magit-log-mode850,33358
(defvar magit-log-disable-graph-hack-argsmagit-log-disable-graph-hack-args875,34312
(defun magit-log-refresh-buffer (revs args files)magit-log-refresh-buffer879,34438
(defun magit-log-header-line-arguments (revs args files)magit-log-header-line-arguments911,35995
(defun magit-log-header-line-sentence (revs args files)magit-log-header-line-sentence920,36309
(defun magit-insert-log (revs &optional args files)magit-insert-log932,36767
(defvar magit-commit-section-mapmagit-commit-section-map960,38103
(defvar magit-module-commit-section-mapmagit-module-commit-section-map967,38328
(defconst magit-log-heading-remagit-log-heading-re973,38522
(defconst magit-log-cherry-remagit-log-cherry-re983,38975
(defconst magit-log-module-remagit-log-module-re989,39195
(defconst magit-log-bisect-vis-remagit-log-bisect-vis-re995,39413
(defconst magit-log-bisect-log-remagit-log-bisect-log-re1002,39694
(defconst magit-log-reflog-remagit-log-reflog-re1008,39920
(defconst magit-reflog-subject-remagit-reflog-subject-re1016,40272
(defconst magit-log-stash-remagit-log-stash-re1021,40486
(defvar magit-log-count nil)magit-log-count1028,40765
(defvar magit-log-format-message-function 'magit-log-propertize-keywords)magit-log-format-message-function1030,40795
(defun magit-log-wash-log (style args)magit-log-wash-log1032,40870
(defun magit-log-propertize-keywords (_rev msg)magit-log-propertize-keywords1192,48286
(defun magit-log-maybe-show-more-commits (section)magit-log-maybe-show-more-commits1202,48629
(defvar magit--update-revision-buffer nil)magit--update-revision-buffer1218,49240
(defun magit-log-maybe-update-revision-buffer (&optional _)magit-log-maybe-update-revision-buffer1220,49284
(defun magit-log-maybe-update-revision-buffer-1 ()magit-log-maybe-update-revision-buffer-11226,49565
(defvar magit--update-blob-buffer nil)magit--update-blob-buffer1242,50315
(defun magit-log-maybe-update-blob-buffer (&optional _)magit-log-maybe-update-blob-buffer1244,50355
(defun magit-log-maybe-update-blob-buffer-1 ()magit-log-maybe-update-blob-buffer-11250,50620
(defun magit-log-goto-same-commit ()magit-log-goto-same-commit1270,51630
(defun magit-log-format-margin (author date)magit-log-format-margin1282,52123
(defun magit-log-margin-width (style details details-width)magit-log-margin-width1307,53309
(defvar magit-log-select-mode-mapmagit-log-select-mode-map1322,53844
(define-derived-mode magit-log-select-mode magit-log-mode "Magit Select"magit-log-select-mode1338,54500
(defun magit-log-select-refresh-buffer (rev args)magit-log-select-refresh-buffer1354,55082
(defvar-local magit-log-select-pick-function nil)magit-log-select-pick-function1358,55200
(defvar-local magit-log-select-quit-function nil)magit-log-select-quit-function1359,55250
(defun magit-log-select (pick &optional msg quit branch args)magit-log-select1361,55301
(defun magit-log-select-pick ()magit-log-select-pick1392,56750
(defun magit-log-select-quit ()magit-log-select-quit1402,57064
(defvar magit-cherry-mode-mapmagit-cherry-mode-map1411,57304
(define-derived-mode magit-cherry-mode magit-mode "Magit Cherry"magit-cherry-mode1419,57553
(defun magit-cherry (head upstream)magit-cherry1438,58197
(defun magit-cherry-refresh-buffer (_upstream _head)magit-cherry-refresh-buffer1447,58591
(defun magit-insert-cherry-headers ()magit-insert-cherry-headers1451,58724
(defun magit-insert-cherry-commits ()magit-insert-cherry-commits1459,59091
(defvar magit-reflog-mode-mapmagit-reflog-mode-map1468,59408
(define-derived-mode magit-reflog-mode magit-log-mode "Magit Reflog"magit-reflog-mode1475,59613
(defun magit-reflog-refresh-buffer (ref args)magit-reflog-refresh-buffer1494,60257
(defvar magit-reflog-labelsmagit-reflog-labels1501,60559
(defun magit-reflog-format-subject (subject)magit-reflog-format-subject1516,61141
(defvar magit-unpulled-section-mapmagit-unpulled-section-map1537,61966
(defun magit-insert-unpulled-from-upstream ()magit-insert-unpulled-from-upstream1546,62271
(defun magit-insert-unpulled-from-pushremote ()magit-insert-unpulled-from-pushremote1559,62867
(defvar magit-unpushed-section-mapmagit-unpushed-section-map1574,63679
(defun magit-insert-unpushed-to-upstream-or-recent ()magit-insert-unpushed-to-upstream-or-recent1583,63980
(defun magit-insert-unpushed-to-upstream (&optional collapse)magit-insert-unpushed-to-upstream1611,65280
(defun magit-insert-recent-commits (&optional collapse)magit-insert-recent-commits1620,65748
(defun magit-insert-unpushed-to-pushremote ()magit-insert-unpushed-to-pushremote1637,66555
(defun magit-insert-unpulled-cherries ()magit-insert-unpulled-cherries1654,67386
(defun magit-insert-unpushed-cherries ()magit-insert-unpushed-cherries1667,67992

elpa/magit-20180610.1519/magit-reset.el,474
(defun magit-reset-index (commit)magit-reset-index44,1642
(defun magit-reset (commit &optional hard)magit-reset53,1966
(defun magit-reset-head (commit)magit-reset-head66,2540
(defun magit-reset-soft (commit)magit-reset-soft73,2800
(defun magit-reset-hard (commit)magit-reset-hard80,3065
(defun magit-reset-read-branch-or-commit (prompt)magit-reset-read-branch-or-commit88,3393
(defun magit-reset-internal (arg commit &optional path)magit-reset-internal96,3708

elpa/magit-20180610.1519/magit-repos.el,2096
(defvar x-stretch-cursor)x-stretch-cursor36,1271
(defcustom magit-repository-directories nilmagit-repository-directories40,1311
(defgroup magit-repolist nilmagit-repolist51,1782
(defcustom magit-repolist-mode-hook '(hl-line-mode)magit-repolist-mode-hook56,1916
(defcustom magit-repolist-columnsmagit-repolist-columns64,2153
(defun magit-list-repositories ()magit-list-repositories103,3908
(defvar magit-repolist-mode-mapmagit-repolist-mode-map120,4465
(defun magit-repolist-status (&optional _button)magit-repolist-status128,4738
(define-derived-mode magit-repolist-mode tabulated-list-mode "Repos"magit-repolist-mode135,4994
(defun magit-repolist-refresh ()magit-repolist-refresh152,5811
(defun magit-repolist-column-ident (id)magit-repolist-column-ident166,6367
(defun magit-repolist-column-path (_id)magit-repolist-column-path171,6498
(defun magit-repolist-column-version (_id)magit-repolist-column-version175,6631
(defun magit-repolist-column-branch (_id)magit-repolist-column-branch185,7078
(defun magit-repolist-column-upstream (_id)magit-repolist-column-upstream189,7182
(defun magit-repolist-column-dirty (_id)magit-repolist-column-dirty193,7312
(defun magit-repolist-column-unpulled-from-upstream (_id)magit-repolist-column-unpulled-from-upstream204,7715
(defun magit-repolist-column-unpulled-from-pushremote (_id)magit-repolist-column-unpulled-from-pushremote210,8018
(defun magit-repolist-column-unpushed-to-upstream (_id)magit-repolist-column-unpushed-to-upstream216,8330
(defun magit-repolist-column-unpushed-to-pushremote (_id)magit-repolist-column-unpushed-to-pushremote222,8638
(defun magit-repolist-column-branches (_id)magit-repolist-column-branches228,8947
(defun magit-repolist-column-stashes (_id)magit-repolist-column-stashes233,9146
(defun magit-read-repository (&optional read-directory-name)magit-read-repository240,9357
(defun magit-list-repos ()magit-list-repos268,10647
(defun magit-list-repos-1 (directory depth)magit-list-repos-1273,10812
(defun magit-list-repos-uniquify (alist)magit-list-repos-uniquify282,11253

elpa/magit-20180610.1519/magit-submodule.el,2763
(defvar x-stretch-cursor)x-stretch-cursor28,1010
(defvar bookmark-make-record-function)bookmark-make-record-function29,1036
(defcustom magit-module-sections-hookmagit-module-sections-hook33,1089
(defcustom magit-module-sections-nested tmagit-module-sections-nested48,1611
(defcustom magit-submodule-list-mode-hook '(hl-line-mode)magit-submodule-list-mode-hook58,1964
(defcustom magit-submodule-list-columnsmagit-submodule-list-columns66,2213
(defun magit-submodule-filtered-arguments (&rest filters)magit-submodule-filtered-arguments131,5348
(defun magit-submodule-add (url &optional path name args)magit-submodule-add136,5505
(defun magit-submodule-read-name-for-path (path &optional prefer-short)magit-submodule-read-name-for-path172,7212
(defun magit-submodule-register (modules)magit-submodule-register185,7820
(defun magit-submodule-populate (modules)magit-submodule-populate203,8580
(defun magit-submodule-update (modules args)magit-submodule-update219,9283
(defun magit-submodule-synchronize (modules args)magit-submodule-synchronize239,10194
(defun magit-submodule-unpopulate (modules args)magit-submodule-unpopulate253,10765
(defun magit-insert-modules ()magit-insert-modules276,11739
(defun magit--insert-modules (&optional _section)magit--insert-modules293,12464
(defun magit-insert-modules-overview ()magit-insert-modules-overview297,12586
(defvar magit-modules-overview-align-numbers t)magit-modules-overview-align-numbers311,13198
(defun magit--insert-modules-overview (&optional _section)magit--insert-modules-overview313,13247
(defvar magit-submodules-section-mapmagit-submodules-section-map342,14767
(defvar magit-submodule-section-mapmagit-submodule-section-map348,14959
(defun magit-submodule-visit (module &optional other-window)magit-submodule-visit360,15450
(defun magit-insert-modules-unpulled-from-upstream ()magit-insert-modules-unpulled-from-upstream385,16654
(defun magit-insert-modules-unpulled-from-pushremote ()magit-insert-modules-unpulled-from-pushremote393,17043
(defun magit-insert-modules-unpushed-to-upstream ()magit-insert-modules-unpushed-to-upstream401,17431
(defun magit-insert-modules-unpushed-to-pushremote ()magit-insert-modules-unpushed-to-pushremote409,17814
(defun magit--insert-modules-logs (heading type range)magit--insert-modules-logs416,18179
(defun magit-list-submodules ()magit-list-submodules447,19538
(defvar magit-submodule-list-mode-mapmagit-submodule-list-mode-map455,19813
(define-derived-mode magit-submodule-list-mode tabulated-list-mode "Modules"magit-submodule-list-mode461,20006
(defun magit-submodule-list-refresh ()magit-submodule-list-refresh481,20975
(defun magit-modulelist-column-path (path)magit-modulelist-column-path493,21512

elpa/magit-20180610.1519/magit-apply.el,3201
(defvar auto-revert-verbose)auto-revert-verbose43,1623
(defvar borg-user-emacs-directory)borg-user-emacs-directory51,2030
(defcustom magit-delete-by-moving-to-trash tmagit-delete-by-moving-to-trash55,2079
(defcustom magit-unstage-committed tmagit-unstage-committed66,2508
(defcustom magit-reverse-atomically nilmagit-reverse-atomically82,3104
(defun magit-apply (&rest args)magit-apply97,3571
(defun magit-apply--section-content (section)magit-apply--section-content115,4397
(defun magit-apply-diffs (sections &rest args)magit-apply-diffs121,4687
(defun magit-apply-diff (section &rest args)magit-apply-diff130,5051
(defun magit-apply-hunks (sections &rest args)magit-apply-hunks136,5327
(defun magit-apply-hunk (section &rest args)magit-apply-hunk145,5781
(defun magit-apply-region (section &rest args)magit-apply-region152,6158
(defun magit-apply-patch (section:s args patch)magit-apply-patch161,6653
(defun magit-apply--get-selection ()magit-apply--get-selection182,7559
(defun magit-apply--get-diffs (sections)magit-apply--get-diffs192,7979
(defun magit-apply--diff-ignores-whitespace-p ()magit-apply--diff-ignores-whitespace-p202,8323
(defun magit-stage (&optional intent)magit-stage215,8805
(defun magit-stage-file (file)magit-stage-file240,10212
(defun magit-stage-modified (&optional all)magit-stage-modified259,10980
(defun magit-stage-1 (arg &optional files)magit-stage-1271,11449
(defun magit-stage-untracked (&optional intent)magit-stage-untracked278,11759
(defun magit-unstage ()magit-unstage328,13891
(defun magit-unstage-file (file)magit-unstage-file352,15274
(defun magit-unstage-1 (files)magit-unstage-1369,15975
(defun magit-unstage-all ()magit-unstage-all377,16260
(defun magit-discard ()magit-discard389,16634
(defun magit-discard-region (section)magit-discard-region403,17246
(defun magit-discard-hunk (section)magit-discard-hunk407,17382
(defun magit-discard-apply (section apply)magit-discard-apply411,17512
(defun magit-discard-hunks (sections)magit-discard-hunks424,18084
(defun magit-discard-apply-n (sections apply)magit-discard-apply-n430,18371
(defun magit-discard-file (section)magit-discard-file444,19007
(defun magit-discard-files (sections)magit-discard-files447,19084
(defun magit-discard-files--resurrect (files)magit-discard-files--resurrect493,21275
(defun magit-discard-files--delete (files status)magit-discard-files--delete499,21488
(defun magit-discard-files--rename (files status)magit-discard-files--rename522,22682
(defun magit-discard-files--discard (sections new-files)magit-discard-files--discard538,23295
(defun magit-reverse (&rest args)magit-reverse569,24631
(defun magit-reverse-region (section args)magit-reverse-region585,25464
(defun magit-reverse-hunk (section args)magit-reverse-hunk589,25610
(defun magit-reverse-hunks (sections args)magit-reverse-hunks593,25750
(defun magit-reverse-file (section args)magit-reverse-file600,26005
(defun magit-reverse-files (sections args)magit-reverse-files603,26092
(defun magit-reverse-apply (section:s apply args)magit-reverse-apply615,26601
(defun magit-reverse-in-index (&rest args)magit-reverse-in-index621,26818

elpa/magit-20180610.1519/magit-files.el,3239
(defvar magit-find-file-hook nil)magit-find-file-hook37,1239
(defun magit-find-file (rev file)magit-find-file41,1340
(defun magit-find-file-other-window (rev file)magit-find-file-other-window49,1608
(defun magit-find-file-read-args (prompt)magit-find-file-read-args56,1916
(defun magit-find-file-noselect (rev file)magit-find-file-noselect60,2086
(defun magit-find-file-noselect-1 (rev file hookvar &optional revert)magit-find-file-noselect-165,2315
(defun magit-get-revision-buffer-create (rev file)magit-get-revision-buffer-create90,3508
(defun magit-get-revision-buffer (rev file &optional create)magit-get-revision-buffer93,3602
(defun magit-revert-rev-file-buffer (_ignore-auto noconfirm)magit-revert-rev-file-buffer98,3852
(defvar magit-find-index-hook nil)magit-find-index-hook126,5118
(defun magit-find-file-index-noselect (file &optional revert)magit-find-file-index-noselect128,5154
(defun magit-update-index ()magit-update-index134,5465
(defun magit-find-git-config-file (filename &optional wildcards)magit-find-git-config-file168,7027
(defun magit-find-git-config-file-other-window (filename &optional wildcards)magit-find-git-config-file-other-window184,7664
(defun magit-find-git-config-file-other-frame (filename &optional wildcards)magit-find-git-config-file-other-frame200,8375
(defvar magit-file-mode-mapmagit-file-mode-map218,9096
(defvar magit-file-mode-lighter "")magit-file-mode-lighter255,10728
(define-minor-mode magit-file-modemagit-file-mode257,10765
(defun magit-file-mode-turn-on ()magit-file-mode-turn-on266,11044
(define-globalized-minor-mode global-magit-file-modeglobal-magit-file-mode272,11180
(defvar magit-blob-mode-mapmagit-blob-mode-map289,11817
(define-minor-mode magit-blob-modemagit-blob-mode307,12524
(defun magit-blob-next ()magit-blob-next314,12736
(defun magit-blob-previous ()magit-blob-previous326,13274
(defun magit-blob-visit (blob-or-file line)magit-blob-visit336,13726
(defun magit-blob-ancestor (rev file)magit-blob-ancestor347,14093
(defun magit-blob-successor (rev file)magit-blob-successor353,14362
(defun magit-file-rename (file newname)magit-file-rename365,14773
(defun magit-file-untrack (files &optional force)magit-file-untrack394,16072
(defun magit-file-delete (files &optional force)magit-file-delete408,16789
(defun magit-file-checkout (rev file)magit-file-checkout426,17561
(defvar magit-read-file-hist nil)magit-read-file-hist437,17901
(defun magit-read-file-from-rev (rev prompt &optional default)magit-read-file-from-rev439,17936
(defun magit-read-file (prompt &optional tracked-only)magit-read-file445,18184
(defun magit-read-tracked-file (prompt)magit-read-tracked-file454,18681
(defun magit-read-file-choice (prompt files &optional error default)magit-read-file-choice457,18752
(defun magit-read-changed-file (rev-or-range prompt &optional default)magit-read-changed-file473,19345
(defun magit-read-files (prompt initial-contents)magit-read-files480,19551
(defcustom magit-patch-save-arguments '(exclude "--stat")magit-patch-save-arguments488,19832
(defun magit-patch-apply (file &rest args)magit-patch-apply509,20766
(defun magit-patch-save (file &optional arg)magit-patch-save519,21265

elpa/magit-20180610.1519/magit-utils.el,3725
(defvar magit-wip-before-change-mode)magit-wip-before-change-mode57,2137
(defcustom magit-completing-read-function 'magit-builtin-completing-readmagit-completing-read-function61,2189
(defcustom magit-dwim-selectionmagit-dwim-selection81,3149
(defconst magit--confirm-actionsmagit--confirm-actions125,5118
(defcustom magit-no-confirm nilmagit-no-confirm137,5619
(defcustom magit-slow-confirm '(drop-stashes)magit-slow-confirm269,10971
(defcustom magit-no-message nilmagit-no-message285,11754
(defcustom magit-ellipsis ?…magit-ellipsis308,12752
(defcustom magit-update-other-window-delay 0.2magit-update-other-window-delay317,13038
(defcustom magit-view-git-manual-method 'infomagit-view-git-manual-method335,13797
(defvar magit-completing-read--silent-default nil)magit-completing-read--silent-default354,14553
(defun magit-completing-read (prompt collection &optionalmagit-completing-read356,14605
(defun magit--completion-table (collection)magit--completion-table427,17683
(defun magit-builtin-completing-readmagit-builtin-completing-read433,17906
(defvar helm-completion-in-region-default-sort-fn)helm-completion-in-region-default-sort-fn446,18556
(defun magit-completing-read-multiplemagit-completing-read-multiple448,18608
(defun magit-ido-completing-readmagit-ido-completing-read481,20009
(defun magit-prompt-with-default (prompt def)magit-prompt-with-default500,20887
(defvar magit-minibuffer-local-ns-mapmagit-minibuffer-local-ns-map506,21101
(defun magit-whitespace-disallowed ()magit-whitespace-disallowed513,21345
(defun magit-read-string (prompt &optional initial-input history default-valuemagit-read-string521,21571
(defun magit-read-string-ns (prompt &optional initial-input historymagit-read-string-ns558,23247
(defmacro magit-read-char-case (prompt verbose &rest clauses)magit-read-char-case564,23555
(defun magit-y-or-n-p (prompt &optional action)magit-y-or-n-p574,23971
(defvar magit--no-confirm-alistmagit--no-confirm-alist583,24335
(defun magit-confirm-files (action files &optional prompt)magit-confirm-files616,25958
(defun magit-confirm-make-prompt (action)magit-confirm-make-prompt625,26214
(defun magit-emacs-Q-command ()magit-emacs-Q-command633,26440
(defmacro magit-bind-match-strings (varlist string &rest body)magit-bind-match-strings657,27473
(defun magit-delete-line ()magit-delete-line671,28065
(defun magit-delete-match (&optional num)magit-delete-match675,28187
(defun magit-file-line (file)magit-file-line681,28420
(defun magit-file-lines (file &optional keep-empty-lines)magit-file-lines689,28696
(defun magit-set-header-line-format (string)magit-set-header-line-format697,29049
(defun magit-face-property-all (face string)magit-face-property-all728,30445
(defun magit--format-spec (format specification)magit--format-spec739,30873
(defun magit-kill-this-buffer ()magit-kill-this-buffer777,32409
(defun magit-file-accessible-directory-p (filename)magit-file-accessible-directory-p784,32550
(defun magit-completion-pcm--all-completions (prefix pattern table pred)magit-completion-pcm--all-completions810,33785
(defvar whitespace-mode)whitespace-mode831,34711
(defun whitespace-dont-turn-on-in-magit-mode (fn)whitespace-dont-turn-on-in-magit-mode833,34737
(defun magit-custom-initialize-reset (symbol exp)magit-custom-initialize-reset858,35676
(defun magit-hook-custom-get (symbol)magit-hook-custom-get876,36380
(defun Info-follow-nearest-node--magit-gitman (fn &optional fork)Info-follow-nearest-node--magit-gitman905,37443
(defun org-man-export--magit-gitman (fn link description format)org-man-export--magit-gitman926,38269
(defun magit-message (format-string &rest args)magit-message950,38789

elpa/magit-20180610.1519/magit-commit.el,2455
(defcustom magit-commit-arguments nilmagit-commit-arguments40,1332
(defcustom magit-commit-ask-to-stage 'verbosemagit-commit-ask-to-stage45,1485
(defcustom magit-commit-show-diff tmagit-commit-show-diff53,1826
(defcustom magit-commit-extend-override-date tmagit-commit-extend-override-date59,2014
(defcustom magit-commit-reword-override-date tmagit-commit-reword-override-date65,2211
(defcustom magit-commit-squash-confirm tmagit-commit-squash-confirm71,2408
(defun magit-commit-popup (&optional arg)magit-commit-popup84,2920
(defvar magit-commit-popupmagit-commit-popup91,3147
(defun magit-commit-arguments nilmagit-commit-arguments118,4576
(defvar magit-gpg-secret-key-hist nil)magit-gpg-secret-key-hist123,4722
(defun magit-read-gpg-secret-key (prompt &optional _initial-input)magit-read-gpg-secret-key125,4762
(defun magit-read-reuse-message (prompt &optional default)magit-read-reuse-message140,5572
(defun magit-commit (&optional args)magit-commit150,5928
(defun magit-commit-amend (&optional args)magit-commit-amend164,6485
(defun magit-commit-extend (&optional args override-date)magit-commit-extend172,6732
(defun magit-commit-reword (&optional args override-date)magit-commit-reword191,7621
(defun magit-commit-fixup (&optional commit args)magit-commit-fixup212,8508
(defun magit-commit-squash (&optional commit args)magit-commit-squash223,8940
(defun magit-commit-augment (&optional commit args)magit-commit-augment234,9411
(defun magit-commit-instant-fixup (&optional commit args)magit-commit-instant-fixup245,9881
(defun magit-commit-instant-squash (&optional commit args)magit-commit-instant-squash252,10171
(defun magit-commit-squash-internalmagit-commit-squash-internal258,10449
(defun magit-commit-amend-assert (&optional commit)magit-commit-amend-assert304,12422
(defun magit-commit-assert (args &optional strict)magit-commit-assert313,12771
(defvar magit--reshelve-history nil)magit--reshelve-history346,14101
(defun magit-commit-reshelve (date)magit-commit-reshelve349,14154
(defun magit-commit-diff ()magit-commit-diff375,15319
(defun magit-commit-message-buffer ()magit-commit-message-buffer412,16940
(defvar magit-commit-add-log-insert-function 'magit-commit-add-log-insertmagit-commit-add-log-insert-function420,17303
(defun magit-commit-add-log ()magit-commit-add-log423,17440
(defun magit-commit-add-log-insert (buffer file defun)magit-commit-add-log-insert448,18376

elpa/magit-20180610.1519/magit-wip.el,1859
(defgroup magit-wip nilmagit-wip38,1292
(defcustom magit-wip-after-save-local-mode-lighter " sWip"magit-wip-after-save-local-mode-lighter44,1458
(defcustom magit-wip-after-apply-mode-lighter " aWip"magit-wip-after-apply-mode-lighter50,1642
(defcustom magit-wip-before-change-mode-lighter " cWip"magit-wip-before-change-mode-lighter56,1816
(defcustom magit-wip-namespace "refs/wip/"magit-wip-namespace62,1994
(define-minor-mode magit-wip-after-save-local-modemagit-wip-after-save-local-mode74,2362
(defun magit-wip-after-save-local-mode-turn-on ()magit-wip-after-save-local-mode-turn-on92,3158
(define-globalized-minor-mode magit-wip-after-save-modemagit-wip-after-save-mode99,3373
(defun magit-wip-commit-buffer-file ()magit-wip-commit-buffer-file104,3563
(define-minor-mode magit-wip-after-apply-modemagit-wip-after-apply-mode119,4172
(defun magit-wip-commit-after-apply (&optional files msg)magit-wip-commit-after-apply133,4698
(define-minor-mode magit-wip-before-change-modemagit-wip-before-change-mode138,4842
(defun magit-wip-commit-before-change (&optional files msg)magit-wip-commit-before-change155,5537
(defun magit-wip-commit (&optional files msg)magit-wip-commit162,5708
(defun magit-wip-commit-index (ref files msg &optional cached-only)magit-wip-commit-index178,6346
(defun magit-wip-commit-worktree (ref files msg)magit-wip-commit-worktree187,6816
(defun magit-wip-update-wipref (wipref tree parent files msg start-msg)magit-wip-update-wipref199,7412
(defun magit-wip-get-ref ()magit-wip-get-ref220,8478
(defun magit-wip-get-parent (ref wipref)magit-wip-get-parent225,8621
(defun magit-wip-log-current (branch args files count)magit-wip-log-current234,8836
(defun magit-wip-log (branch args files count)magit-wip-log245,9325
(defun magit-wip-log-get-tips (wipref count)magit-wip-log-get-tips272,10506

elpa/magit-20180610.1519/magit-section.el,7962
(defvar magit-keep-region-overlay)magit-keep-region-overlay43,1567
(defgroup magit-section nilmagit-section47,1616
(defcustom magit-section-show-child-count tmagit-section-show-child-count52,1726
(defcustom magit-section-movement-hookmagit-section-movement-hook59,1979
(defcustom magit-section-highlight-hookmagit-section-highlight-hook75,2607
(defcustom magit-section-unhighlight-hookmagit-section-unhighlight-hook89,3087
(defcustom magit-section-set-visibility-hookmagit-section-set-visibility-hook101,3573
(defcustom magit-section-cache-visibility tmagit-section-cache-visibility115,4164
(defcustom magit-section-initial-visibility-alist nilmagit-section-initial-visibility-alist132,4892
(defface magit-section-highlightmagit-section-highlight154,5885
(defface magit-section-headingmagit-section-heading160,6114
(defface magit-section-secondary-heading '((t :weight bold))magit-section-secondary-heading166,6368
(defface magit-section-heading-selectionmagit-section-heading-selection170,6511
(defclass magit-section ()magit-section178,6758
(defclass magit-file-section (magit-section)magit-file-section190,7132
(defclass magit-hunk-section (magit-section)magit-hunk-section194,7236
(defvar-local magit-root-section nilmagit-root-section197,7312
(defun magit-current-section ()magit-current-section204,7585
(defun magit-section-ident (section)magit-section-ident208,7721
(defun magit-get-section (ident &optional root)magit-get-section227,8717
(defun magit-section-lineage (section)magit-section-lineage243,9330
(defvar magit-insert-section--current nil "For internal use only.")magit-insert-section--current248,9511
(defvar magit-insert-section--parent  nil "For internal use only.")magit-insert-section--parent249,9579
(defvar magit-insert-section--oldroot nil "For internal use only.")magit-insert-section--oldroot250,9647
(defun magit-section-forward ()magit-section-forward255,9744
(defun magit-section-backward ()magit-section-backward274,10517
(defun magit-section-up ()magit-section-up312,12094
(defun magit-section-forward-sibling ()magit-section-forward-sibling319,12306
(defun magit-section-backward-sibling ()magit-section-backward-sibling330,12719
(defun magit-section-goto (arg)magit-section-goto341,13143
(defun magit-section-set-window-start (section)magit-section-set-window-start348,13369
(defun magit-hunk-set-window-start (section)magit-hunk-set-window-start353,13585
(defmacro magit-define-section-jumper (name heading type &optional value)magit-define-section-jumper359,13839
(defun magit-section-show (section)magit-section-show379,14631
(defun magit-section-hide (section)magit-section-hide404,15624
(defun magit-section-toggle (section)magit-section-toggle418,16166
(defun magit-section-toggle-children (section)magit-section-toggle-children428,16536
(defun magit-section-show-children (section &optional depth)magit-section-show-children438,16917
(defun magit-section-show-children-1 (section &optional depth)magit-section-show-children-1446,17247
(defun magit-section-hide-children (section)magit-section-hide-children455,17565
(defun magit-section-show-headings (section)magit-section-show-headings460,17780
(defun magit-section-show-headings-1 (section)magit-section-show-headings-1468,18083
(defun magit-section-cycle (section)magit-section-cycle475,18326
(defun magit-section-cycle-global ()magit-section-cycle-global491,19009
(defun magit-section-cycle-diffs ()magit-section-cycle-diffs503,19529
(defun magit-section-hidden-body (section &optional pred)magit-section-hidden-body531,20830
(defun magit-section-invisible-p (section)magit-section-invisible-p537,21055
(defun magit-section-show-level (level)magit-section-show-level545,21374
(defun magit-section-show-level-1 ()magit-section-show-level-1564,22169
(defun magit-section-show-level-1-all ()magit-section-show-level-1-all569,22301
(defun magit-section-show-level-2 ()magit-section-show-level-2574,22430
(defun magit-section-show-level-2-all ()magit-section-show-level-2-all579,22566
(defun magit-section-show-level-3 ()magit-section-show-level-3584,22699
(defun magit-section-show-level-3-all ()magit-section-show-level-3-all589,22834
(defun magit-section-show-level-4 ()magit-section-show-level-4594,22966
(defun magit-section-show-level-4-all ()magit-section-show-level-4-all599,23102
(defun magit-describe-section ()magit-describe-section606,23251
(defun magit-section-match-1 (condition type-list)magit-section-match-1645,24735
(defun magit-section-match-2 (l1 l2)magit-section-match-2653,25066
(defmacro magit-section-when (condition &rest body)magit-section-when663,25390
(defmacro magit-section-case (&rest clauses)magit-section-case684,26332
(defun magit-section-match-assoc (section alist)magit-section-match-assoc710,27509
(defvar magit-insert-section-hook nilmagit-insert-section-hook719,27826
(defmacro magit-insert-section (&rest args)magit-insert-section724,28024
(defun magit-cancel-section ()magit-cancel-section837,33203
(defun magit-insert-heading (&rest args)magit-insert-heading846,33538
(defvar magit-insert-headers--hook nil "For internal use only.")magit-insert-headers--hook884,35289
(defvar magit-insert-headers--beginning nil "For internal use only.")magit-insert-headers--beginning885,35354
(defun magit-insert-headers (hooks)magit-insert-headers887,35425
(defun magit-insert-remaining-headers ()magit-insert-remaining-headers900,35958
(defun magit-insert-child-count (section)magit-insert-child-count908,36251
(defvar-local magit-section-highlight-overlays nil)magit-section-highlight-overlays931,37101
(defvar-local magit-section-highlighted-section nil)magit-section-highlighted-section932,37153
(defvar-local magit-section-highlighted-sections nil)magit-section-highlighted-sections933,37206
(defvar-local magit-section-unhighlight-sections nil)magit-section-unhighlight-sections934,37260
(defun magit-section-update-region (_)magit-section-update-region936,37315
(defun magit-section-update-highlight ()magit-section-update-highlight944,37728
(defun magit-section-highlight (section selection)magit-section-highlight969,38886
(defun magit-section-highlight-selection (_ selection)magit-section-highlight-selection985,39646
(defun magit-section-make-overlay (start end face)magit-section-make-overlay1007,40603
(defun magit-section-goto-successor (section line char arg)magit-section-goto-successor1021,41222
(defun magit-section-goto-successor-1 (section)magit-section-goto-successor-11059,43073
(defvar-local magit-section-visibility-cache nil)magit-section-visibility-cache1076,43778
(defun magit-section-cached-visibility (section)magit-section-cached-visibility1079,43886
(defun magit-preserve-section-visibility-cache ()magit-preserve-section-visibility-cache1097,44615
(defun magit-restore-section-visibility-cache (mode)magit-restore-section-visibility-cache1103,44853
(defun magit-section-parent-value (section)magit-section-parent-value1119,45486
(defun magit-section-siblings (section &optional direction)magit-section-siblings1123,45600
(defun magit-region-values (&optional types multiple)magit-region-values1137,46193
(defun magit-region-sections (&optional types multiple)magit-region-sections1149,46739
(defun magit-section-position-in-heading-p (&optional section pos)magit-section-position-in-heading-p1198,49002
(defun magit-section-internal-region-p (&optional section)magit-section-internal-region-p1212,49446
(defun magit-section--backward-protected ()magit-section--backward-protected1224,50056
(defun magit-section--backward-find (predicate)magit-section--backward-find1236,50511
(defun magit-wash-sequence (function)magit-wash-sequence1245,50822
(defun magit-add-section-hook (hook function &optional at append local)magit-add-section-hook1250,51029
(defun magit-run-section-hook (hook)magit-run-section-hook1307,53584

elpa/magit-20180610.1519/magit-margin.el,1216
(defgroup magit-margin nilmagit-margin38,1302
(defvar-local magit-buffer-margin nil)magit-buffer-margin52,1924
(defvar-local magit-set-buffer-margin-refresh nil)magit-set-buffer-margin-refresh55,2010
(defvar magit--age-spec)magit--age-spec57,2062
(defun magit-toggle-margin ()magit-toggle-margin74,2723
(defun magit-cycle-margin-style ()magit-cycle-margin-style82,2991
(defun magit-toggle-margin-details ()magit-toggle-margin-details97,3583
(defun magit-buffer-margin-p ()magit-buffer-margin-p108,3904
(defun magit-margin-option ()magit-margin-option111,3966
(defun magit-set-buffer-margin (&optional reset refresh)magit-set-buffer-margin121,4369
(defun magit-set-window-margin (&optional window)magit-set-window-margin143,5427
(defun magit-make-margin-overlay (&optional string previous-line)magit-make-margin-overlay150,5737
(defun magit-maybe-make-margin-overlay ()magit-maybe-make-margin-overlay165,6369
(defun magit-margin-set-variable (mode symbol value)magit-margin-set-variable177,6792
(defconst magit-log-margin--custom-typemagit-log-margin--custom-type187,7147
(defvar magit--age-specmagit--age-spec200,7719
(defun magit--age (date &optional abbreviate)magit--age220,8564

elpa/magit-20180610.1519/magit-status.el,2287
(defvar bookmark-make-record-function)bookmark-make-record-function34,1101
(defgroup magit-status nilmagit-status38,1154
(defcustom magit-status-mode-hook nilmagit-status-mode-hook43,1294
(defcustom magit-status-headers-hookmagit-status-headers-hook48,1418
(defcustom magit-status-sections-hookmagit-status-sections-hook72,2271
(defcustom magit-status-show-hashes-in-headers nilmagit-status-show-hashes-in-headers94,2981
(defcustom magit-status-marginmagit-status-margin104,3323
(defun magit-init (directory)magit-init135,4531
(defun magit-status (&optional directory cache)magit-status163,5803
(defalias 'magit 'magit-statusmagit195,7316
(defun magit-status-internal (directory)magit-status-internal204,7629
(defvar magit--remotes-using-recent-git nil)magit--remotes-using-recent-git209,7790
(defun magit--tramp-asserts (directory)magit--tramp-asserts211,7836
(defvar magit-status-mode-mapmagit-status-mode-map246,9361
(define-derived-mode magit-status-mode magit-mode "Magit"magit-status-mode262,10082
(defun magit-status-refresh-buffer ()magit-status-refresh-buffer295,11199
(defun magit-status-maybe-update-revision-buffer (&optional _)magit-status-maybe-update-revision-buffer300,11381
(defun magit-status-maybe-update-blob-buffer (&optional _)magit-status-maybe-update-blob-buffer306,11671
(defun magit-insert-status-headers ()magit-insert-status-headers315,11980
(defvar magit-error-section-mapmagit-error-section-map323,12327
(defun magit-insert-error-header ()magit-insert-error-header329,12508
(defun magit-insert-diff-filter-header ()magit-insert-diff-filter-header346,13317
(defun magit-insert-tags-header ()magit-insert-tags-header423,16802
(defun magit-insert-user-header ()magit-insert-user-header449,17986
(defun magit-insert-repo-header ()magit-insert-repo-header459,18360
(defun magit-insert-remote-header ()magit-insert-remote-header465,18620
(defvar magit-untracked-section-mapmagit-untracked-section-map482,19297
(defun magit-insert-untracked-files ()magit-insert-untracked-files491,19604
(defun magit-insert-tracked-files ()magit-insert-tracked-files525,21200
(defun magit-insert-ignored-files ()magit-insert-ignored-files539,21773
(defun magit-insert-files (files directory)magit-insert-files553,22343

elpa/magit-20180610.1519/magit-imenu.el,1795
(defun magit-imenu--index-function (entry-types menu-types)magit-imenu--index-function41,1461
(defun magit-imenu--log-prev-index-position-function ()magit-imenu--log-prev-index-position-function82,3071
(defun magit-imenu--log-extract-index-name-function ()magit-imenu--log-extract-index-name-function92,3407
(defun magit-imenu--diff-prev-index-position-function ()magit-imenu--diff-prev-index-position-function106,3830
(defun magit-imenu--diff-extract-index-name-function ()magit-imenu--diff-extract-index-name-function118,4268
(defun magit-imenu--status-create-index-function ()magit-imenu--status-create-index-function129,4635
(defun magit-imenu--refs-create-index-function ()magit-imenu--refs-create-index-function140,4962
(defun magit-imenu--cherry-create-index-function ()magit-imenu--cherry-create-index-function151,5255
(defun magit-imenu--submodule-prev-index-position-function ()magit-imenu--submodule-prev-index-position-function162,5538
(defun magit-imenu--submodule-extract-index-name-function ()magit-imenu--submodule-extract-index-name-function170,5796
(defun magit-imenu--repolist-prev-index-position-function ()magit-imenu--repolist-prev-index-position-function180,6093
(defun magit-imenu--repolist-extract-index-name-function ()magit-imenu--repolist-extract-index-name-function188,6344
(defun magit-imenu--process-prev-index-position-function ()magit-imenu--process-prev-index-position-function201,6740
(defun magit-imenu--process-extract-index-name-function ()magit-imenu--process-extract-index-name-function210,7055
(defun magit-imenu--rebase-prev-index-position-function ()magit-imenu--rebase-prev-index-position-function221,7426
(defun magit-imenu--rebase-extract-index-name-function ()magit-imenu--rebase-extract-index-name-function232,7766

elpa/magit-20180610.1519/magit-subtree.el,781
(defun magit-subtree-read-prefix (prompt &optional default)magit-subtree-read-prefix55,2129
(defun magit-subtree-prefix (prompt)magit-subtree-prefix68,2637
(defun magit-subtree-args ()magit-subtree-args74,2841
(defun magit-git-subtree (subcmd prefix &rest args)magit-git-subtree87,3424
(defun magit-subtree-add (prefix repository ref args)magit-subtree-add91,3567
(defun magit-subtree-add-commit (prefix commit args)magit-subtree-add-commit102,3997
(defun magit-subtree-merge (prefix commit args)magit-subtree-merge110,4312
(defun magit-subtree-pull (prefix repository ref args)magit-subtree-pull118,4630
(defun magit-subtree-push (prefix repository ref args)magit-subtree-push129,5066
(defun magit-subtree-split (prefix commit args)magit-subtree-split138,5500

elpa/magit-20180610.1519/magit-core.el,566
(defgroup magit nilmagit42,1454
(defgroup magit-essentials nilmagit-essentials49,1628
(defgroup magit-miscellaneous nilmagit-miscellaneous61,2022
(defgroup magit-commands nilmagit-commands65,2106
(defgroup magit-git-arguments nilmagit-git-arguments69,2207
(defgroup magit-modes nilmagit-modes82,2734
(defgroup magit-buffers nilmagit-buffers86,2815
(defgroup magit-refresh nilmagit-refresh91,2947
(defgroup magit-faces nilmagit-faces97,3142
(defgroup magit-extensions nilmagit-extensions102,3227
(defgroup magit-related nilmagit-related114,3792

elpa/magit-20180610.1519/magit-git.el,16789
(defvar magit-process-error-message-regexps)magit-process-error-message-regexps44,1624
(defvar magit-refresh-args) ; from `magit-mode' for `magit-current-file'magit-refresh-args45,1669
(defvar magit-branch-prefer-remote-upstream)magit-branch-prefer-remote-upstream46,1742
(defvar magit-published-branches)magit-published-branches47,1787
(defvar magit-tramp-process-environment nil)magit-tramp-process-environment49,1822
(defgroup magit-process nilmagit-process54,1948
(defvar magit-git-environmentmagit-git-environment58,2046
(defcustom magit-git-output-coding-systemmagit-git-output-coding-system62,2192
(defvar magit-git-w32-path-hack nilmagit-git-w32-path-hack74,2659
(defcustom magit-git-executablemagit-git-executable80,2874
(defcustom magit-git-global-argumentsmagit-git-global-arguments130,5456
(defvar magit-git-debug nilmagit-git-debug153,6407
(defcustom magit-prefer-remote-upstream nilmagit-prefer-remote-upstream172,7164
(defcustom magit-list-refs-sortby nilmagit-list-refs-sortby186,7745
(defvar magit--refresh-cache nil)magit--refresh-cache213,8910
(defmacro magit--with-refresh-cache (key &rest body)magit--with-refresh-cache215,8945
(defmacro magit-with-editor (&rest body)magit-with-editor230,9503
(defun magit-process-git-arguments (args)magit-process-git-arguments249,10452
(defun magit-git-exit-code (&rest args)magit-git-exit-code269,11238
(defun magit-git-success (&rest args)magit-git-success274,11440
(defun magit-git-failure (&rest args)magit-git-failure278,11577
(defun magit-git-str (&rest args)magit-git-str282,11714
(defun magit-git-output (&rest args)magit-git-output296,12330
(define-error 'magit-invalid-git-boolean "Not a Git boolean")magit-invalid-git-boolean305,12719
(defun magit-git-true (&rest args)magit-git-true307,12782
(defun magit-git-false (&rest args)magit-git-false316,13134
(defun magit-git-insert (&rest args)magit-git-insert325,13487
(defun magit-git-string (&rest args)magit-git-string362,15359
(defun magit-git-lines (&rest args)magit-git-lines374,15836
(defun magit-git-items (&rest args)magit-git-items384,16211
(defun magit-git-wash (washer &rest args)magit-git-wash394,16592
(defun magit-git-version (&optional raw)magit-git-version417,17412
(defun magit--safe-default-directory (&optional file)magit--safe-default-directory425,17706
(defmacro magit--with-safe-default-directory (file &rest body)magit--with-safe-default-directory437,18166
(defun magit-git-dir (&optional path)magit-git-dir442,18358
(defvar magit--separated-gitdirs nil)magit--separated-gitdirs456,19065
(defun magit--record-separated-gitdir ()magit--record-separated-gitdir458,19104
(defun magit-toplevel (&optional directory)magit-toplevel471,19779
(defmacro magit-with-toplevel (&rest body)magit-with-toplevel550,23985
(define-error 'magit-outside-git-repo "Not inside Git repository")magit-outside-git-repo559,24295
(define-error 'magit-git-executable-not-foundmagit-git-executable-not-found560,24362
(defun magit--not-inside-repository-error ()magit--not-inside-repository-error563,24482
(defun magit-inside-gitdir-p (&optioal noerror)magit-inside-gitdir-p568,24698
(defun magit-inside-worktree-p (&optional noerror)magit-inside-worktree-p582,25410
(defun magit-bare-repo-p (&optional noerror)magit-bare-repo-p594,25958
(defun magit--assert-default-directory (&optional noerror)magit--assert-default-directory606,26485
(defun magit-git-repo-p (directory &optional non-bare)magit-git-repo-p617,26934
(defvar-local magit-buffer-revision  nil)magit-buffer-revision629,27566
(defvar-local magit-buffer-refname   nil)magit-buffer-refname630,27608
(defvar-local magit-buffer-file-name nil)magit-buffer-file-name631,27650
(defun magit-file-relative-name (&optional file tracked)magit-file-relative-name636,27840
(defun magit-file-tracked-p (file)magit-file-tracked-p657,28771
(defun magit-list-files (&rest args)magit-list-files660,28864
(defun magit-tracked-files ()magit-tracked-files663,28966
(defun magit-untracked-files (&optional all files)magit-untracked-files666,29030
(defun magit-unstaged-files (&optional nomodules files)magit-unstaged-files669,29159
(defun magit-staged-files (&optional nomodules files)magit-staged-files674,29356
(defun magit-staged-binary-files ()magit-staged-binary-files679,29578
(defun magit-unmerged-files ()magit-unmerged-files685,29831
(defun magit-ignored-files ()magit-ignored-files688,29934
(defun magit-revision-files (rev)magit-revision-files692,30079
(defun magit-changed-files (rev-or-range &optional other-rev)magit-changed-files696,30199
(defun magit-renamed-files (revA revB)magit-renamed-files704,30616
(defun magit-file-status (&rest args)magit-file-status710,30841
(defcustom magit-cygwin-mount-pointsmagit-cygwin-mount-points729,31544
(defun magit-expand-git-file-name (filename)magit-expand-git-file-name752,32787
(defun magit-convert-filename-for-git (filename)magit-convert-filename-for-git761,33144
(defun magit-decode-git-path (path)magit-decode-git-path774,33721
(defun magit-file-at-point ()magit-file-at-point782,34001
(defun magit-current-file ()magit-current-file787,34126
(defun magit-no-commit-p ()magit-no-commit-p795,34324
(defun magit-merge-commit-p (commit)magit-merge-commit-p799,34454
(defun magit-anything-staged-p (&optional ignore-submodules &rest files)magit-anything-staged-p803,34582
(defun magit-anything-unstaged-p (&optional ignore-submodules &rest files)magit-anything-unstaged-p811,34931
(defun magit-anything-modified-p (&optional ignore-submodules &rest files)magit-anything-modified-p819,35273
(defun magit-anything-unmerged-p (&rest files)magit-anything-unmerged-p826,35618
(defun magit-module-worktree-p (module)magit-module-worktree-p832,35854
(defun magit-module-no-worktree-p (module)magit-module-no-worktree-p836,35992
(defun magit-rev-parse (&rest args)magit-rev-parse841,36108
(defun magit-rev-parse-safe (&rest args)magit-rev-parse-safe846,36293
(defun magit-rev-parse-true (&rest args)magit-rev-parse-true852,36534
(defun magit-rev-parse-false (&rest args)magit-rev-parse-false858,36762
(defun magit-rev-parse-p (&rest args)magit-rev-parse-p864,36992
(defun magit-rev-verify (rev)magit-rev-verify870,37250
(defun magit-rev-verify-commit (rev)magit-rev-verify-commit873,37322
(defun magit-rev-equal (a b)magit-rev-equal877,37468
(defun magit-rev-eq (a b)magit-rev-eq880,37542
(defun magit-rev-ancestor-p (a b)magit-rev-ancestor-p884,37631
(defun magit-rev-head-p (rev)magit-rev-head-p888,37781
(defun magit-rev-author-p (rev)magit-rev-author-p895,37986
(defun magit-rev-name (rev &optional pattern)magit-rev-name903,38335
(defun magit-rev-branch (rev)magit-rev-branch923,39317
(defun magit-get-shortname (rev)magit-get-shortname927,39443
(defun magit-name-branch (rev &optional lax)magit-name-branch940,39972
(defun magit-name-local-branch (rev &optional lax)magit-name-local-branch946,40198
(defun magit-name-remote-branch (rev &optional lax)magit-name-remote-branch950,40357
(defun magit-name-tag (rev &optional lax)magit-name-tag955,40542
(defun magit-ref-fullname (name)magit-ref-fullname960,40714
(defun magit-ref-ambiguous-p (name)magit-ref-ambiguous-p971,41174
(defun magit-ref-exists-p (ref)magit-ref-exists-p980,41448
(defun magit-ref-equal (a b)magit-ref-equal983,41530
(defun magit-ref-eq (a b)magit-ref-eq990,41784
(defun magit-headish ()magit-headish1003,42246
(defun magit-branch-at-point ()magit-branch-at-point1009,42417
(defun magit-local-branch-at-point ()magit-local-branch-at-point1014,42552
(defun magit-remote-branch-at-point ()magit-remote-branch-at-point1021,42834
(defun magit-commit-at-point ()magit-commit-at-point1028,43093
(defun magit-branch-or-commit-at-point ()magit-branch-or-commit-at-point1033,43248
(defun magit-tag-at-point ()magit-tag-at-point1047,43816
(defun magit-stash-at-point ()magit-stash-at-point1052,43945
(defun magit-remote-at-point ()magit-remote-at-point1055,44007
(defun magit-module-at-point (&optional predicate)magit-module-at-point1060,44138
(defun magit-get-current-branch ()magit-get-current-branch1072,44547
(defvar magit-get-previous-branch-timeout 0.5magit-get-previous-branch-timeout1077,44747
(defun magit-get-previous-branch ()magit-get-previous-branch1081,44883
(defun magit-get-upstream-ref (&optional branch)magit-get-upstream-ref1098,45604
(defun magit-get-upstream-branch (&optional branch verify)magit-get-upstream-branch1107,46054
(defun magit-get-indirect-upstream-branch (branch &optional force)magit-get-indirect-upstream-branch1126,47073
(defun magit-get-upstream-remote (&optional branch)magit-get-upstream-remote1145,47962
(defun magit-get-push-remote (&optional branch)magit-get-push-remote1149,48121
(defun magit-get-push-branch (&optional branch verify)magit-get-push-branch1154,48328
(defun magit-get-@{push}-branch (&optional branch)magit-get-@{push}-branch1162,48673
(defun magit-get-remote (&optional branch)magit-get-remote1168,48923
(defun magit-get-some-remote (&optional branch)magit-get-some-remote1174,49137
(defun magit-branch-merged-p (branch &optional target)magit-branch-merged-p1182,49413
(defun magit-split-branch-name (branch)magit-split-branch-name1203,50374
(defun magit-get-current-tag (&optional rev with-distance)magit-get-current-tag1215,50923
(defun magit-get-next-tag (&optional rev with-distance)magit-get-next-tag1234,51762
(defvar magit-list-refs-namespacesmagit-list-refs-namespaces1251,52508
(defun magit-list-refs (&optional namespaces format sortby)magit-list-refs1254,52602
(defun magit-list-branches ()magit-list-branches1279,53783
(defun magit-list-local-branches ()magit-list-local-branches1282,53870
(defun magit-list-remote-branches (&optional remote)magit-list-remote-branches1285,53941
(defun magit-list-related-branches (relation &optional commit arg)magit-list-related-branches1288,54048
(defun magit-list-containing-branches (&optional commit arg)magit-list-containing-branches1293,54281
(defun magit-list-publishing-branches (&optional commit)magit-list-publishing-branches1296,54400
(defun magit-list-merged-branches (&optional commit arg)magit-list-merged-branches1300,54572
(defun magit-list-unmerged-branches (&optional commit arg)magit-list-unmerged-branches1303,54685
(defun magit-list-unmerged-to-upstream-branches ()magit-list-unmerged-to-upstream-branches1306,54803
(defun magit-list-branches-pointing-at (commit)magit-list-branches-pointing-at1311,55032
(defun magit-list-refnames (&optional namespaces)magit-list-refnames1320,55421
(defun magit-list-branch-names ()magit-list-branch-names1323,55523
(defun magit-list-local-branch-names ()magit-list-local-branch-names1326,55618
(defun magit-list-remote-branch-names (&optional remote relative)magit-list-remote-branch-names1329,55697
(defun magit-format-refs (format &rest args)magit-format-refs1337,56071
(defun magit-list-remotes ()magit-list-remotes1345,56381
(defun magit-list-tags ()magit-list-tags1348,56441
(defun magit-list-stashes (&optional format)magit-list-stashes1351,56495
(defun magit-list-active-notes-refs ()magit-list-active-notes-refs1354,56616
(defun magit-list-notes-refnames ()magit-list-notes-refnames1360,56916
(defun magit-remote-list-tags (remote)magit-remote-list-tags1363,57016
(defun magit-remote-list-branches (remote)magit-remote-list-branches1368,57198
(defun magit-remote-list-refs (remote)magit-remote-list-refs1373,57385
(defun magit-list-module-paths ()magit-list-module-paths1378,57558
(defun magit-get-submodule-name (path)magit-get-submodule-name1383,57771
(defun magit-list-worktrees ()magit-list-worktrees1395,58284
(defun magit-symbolic-ref-p (name)magit-symbolic-ref-p1420,59611
(defun magit-ref-p (rev)magit-ref-p1423,59700
(defun magit-branch-p (rev)magit-branch-p1427,59818
(defun magit-local-branch-p (rev)magit-local-branch-p1431,59947
(defun magit-remote-branch-p (rev)magit-remote-branch-p1435,60094
(defun magit-branch-set-face (branch)magit-branch-set-face1439,60244
(defun magit-tag-p (rev)magit-tag-p1444,60448
(defun magit-remote-p (string)magit-remote-p1447,60514
(defun magit-rev-diff-count (a b)magit-rev-diff-count1450,60592
(defun magit-abbrev-length ()magit-abbrev-length1459,60965
(defun magit-abbrev-arg (&optional arg)magit-abbrev-arg1470,61496
(defun magit-rev-abbrev (rev)magit-rev-abbrev1473,61599
(defun magit-commit-children (commit &optional args)magit-commit-children1476,61682
(defun magit-commit-parents (commit)magit-commit-parents1485,62054
(defun magit-patch-id (rev)magit-patch-id1489,62190
(defun magit-rev-format (format &optional rev args)magit-rev-format1497,62495
(defun magit-rev-insert-format (format &optional rev args)magit-rev-insert-format1504,62790
(defun magit-format-rev-summary (rev)magit-format-rev-summary1509,63011
(defvar magit-ref-namespacesmagit-ref-namespaces1515,63197
(defun magit-format-ref-labels (string)magit-format-ref-labels1537,64297
(defun magit-object-type (object)magit-object-type1611,67978
(defmacro magit-with-blob (commit file &rest body)magit-with-blob1614,68058
(defmacro magit-with-temp-index (tree arg &rest body)magit-with-temp-index1626,68477
(defun magit-commit-tree (message &optional tree &rest parents)magit-commit-tree1649,69622
(defun magit-commit-worktree (message &optional arg &rest other-parents)magit-commit-worktree1656,69955
(defun magit-update-files (files)magit-update-files1661,70191
(defun magit-update-ref (ref message rev &optional stashish)magit-update-ref1664,70294
(defconst magit-range-remagit-range-re1685,71398
(defun magit-split-range (range)magit-split-range1690,71573
(defvar magit-thingatpt--git-revision-chars "-./[:alnum:]@{}^~!"magit-thingatpt--git-revision-chars1699,71926
(defun magit-thingatpt--git-revision ()magit-thingatpt--git-revision1717,72495
(defvar magit-revision-history nil)magit-revision-history1724,72727
(defun magit-read-branch (prompt &optional secondary-default)magit-read-branch1726,72764
(defun magit-read-branch-or-commit (prompt &optional secondary-default)magit-read-branch-or-commit1733,73103
(defun magit-read-range-or-commit (prompt &optional secondary-default)magit-read-range-or-commit1741,73533
(defun magit-read-range (prompt &optional default)magit-read-range1751,73874
(defun magit-read-remote-branchmagit-read-remote-branch1757,74138
(defun magit-read-refspec (prompt remote)magit-read-refspec1772,74878
(defun magit-read-local-branch (prompt &optional secondary-default)magit-read-local-branch1778,75164
(defun magit-read-local-branch-or-commit (prompt)magit-read-local-branch-or-commit1785,75521
(defun magit-read-local-branch-or-ref (prompt &optional secondary-default)magit-read-local-branch-or-ref1794,75975
(defun magit-read-other-branchmagit-read-other-branch1802,76412
(defun magit-read-other-branch-or-commitmagit-read-other-branch-or-commit1815,77061
(defun magit-read-other-local-branchmagit-read-other-local-branch1828,77712
(defun magit-read-branch-prefer-other (prompt)magit-read-branch-prefer-other1842,78406
(defun magit-read-starting-point (prompt &optional branch)magit-read-starting-point1874,79946
(defun magit--default-starting-point ()magit--default-starting-point1891,80642
(defun magit-read-tag (prompt &optional require-match)magit-read-tag1899,80932
(defun magit-read-stash (prompt)magit-read-stash1904,81157
(defun magit-read-remote (prompt &optional default use-only)magit-read-remote1910,81381
(defun magit-read-remote-or-url (prompt &optional default)magit-read-remote-or-url1920,81793
(defun magit-read-module-path (prompt &optional predicate)magit-read-module-path1929,82187
(defun magit-module-confirm (verb &optional predicate)magit-module-confirm1934,82411
(defun magit-config-get-from-cached-list (key)magit-config-get-from-cached-list1962,83551
(defun magit-get (&rest keys)magit-get1977,84261
(defun magit-get-all (&rest keys)magit-get-all1981,84396
(defun magit-get-boolean (&rest keys)magit-get-boolean1992,84850
(defun magit-set (value &rest keys)magit-set1999,85170
(defun magit-set-all (values &rest keys)magit-set-all2013,85652
(defun magit--format-popup-variable:value (variable width &optional global)magit--format-popup-variable:value2026,86119
(defun magit--format-popup-variable:values (variable width &optional global)magit--format-popup-variable:values2033,86490
(defun magit--set-popup-variablemagit--set-popup-variable2047,87161
(defun magit--format-popup-variable:choicesmagit--format-popup-variable:choices2059,87585
(defun magit--format-popup-variable:choices*magit--format-popup-variable:choices*2066,87867

elpa/magit-20180610.1519/magit.el,2614
(defconst magit--minimal-git "1.9.4")magit--minimal-git64,2267
(defconst magit--minimal-emacs "25.1")magit--minimal-emacs65,2305
(defface magit-header-linemagit-header-line69,2356
(defface magit-header-line-keymagit-header-line-key77,2633
(defface magit-dimmedmagit-dimmed82,2762
(defface magit-hashmagit-hash88,2977
(defface magit-tagmagit-tag94,3192
(defface magit-branch-remotemagit-branch-remote100,3418
(defface magit-branch-remote-headmagit-branch-remote-head106,3672
(defface magit-branch-localmagit-branch-local112,3914
(defface magit-branch-currentmagit-branch-current118,4129
(defface magit-headmagit-head124,4365
(defface magit-refnamemagit-refname130,4586
(defface magit-refname-stashmagit-refname-stash136,4806
(defface magit-refname-wipmagit-refname-wip141,4918
(defface magit-keywordmagit-keyword146,5028
(defface magit-signature-goodmagit-signature-good151,5170
(defface magit-signature-badmagit-signature-bad156,5283
(defface magit-signature-untrustedmagit-signature-untrusted161,5405
(defface magit-signature-expiredmagit-signature-expired166,5532
(defface magit-signature-expired-keymagit-signature-expired-key171,5662
(defface magit-signature-revokedmagit-signature-revoked176,5813
(defface magit-signature-errormagit-signature-error181,5951
(defface magit-cherry-unmatchedmagit-cherry-unmatched186,6107
(defface magit-cherry-equivalentmagit-cherry-equivalent191,6230
(defface magit-filenamemagit-filename196,6358
(defvar magit-dispatch-popup-mapmagit-dispatch-popup-map264,9756
(defun magit-dispatch-popup-setup (val def)magit-dispatch-popup-setup276,10233
(defcustom magit-shell-command-verbose-prompt tmagit-shell-command-verbose-prompt291,10860
(defvar magit-git-command-history nil)magit-git-command-history299,11176
(defun magit-git-command (command)magit-git-command316,11978
(defun magit-git-command-topdir (command)magit-git-command-topdir328,12437
(defun magit-shell-command (command)magit-shell-command340,12861
(defun magit-shell-command-topdir (command)magit-shell-command-topdir350,13233
(defun magit--shell-command (command &optional directory)magit--shell-command358,13559
(defun magit-read-shell-command (&optional toplevel initial-input)magit-read-shell-command366,13904
(defconst magit-font-lock-keywordsmagit-font-lock-keywords379,14472
(defvar magit-version 'undefinedmagit-version400,15262
(defun magit-version (&optional print-dest)magit-version405,15416
(defun magit-debug-git-executable ()magit-debug-git-executable487,19082
(defun magit-startup-asserts ()magit-startup-asserts523,20874

elpa/magit-20180610.1519/magit-tag.el,248
(defun magit-tag (name rev &optional args)magit-tag46,1580
(defun magit-tag-delete (tags)magit-tag-delete59,2122
(defun magit-tag-prune (tags remote-tags remote)magit-tag-prune71,2603
(defun magit-tag-release (tag)magit-tag-release100,3726

elpa/magit-20180610.1519/magit-extras.el,2227
(defgroup magit-extras nilmagit-extras31,1050
(defcustom magit-gitk-executablemagit-gitk-executable37,1166
(defun magit-run-git-gui ()magit-run-git-gui50,1610
(defun magit-run-git-gui-blame (commit filename &optional linenum)magit-run-git-gui-blame57,1807
(defun magit-run-gitk ()magit-run-gitk82,2956
(defun magit-run-gitk-branches ()magit-run-gitk-branches88,3107
(defun magit-run-gitk-all ()magit-run-gitk-all94,3295
(defun ido-enter-magit-status ()ido-enter-magit-status102,3485
(defun magit-dired-jump (&optional other-window)magit-dired-jump124,4199
(defun magit-dired-log (&optional follow)magit-dired-log137,4817
(defun magit-do-async-shell-command (file)magit-do-async-shell-command159,5693
(defun magit--turn-on-shift-select-mode-p ()magit--turn-on-shift-select-mode-p172,6167
(defun magit-previous-line (&optional arg try-vscroll)magit-previous-line179,6377
(defun magit-next-line (&optional arg try-vscroll)magit-next-line202,7410
(defun magit-clean (&optional arg)magit-clean226,8388
(defun magit-gitignore (file-or-pattern &optional local)magit-gitignore253,9347
(defun magit-gitignore-locally (file-or-pattern)magit-gitignore-locally277,10248
(defun magit-gitignore-read-pattern (local)magit-gitignore-read-pattern282,10445
(defun magit-add-change-log-entry (&optional whoami file-name other-window)magit-add-change-log-entry305,11301
(defun magit-add-change-log-entry-other-window (&optional whoami file-name)magit-add-change-log-entry-other-window323,12012
(defun magit-edit-line-commit (&optional type)magit-edit-line-commit336,12556
(defun magit-diff-edit-hunk-commit ()magit-diff-edit-hunk-commit376,14425
(defun magit-reshelve-since (rev)magit-reshelve-since406,15626
(defvar magit-revision-stack nil)magit-revision-stack477,18852
(defcustom magit-pop-revision-stack-formatmagit-pop-revision-stack-format479,18887
(defun magit-pop-revision-stack (rev toplevel)magit-pop-revision-stack524,21148
(define-key git-commit-mode-mapgit-commit-mode-map599,24558
(defun magit-copy-section-value ()magit-copy-section-value603,24651
(defun magit-copy-buffer-revision ()magit-copy-buffer-revision641,26199
(defun magit-abort-dwim ()magit-abort-dwim688,28257

elpa/magit-20180610.1519/magit-stash.el,2933
(defvar bookmark-make-record-function)bookmark-make-record-function32,1048
(defgroup magit-stash nilmagit-stash36,1101
(defcustom magit-stash-sections-hookmagit-stash-sections-hook42,1209
(defcustom magit-stashes-marginmagit-stashes-margin54,1521
(defun magit-stash (message &optional include-untracked)magit-stash110,4068
(defun magit-stash-index (message)magit-stash-index119,4457
(defun magit-stash-worktree (message &optional include-untracked)magit-stash-worktree129,4884
(defun magit-stash-keep-index (message &optional include-untracked)magit-stash-keep-index138,5301
(defun magit-stash-read-args ()magit-stash-read-args146,5715
(defun magit-stash-read-untracked ()magit-stash-read-untracked150,5822
(defun magit-stash-read-message ()magit-stash-read-message156,6091
(defun magit-snapshot (&optional include-untracked)magit-snapshot165,6411
(defun magit-snapshot-index ()magit-snapshot-index174,6796
(defun magit-snapshot-worktree (&optional include-untracked)magit-snapshot-worktree181,6985
(defun magit-snapshot-read-args ()magit-snapshot-read-args189,7376
(defun magit-snapshot-save (index worktree untracked &optional refresh)magit-snapshot-save192,7451
(defun magit-stash-apply (stash)magit-stash-apply197,7657
(defun magit-stash-pop (stash)magit-stash-pop206,8037
(defun magit-stash-drop (stash)magit-stash-drop217,8496
(defun magit-stash-clear (ref)magit-stash-clear239,9488
(defun magit-stash-branch (stash branch)magit-stash-branch247,9817
(defun magit-stash-branch-here (stash branch)magit-stash-branch-here254,10087
(defun magit-stash-format-patch (stash)magit-stash-format-patch265,10548
(defun magit-stash-save (message index worktree untrackedmagit-stash-save274,10829
(defun magit-stash-store (message ref commit)magit-stash-store303,12228
(defun magit-stash-create (message index worktree untracked)magit-stash-create306,12318
(defun magit-stash-summary ()magit-stash-summary333,13801
(defvar magit-stashes-section-mapmagit-stashes-section-map339,13946
(defvar magit-stash-section-mapmagit-stash-section-map345,14128
(defun magit-stash-list ()magit-stash-list398,16222
(define-derived-mode magit-stashes-mode magit-reflog-mode "Magit Stashes"magit-stashes-mode403,16356
(defun magit-stash-show (stash &optional args files)magit-stash-show421,17028
(define-derived-mode magit-stash-mode magit-diff-mode "Magit Stash"magit-stash-mode430,17481
(defun magit-stash-refresh-buffer (stash _const _args _files)magit-stash-refresh-buffer437,17756
(defun magit-stash-insert-section (commit range message &optional files)magit-stash-insert-section446,18118
(defun magit-insert-stash-notes ()magit-insert-stash-notes454,18434
(defun magit-insert-stash-index ()magit-insert-stash-index466,18850
(defun magit-insert-stash-worktree ()magit-insert-stash-worktree473,19147
(defun magit-insert-stash-untracked ()magit-insert-stash-untracked480,19434

elpa/magit-20180610.1519/magit-bookmark.el,2614
(defun magit-bookmark--jump (bookmark fn &rest args)magit-bookmark--jump35,1121
(defun magit-bookmark--make-record (mode handler &optional make-props)magit-bookmark--make-record70,2552
(defun magit-bookmark--status-jump (bookmark)magit-bookmark--status-jump103,3765
(defun magit-bookmark--status-make-record ()magit-bookmark--status-make-record109,3958
(defun magit-bookmark--refs-jump (bookmark)magit-bookmark--refs-jump117,4151
(defun magit-bookmark--refs-make-record ()magit-bookmark--refs-make-record124,4388
(defun magit-bookmark--log-jump (bookmark)magit-bookmark--log-jump135,4656
(defun magit-bookmark--log-make-name (buffer-name revs _args files)magit-bookmark--log-make-name142,4916
(defun magit-bookmark--log-make-record ()magit-bookmark--log-make-record150,5191
(defun magit-bookmark--reflog-jump (bookmark)magit-bookmark--reflog-jump164,5612
(defun magit-bookmark--reflog-make-name (buffer-name ref)magit-bookmark--reflog-make-name171,5895
(defun magit-bookmark--reflog-make-record ()magit-bookmark--reflog-make-record176,6054
(defun magit-bookmark--stashes-jump (bookmark)magit-bookmark--stashes-jump188,6411
(defun magit-bookmark--stashes-make-record ()magit-bookmark--stashes-make-record193,6568
(defun magit-bookmark--cherry-jump (bookmark)magit-bookmark--cherry-jump201,6770
(defun magit-bookmark--cherry-make-name (buffer-name head upstream)magit-bookmark--cherry-make-name207,6997
(defun magit-bookmark--cherry-make-record ()magit-bookmark--cherry-make-record212,7189
(defun magit-bookmark--diff-jump (bookmark)magit-bookmark--diff-jump225,7604
(defun magit-bookmark--resolve (rev-or-range)magit-bookmark--resolve233,7927
(defun magit-bookmark--diff-make-namemagit-bookmark--diff-make-name255,8642
(defun magit-bookmark--diff-make-record ()magit-bookmark--diff-make-record268,9141
(defun magit-bookmark--revision-jump (bookmark)magit-bookmark--revision-jump284,9746
(defun magit-bookmark--revision-make-name (buffer-name rev _args files)magit-bookmark--revision-make-name291,10011
(defun magit-bookmark--revision-make-record ()magit-bookmark--revision-make-record300,10389
(defun magit-bookmark--stash-jump (bookmark)magit-bookmark--stash-jump317,11024
(defun magit-bookmark--stash-make-name (buffer-name stash _args files)magit-bookmark--stash-make-name324,11296
(defun magit-bookmark--stash-make-record ()magit-bookmark--stash-make-record332,11583
(defun magit-bookmark--submodules-jump (bookmark)magit-bookmark--submodules-jump355,12533
(defun magit-bookmark--submodules-make-record ()magit-bookmark--submodules-make-record360,12702

elpa/magit-20180610.1519/magit-collab.el,794
(defvar magit-github-token-scopes '(repo)magit-github-token-scopes42,1450
(defun magit-browse-pull-request (pr)magit-browse-pull-request63,2171
(defun magit-read-pull-request (prompt)magit-read-pull-request78,2741
(defun magit-upstream-repository ()magit-upstream-repository101,3947
(defun magit--forge-id (remote)magit--forge-id115,4497
(defconst magit--github-url-regexp "\magit--github-url-regexp120,4680
(defun magit--github-url-p (url)magit--github-url-p126,4838
(defun magit--github-remote-p (remote)magit--github-remote-p139,5439
(defun magit--github-url-equal (r1 r2)magit--github-url-equal145,5692
(defun magit--pullreq-from-upstream-p (pr)magit--pullreq-from-upstream-p154,6038
(defun magit--pullreq-branch (pr &optional assert-new)magit--pullreq-branch159,6165

elpa/magit-20180610.1519/magit-remote.el,5801
(defcustom magit-fetch-modules-jobs 4magit-fetch-modules-jobs36,1186
(defcustom magit-clone-set-remote-head nilmagit-clone-set-remote-head45,1446
(defcustom magit-clone-set-remote.pushDefault 'askmagit-clone-set-remote.pushDefault51,1633
(defun magit-clone (repository directory)magit-clone63,2035
(defcustom magit-remote-add-set-remote.pushDefault 'ask-if-unsetmagit-remote-add-set-remote.pushDefault98,3590
(defcustom magit-remote-popup-show-variables tmagit-remote-popup-show-variables113,4279
(defvar magit-remote-config-variables)magit-remote-config-variables124,4657
(defun magit-read-url (prompt &optional initial-input)magit-read-url146,5526
(defun magit-remote-add (remote url &optional args)magit-remote-add153,5734
(defun magit-remote-rename (old new)magit-remote-rename169,6480
(defun magit-remote-remove (remote)magit-remote-remove180,6867
(defun magit-remote--cleanup-push-variables (remote &optional new-name)magit-remote--cleanup-push-variables187,7106
(defconst magit--refspec-re "\\`\\(\\+\\)?\\([^:]+\\):\\(.*\\)\\'")magit--refspec-re196,7582
(defun magit-remote-prune (remote)magit-remote-prune199,7666
(defun magit-remote-prune-refspecs (remote)magit-remote-prune-refspecs205,7896
(defun magit-remote-set-head (remote &optional branch)magit-remote-set-head284,11635
(defun magit-remote-unset-head (remote)magit-remote-unset-head299,12309
(defvar magit-remote-config--remote nil)magit-remote-config--remote307,12612
(defun magit-remote-config-popup (remote)magit-remote-config-popup310,12669
(defvar magit-remote-config-variablesmagit-remote-config-variables321,13142
(defvar magit-remote-config-popupmagit-remote-config-popup342,13813
(defun magit-remote-config-popup-setup (val def)magit-remote-config-popup-setup347,13975
(defun magit-remote-config--remote (&optional prompt)magit-remote-config--remote351,14135
(defun magit-remote-config--remote-1 ()magit-remote-config--remote-1361,14477
(defun magit-set-remote*url (remote urls)magit-set-remote*url370,14722
(defun magit-set-remote*fetch (remote values)magit-set-remote*fetch375,14945
(defun magit-set-remote*pushurl (remote urls)magit-set-remote*pushurl381,15201
(defun magit-set-remote*push (remote values)magit-set-remote*push386,15449
(defun magit-cycle-remote*tagOpt (remote)magit-cycle-remote*tagOpt392,15700
(defun magit-format-remote*url ()magit-format-remote*url397,15919
(defun magit-format-remote*fetch ()magit-format-remote*fetch400,16002
(defun magit-format-remote*pushurl ()magit-format-remote*pushurl403,16089
(defun magit-format-remote*push ()magit-format-remote*push406,16180
(defun magit-format-remote*tagOpt ()magit-format-remote*tagOpt409,16265
(defun magit-remote-config--read-args (var prompt)magit-remote-config--read-args416,16502
(defun magit-remote-config--set-url (remote var values &optional arg)magit-remote-config--set-url428,17015
(defun magit-remote-config--format-variable (variable)magit-remote-config--format-variable437,17424
(defun magit-git-fetch (remote args)magit-git-fetch463,18477
(defun magit-fetch-from-pushremote (args)magit-fetch-from-pushremote468,18612
(defun magit-fetch-from-upstream (args)magit-fetch-from-upstream478,18991
(defun magit-fetch (remote args)magit-fetch488,19368
(defun magit-fetch-branch (remote branch args)magit-fetch-branch495,19588
(defun magit-fetch-refspec (remote refspec args)magit-fetch-refspec505,19936
(defun magit-fetch-all (args)magit-fetch-all515,20289
(defun magit-fetch-all-prune ()magit-fetch-all-prune524,20632
(defun magit-fetch-all-no-prune ()magit-fetch-all-no-prune533,20918
(defun magit-fetch-modules (&optional all)magit-fetch-modules540,21093
(defun magit-pull-format-branch*rebase ()magit-pull-format-branch*rebase632,25126
(defun magit-git-pull (source args)magit-git-pull638,25329
(defun magit-pull-from-pushremote (args)magit-pull-from-pushremote645,25548
(defun magit-pull-from-upstream (args)magit-pull-from-upstream655,25923
(defun magit-pull (source args)magit-pull667,26414
(defcustom magit-push-current-set-remote-if-missing tmagit-push-current-set-remote-if-missing675,26651
(defun magit-git-push (branch target args)magit-git-push731,29359
(defun magit-push-current-to-pushremote (args &optional push-remote)magit-push-current-to-pushremote739,29644
(defun magit--push-current-set-pushremote-p (&optional change)magit--push-current-set-pushremote-p769,31189
(defun magit--push-current-to-pushremote-desc ()magit--push-current-to-pushremote-desc775,31412
(defun magit-push-current-to-upstream (args &optional upstream)magit-push-current-to-upstream787,31858
(defun magit--push-current-set-upstream-p (&optional change)magit--push-current-set-upstream-p807,32713
(defun magit--push-current-to-upstream-desc ()magit--push-current-to-upstream-desc813,32938
(defun magit-push-current (target args)magit-push-current821,33236
(defun magit-push (source target args)magit-push832,33678
(defvar magit-push-refspecs-history nil)magit-push-refspecs-history850,34419
(defun magit-push-refspecs (remote refspecs args)magit-push-refspecs853,34476
(defun magit-push-matching (remote &optional args)magit-push-matching871,35257
(defun magit-push-tags (remote &optional args)magit-push-tags881,35706
(defun magit-push-tag (tag remote &optional args)magit-push-tag892,36159
(defun magit-push-implicitly (args)magit-push-implicitly902,36519
(defun magit-push-implicitly--desc ()magit-push-implicitly--desc926,37479
(defun magit-push-to-remote (remote args)magit-push-to-remote954,38804
(defun magit-push-to-remote--desc ()magit-push-to-remote--desc976,39722
(defun magit-format-patch (range args)magit-format-patch1006,40988
(defun magit-request-pull (url start end)magit-request-pull1032,42071

elpa/magit-20180610.1519/magit-process.el,5893
(defcustom magit-process-connection-type (not (eq system-type 'cygwin))magit-process-connection-type49,1535
(defcustom magit-need-cygwin-noglobmagit-need-cygwin-noglob58,1906
(defcustom magit-process-popup-time -1magit-process-popup-time82,2901
(defcustom magit-process-log-max 32magit-process-log-max89,3191
(defcustom magit-process-error-tooltip-max-lines 20magit-process-error-tooltip-max-lines99,3661
(defcustom magit-credential-cache-daemon-socketmagit-credential-cache-daemon-socket111,4114
(defcustom magit-process-yes-or-no-prompt-regexpmagit-process-yes-or-no-prompt-regexp149,6044
(defcustom magit-process-password-prompt-regexpsmagit-process-password-prompt-regexps156,6302
(defcustom magit-process-find-password-functions nilmagit-process-find-password-functions169,6827
(defcustom magit-process-username-prompt-regexpsmagit-process-username-prompt-regexps188,7687
(defcustom magit-process-ensure-unix-line-ending tmagit-process-ensure-unix-line-ending195,7932
(defcustom magit-process-display-mode-line-error tmagit-process-display-mode-line-error201,8138
(defface magit-process-okmagit-process-ok207,8350
(defface magit-process-ngmagit-process-ng212,8491
(defface magit-mode-line-processmagit-mode-line-process217,8634
(defface magit-mode-line-process-errormagit-mode-line-process-error222,8806
(defvar magit-process-mode-mapmagit-process-mode-map231,9021
(define-derived-mode magit-process-mode magit-mode "Magit Process"magit-process-mode237,9179
(defun magit-process-buffer (&optional nodisplay)magit-process-buffer246,9565
(defun magit-process-kill ()magit-process-kill282,11073
(defvar magit-process-raise-error nil)magit-process-raise-error294,11407
(defun magit-git (&rest args)magit-git296,11447
(defun magit-run-git (&rest args)magit-run-git309,11899
(defvar magit-pre-call-git-hook nil)magit-pre-call-git-hook329,12666
(defun magit-call-git (&rest args)magit-call-git331,12704
(defun magit-call-process (program &rest args)magit-call-process346,13299
(defun magit-process-file (&rest args)magit-process-file356,13752
(defun magit-process-environment ()magit-process-environment365,14137
(defvar magit-this-process nil)magit-this-process383,15003
(defun magit-run-git-with-input (&rest args)magit-run-git-with-input385,15036
(defun magit-run-git-with-logfile (file &rest args)magit-run-git-with-logfile421,16618
(defun magit-run-git-async (&rest args)magit-run-git-async430,16943
(defun magit-run-git-with-editor (&rest args)magit-run-git-with-editor447,17631
(defun magit-run-git-sequencer (&rest args)magit-run-git-sequencer462,18225
(defvar magit-pre-start-git-hook nil)magit-pre-start-git-hook480,18998
(defun magit-start-git (input &rest args)magit-start-git482,19037
(defun magit-start-process (program &optional input &rest args)magit-start-process504,19965
(defun magit-parse-git-async (&rest args)magit-parse-git-async558,22468
(defun magit-process-setup (program args)magit-process-setup579,23309
(defun magit-process-insert-section (pwd program args &optional errcode errlog)magit-process-insert-section587,23628
(defun magit-process-truncate-log ()magit-process-truncate-log622,25325
(defun magit-process-sentinel (process event)magit-process-sentinel643,26124
(defun magit-sequencer-process-sentinel (process event)magit-sequencer-process-sentinel661,26912
(defun magit-process-filter (proc string)magit-process-filter682,27967
(defmacro magit-process-kill-on-abort (proc &rest body)magit-process-kill-on-abort703,28915
(defun magit-process-yes-or-no-prompt (process string)magit-process-yes-or-no-prompt716,29357
(defun magit-process-password-auth-source (key)magit-process-password-auth-source731,29857
(defun magit-process-password-prompt (process string)magit-process-password-prompt742,30281
(defun magit-process-username-prompt (process string)magit-process-username-prompt759,31124
(defun magit-process-match-prompt (prompts string)magit-process-match-prompt767,31475
(defun magit--process-coding-system ()magit--process-coding-system776,31918
(defvar magit-credential-hook nilmagit-credential-hook785,32304
(defvar magit-credential-cache-daemon-process nil)magit-credential-cache-daemon-process788,32383
(defun magit-maybe-start-credential-cache-daemon ()magit-maybe-start-credential-cache-daemon790,32435
(defun tramp-sh-handle-start-file-process--magit-tramp-process-environmenttramp-sh-handle-start-file-process--magit-tramp-process-environment821,34070
(defun tramp-sh-handle-process-file--magit-tramp-process-environmenttramp-sh-handle-process-file--magit-tramp-process-environment833,34586
(defvar magit-mode-line-process-mapmagit-mode-line-process-map844,35088
(defun magit-process-set-mode-line (program args)magit-process-set-mode-line851,35286
(defun magit-process-set-mode-line-error-status (&optional error str)magit-process-set-mode-line-error-status867,36069
(defun magit-process-unset-mode-line-error-status ()magit-process-unset-mode-line-error-status915,38557
(defun magit-process-unset-mode-line ()magit-process-unset-mode-line924,38945
(defvar magit-process-error-message-regexpsmagit-process-error-message-regexps932,39305
(define-error 'magit-git-error "Git error")magit-git-error937,39479
(defun magit-process-error-summary (process-buf section)magit-process-error-summary939,39524
(defun magit-process-error-tooltip (process-buf section)magit-process-error-tooltip957,40339
(defvar-local magit-this-error nil)magit-this-error982,41346
(defvar magit-process-finish-apply-ansi-colors nil)magit-process-finish-apply-ansi-colors984,41383
(defun magit-process-finish (arg &optional process-buf command-bufmagit-process-finish986,41436
(defun magit-process-display-buffer (process)magit-process-display-buffer1056,44675
(defun magit--log-action (summary line list)magit--log-action1075,45576

elpa/magit-20180610.1519/magit-autoloads.el,529
(defconst git-rebase-filename-regexp "/git-rebase-todo\\'")git-rebase-filename-regexp22,655
(defvar magit-auto-revert-mode (and (not global-auto-revert-mode) (not noninteractive)) "\magit-auto-revert-mode128,4058
(defvar global-magit-file-mode t "\global-magit-file-mode1163,38123
(defvar magit-wip-after-save-mode nil "\magit-wip-after-save-mode2445,78783
(defvar magit-wip-after-apply-mode nil "\magit-wip-after-apply-mode2467,79693
(defvar magit-wip-before-change-mode nil "\magit-wip-before-change-mode2486,80375

elpa/magit-20180610.1519/magit-worktree.el,554
(defun magit-worktree-checkout (path branch)magit-worktree-checkout47,1719
(defun magit-worktree-checkout-pull-request (path pr)magit-worktree-checkout-pull-request56,2098
(defun magit-worktree-branch (path branch start-point &optional force)magit-worktree-branch86,3507
(defun magit-worktree-delete (worktree)magit-worktree-delete96,3961
(defun magit-worktree-status (worktree)magit-worktree-status120,5168
(defvar magit-worktree-section-mapmagit-worktree-section-map137,5813
(defun magit-insert-worktrees ()magit-insert-worktrees144,6073

elpa/magit-20180610.1519/magit-pkg.el,84
(define-package "magit" "20180610.1519" "A Git porcelain inside Emacs.""magit"1,0

elpa/magit-20180610.1519/magit-branch.el,4361
(defcustom magit-branch-read-upstream-first tmagit-branch-read-upstream-first40,1376
(defcustom magit-branch-prefer-remote-upstream nilmagit-branch-prefer-remote-upstream55,2111
(defcustom magit-branch-adjust-remote-upstream-alist nilmagit-branch-adjust-remote-upstream-alist102,4129
(defcustom magit-branch-rename-push-target tmagit-branch-rename-push-target153,6344
(defcustom magit-branch-popup-show-variables tmagit-branch-popup-show-variables179,7498
(defcustom magit-published-branches '("origin/master")magit-published-branches189,7915
(defvar magit-branch-config-variables)magit-branch-config-variables197,8137
(defun magit-branch-popup-setup (val def)magit-branch-popup-setup223,9416
(defun magit-checkout (revision)magit-checkout233,9766
(defun magit-branch (branch start-point &optional args)magit-branch246,10311
(defun magit-branch-and-checkout (branch start-point &optional args)magit-branch-and-checkout255,10664
(defun magit-branch-or-checkout (arg &optional start-point)magit-branch-or-checkout266,11187
(defun magit-branch-checkout (branch &optional start-point)magit-branch-checkout289,12129
(defun magit-branch-maybe-adjust-upstream (branch start-point)magit-branch-maybe-adjust-upstream349,14936
(defun magit-branch-orphan (branch start-point &optional args)magit-branch-orphan362,15599
(defun magit-branch-pull-request (pr)magit-branch-pull-request369,15955
(defun magit-checkout-pull-request (pr)magit-checkout-pull-request430,19060
(defun magit-branch-read-args (prompt)magit-branch-read-args438,19380
(defun magit-branch-spinoff (branch &optional from &rest args)magit-branch-spinoff463,20624
(defun magit-branch-reset (branch to &optional args set-upstream)magit-branch-reset525,23605
(defun magit-branch-delete (branches &optional force)magit-branch-delete561,25245
(defun magit-branch-maybe-delete-pr-remote (branch)magit-branch-maybe-delete-pr-remote651,29603
(defun magit-branch-unset-pushRemote (branch)magit-branch-unset-pushRemote676,30934
(defun magit-delete-remote-branch-sentinel (refs process event)magit-delete-remote-branch-sentinel679,31029
(defun magit-branch-rename (old new &optional force)magit-branch-rename697,31843
(defun magit-branch-shelve (branch)magit-branch-shelve751,34569
(defun magit-branch-unshelve (branch)magit-branch-unshelve764,35073
(defun magit--rename-reflog-file (old new)magit--rename-reflog-file780,35635
(defvar magit-branch-config-branch nil)magit-branch-config-branch789,35914
(defun magit-branch-config-popup (branch)magit-branch-config-popup792,35970
(defvar magit-branch-config-variablesmagit-branch-config-variables803,36443
(defvar magit-branch-config-popupmagit-branch-config-popup835,37595
(defun magit-branch-config-popup-setup (val def)magit-branch-config-popup-setup840,37757
(defun magit-branch-config-branch (&optional prompt)magit-branch-config-branch848,38147
(defun magit-edit-branch*description (branch)magit-edit-branch*description861,38532
(defun magit-edit-branch*description-check-buffers ()magit-edit-branch*description-check-buffers870,38938
(defun magit-format-branch*description ()magit-format-branch*description881,39382
(defun magit-set-branch*merge/remote (branch upstream)magit-set-branch*merge/remote892,39885
(defun magit-format-branch*merge/remote ()magit-format-branch*merge/remote921,41242
(defun magit-cycle-branch*rebase (branch)magit-cycle-branch*rebase939,42074
(defun magit-format-branch*rebase ()magit-format-branch*rebase958,42894
(defun magit-cycle-branch*pushRemote (branch)magit-cycle-branch*pushRemote967,43157
(defun magit-format-branch*pushRemote ()magit-format-branch*pushRemote984,43948
(defun magit-cycle-pull.rebase ()magit-cycle-pull.rebase993,44225
(defun magit-format-pull.rebase ()magit-format-pull.rebase1005,44672
(defun magit-cycle-remote.pushDefault ()magit-cycle-remote.pushDefault1010,44815
(defun magit-format-remote.pushDefault ()magit-format-remote.pushDefault1019,45185
(defun magit-cycle-branch*autoSetupMerge ()magit-cycle-branch*autoSetupMerge1024,45341
(defun magit-format-branch*autoSetupMerge ()magit-format-branch*autoSetupMerge1046,46201
(defun magit-cycle-branch*autoSetupRebase ()magit-cycle-branch*autoSetupRebase1051,46372
(defun magit-format-branch*autoSetupRebase ()magit-format-branch*autoSetupRebase1072,47207

elpa/magit-20180610.1519/magit-notes.el,1331
(defun magit-notes-merging-p ()magit-notes-merging-p67,2593
(defun magit-format-core.notesRef ()magit-format-core.notesRef72,2758
(defun magit-format-notes.displayRef ()magit-format-notes.displayRef75,2855
(defun magit-format-global-core.notesRef ()magit-format-global-core.notesRef78,2959
(defun magit-format-global-notes.displayRef ()magit-format-global-notes.displayRef81,3065
(defun magit-notes-edit (commit &optional ref)magit-notes-edit86,3192
(defun magit-notes-remove (commit &optional ref)magit-notes-remove97,3628
(defun magit-notes-merge (ref)magit-notes-merge108,4079
(defun magit-notes-merge-commit ()magit-notes-merge-commit121,4606
(defun magit-notes-merge-abort ()magit-notes-merge-abort127,4786
(defun magit-notes-prune (&optional dry-run)magit-notes-prune133,4963
(defun magit-set-core.notesRef (ref)magit-set-core.notesRef140,5246
(defun magit-set-global-core.notesRef (ref)magit-set-global-core.notesRef147,5494
(defun magit-set-notes.displayRef (refs)magit-set-notes.displayRef154,5762
(defun magit-set-global-notes.displayRef (refs)magit-set-global-notes.displayRef161,6031
(defun magit-notes-read-ref (prompt)magit-notes-read-ref168,6320
(defun magit-notes-read-refs (prompt)magit-notes-read-refs179,6711
(defun magit-notes-read-args (prompt)magit-notes-read-args194,7264

elpa/magit-20180610.1519/magit-merge.el,1377
(defun magit-merge (rev &optional args nocommit)magit-merge55,2060
(defun magit-merge-editmsg (rev &optional args)magit-merge-editmsg72,2761
(defun magit-merge-nocommit (rev &optional args)magit-merge-nocommit85,3271
(defun magit-merge-into (branch &optional args)magit-merge-into97,3794
(defun magit-merge-absorb (branch &optional args)magit-merge-absorb114,4610
(defun magit--merge-absort (branch args)magit--merge-absort127,5253
(defun magit--merge-absort-1 (branch args)magit--merge-absort-1146,6069
(defun magit-merge-squash (rev)magit-merge-squash161,6663
(defun magit-merge-preview (rev)magit-merge-preview169,6947
(define-derived-mode magit-merge-preview-mode magit-diff-mode "Magit Merge"magit-merge-preview-mode174,7168
(defun magit-merge-preview-refresh-buffer (rev)magit-merge-preview-refresh-buffer179,7345
(defun magit-merge-abort ()magit-merge-abort190,7847
(defun magit-checkout-stage (file arg)magit-checkout-stage199,8123
(defun magit-merge-in-progress-p ()magit-merge-in-progress-p225,9228
(defun magit--merge-range (&optional head)magit--merge-range228,9313
(defun magit-merge-assert ()magit-merge-assert236,9592
(defun magit-checkout-read-stage (file)magit-checkout-read-stage241,9759
(defvar magit-unmerged-section-mapmagit-unmerged-section-map249,9981
(defun magit-insert-merge-log ()magit-insert-merge-log255,10163

elpa/magit-20180610.1519/magit-sequence.el,4711
(defface magit-sequence-pickmagit-sequence-pick37,1230
(defface magit-sequence-stopmagit-sequence-stop42,1345
(defface magit-sequence-partmagit-sequence-part48,1575
(defface magit-sequence-headmagit-sequence-head54,1802
(defface magit-sequence-dropmagit-sequence-drop60,2025
(defface magit-sequence-donemagit-sequence-done66,2245
(defface magit-sequence-ontomagit-sequence-onto71,2363
(defface magit-sequence-execmagit-sequence-exec76,2490
(defun magit-sequencer-continue ()magit-sequencer-continue84,2635
(defun magit-sequencer-skip ()magit-sequencer-skip95,3072
(defun magit-sequencer-abort ()magit-sequencer-abort104,3391
(defun magit-sequencer-in-progress-p ()magit-sequencer-in-progress-p113,3755
(defun magit-cherry-pick-read-args (prompt)magit-cherry-pick-read-args143,5098
(defun magit--cherry-move-read-args (verb away fn)magit--cherry-move-read-args148,5292
(defun magit--cherry-spinoff-read-args (verb)magit--cherry-spinoff-read-args167,6203
(defun magit-cherry-pick (commits &optional args)magit-cherry-pick174,6436
(defun magit-cherry-apply (commits &optional args)magit-cherry-apply183,6800
(defun magit-cherry-harvest (commits branch &optional args)magit-cherry-harvest192,7212
(defun magit-cherry-donate (commits branch &optional args)magit-cherry-donate210,8002
(defun magit-cherry-spinout (commits branch start-point &optional args)magit-cherry-spinout223,8590
(defun magit-cherry-spinoff (commits branch start-point &optional args)magit-cherry-spinoff233,9048
(defun magit--cherry-move (commits src dst argsmagit--cherry-move242,9489
(defun magit--cherry-pick (commits args &optional revert)magit--cherry-pick294,12041
(defun magit-cherry-pick-in-progress-p ()magit-cherry-pick-in-progress-p318,12959
(defun magit-revert-read-args (prompt)magit-revert-read-args342,14069
(defun magit-revert (commit &optional args)magit-revert348,14251
(defun magit-revert-no-commit (commit &optional args)magit-revert-no-commit357,14591
(defun magit-revert-in-progress-p ()magit-revert-in-progress-p365,14965
(defun magit-am-apply-patches (&optional files args)magit-am-apply-patches397,16432
(defun magit-am-apply-maildir (&optional maildir args)magit-am-apply-maildir413,17180
(defun magit-am-continue ()magit-am-continue421,17532
(defun magit-am-skip ()magit-am-skip431,17870
(defun magit-am-abort ()magit-am-abort439,18113
(defun magit-am-in-progress-p ()magit-am-in-progress-p447,18375
(defun magit-git-rebase (target args)magit-git-rebase489,20492
(defun magit-rebase-onto-pushremote (args)magit-rebase-onto-pushremote493,20596
(defun magit-rebase-onto-upstream (args)magit-rebase-onto-upstream506,21203
(defun magit-rebase (target args)magit-rebase516,21604
(defun magit-rebase-subset (newbase start args)magit-rebase-subset527,22033
(defun magit-rebase-interactive-1magit-rebase-interactive-1546,22881
(defvar magit--rebase-published-symbol nil)magit--rebase-published-symbol573,24067
(defvar magit--rebase-public-edit-confirmed nil)magit--rebase-public-edit-confirmed574,24111
(defun magit-rebase-interactive-assert (since &optional delay-edit-confirm)magit-rebase-interactive-assert576,24161
(defun magit-rebase-interactive (commit args)magit-rebase-interactive609,25885
(defun magit-rebase-autosquash (args)magit-rebase-autosquash618,26201
(defun magit-rebase-edit-commit (commit args)magit-rebase-edit-commit626,26531
(defun magit-rebase-reword-commit (commit args)magit-rebase-reword-commit636,26874
(defun magit-rebase-remove-commit (commit args)magit-rebase-remove-commit645,27228
(defun magit-rebase-continue (&optional noedit)magit-rebase-continue655,27587
(defun magit-rebase-skip ()magit-rebase-skip679,28716
(defun magit-rebase-edit ()magit-rebase-edit687,28974
(defun magit-rebase-abort ()magit-rebase-abort695,29223
(defun magit-rebase-in-progress-p ()magit-rebase-in-progress-p703,29511
(defun magit-insert-sequencer-sequence ()magit-insert-sequencer-sequence710,29717
(defun magit-insert-am-sequence ()magit-insert-am-sequence732,30899
(defun magit-sequence-insert-am-patch (type patch face)magit-sequence-insert-am-patch758,32006
(defun magit-insert-rebase-sequence ()magit-insert-rebase-sequence771,32533
(defun magit-rebase-insert-merge-sequence (onto)magit-rebase-insert-merge-sequence789,33462
(defun magit-rebase-insert-apply-sequence (onto)magit-rebase-insert-apply-sequence811,34443
(defun magit-rebase-patches ()magit-rebase-patches825,35110
(defun magit-sequence-insert-sequence (stop onto &optional orig)magit-sequence-insert-sequence828,35213
(defun magit-sequence-insert-commit (type hash face &optional exec)magit-sequence-insert-commit890,38479

elpa/magit-20180610.1519/magit-autorevert.el,1063
(defgroup magit-auto-revert nilmagit-auto-revert35,1105
(defcustom auto-revert-buffer-list-filter nilauto-revert-buffer-list-filter43,1378
(defcustom magit-auto-revert-tracked-only tmagit-auto-revert-tracked-only70,2582
(defcustom magit-auto-revert-immediately tmagit-auto-revert-immediately82,3013
(defun magit-turn-on-auto-revert-mode-if-desired (&optional file)magit-turn-on-auto-revert-mode-if-desired104,3796
(define-globalized-minor-mode magit-auto-revert-mode auto-revert-modemagit-auto-revert-mode119,4399
(defun magit-auto-revert-mode--init-kludge ()magit-auto-revert-mode--init-kludge149,6120
(defun magit-auto-revert-buffers ()magit-auto-revert-buffers205,8592
(defvar magit-auto-revert-toplevel nil)magit-auto-revert-toplevel214,8961
(defun magit-auto-revert-buffer-p (buffer)magit-auto-revert-buffer-p220,9138
(defun magit-auto-revert-repository-buffer-p (buffer &optional fallback)magit-auto-revert-repository-buffer-p227,9443
(defun auto-revert-buffers--buffer-list-filter ()auto-revert-buffers--buffer-list-filter248,10442

elpa/magit-20180610.1519/magit-blame.el,5951
(defgroup magit-blame nilmagit-blame35,1148
(defcustom magit-blame-stylesmagit-blame-styles40,1265
(defcustom magit-blame-echo-style 'linesmagit-blame-echo-style112,4225
(defcustom magit-blame-time-format "%F %H:%M"magit-blame-time-format120,4509
(defcustom magit-blame-read-only tmagit-blame-read-only125,4642
(defcustom magit-blame-disable-modes '(fci-mode yascroll-bar-mode)magit-blame-disable-modes131,4816
(defcustom magit-blame-mode-lighter " Blame"magit-blame-mode-lighter138,5118
(defcustom magit-blame-goto-chunk-hookmagit-blame-goto-chunk-hook143,5292
(defface magit-blame-highlightmagit-blame-highlight156,5677
(defface magit-blame-marginmagit-blame-margin167,5999
(defface magit-blame-dimmedmagit-blame-dimmed175,6232
(defface magit-blame-headingmagit-blame-heading183,6459
(defface magit-blame-summary nilmagit-blame-summary191,6691
(defface magit-blame-hash nilmagit-blame-hash195,6797
(defface magit-blame-name nilmagit-blame-name199,6897
(defface magit-blame-date nilmagit-blame-date203,7010
(defclass magit-blame-chunk ()magit-blame-chunk209,7114
(defun magit-current-blame-chunk (&optional type)magit-current-blame-chunk221,7486
(defun magit-blame-chunk-at (pos)magit-blame-chunk-at241,8425
(defun magit-blame--overlay-at (&optional pos key)magit-blame--overlay-at245,8534
(defvar magit-blame-mode-mapmagit-blame-mode-map254,8772
(defvar magit-blame-read-only-mode-mapmagit-blame-read-only-mode-map262,9031
(defvar-local magit-blame-buffer-read-only nil)magit-blame-buffer-read-only295,10686
(defvar-local magit-blame-cache nil)magit-blame-cache296,10734
(defvar-local magit-blame-disabled-modes nil)magit-blame-disabled-modes297,10771
(defvar-local magit-blame-process nil)magit-blame-process298,10817
(defvar-local magit-blame-recursive-p nil)magit-blame-recursive-p299,10856
(defvar-local magit-blame-type nil)magit-blame-type300,10899
(defvar-local magit-blame-separator nil)magit-blame-separator301,10935
(defvar-local magit-blame-previous-chunk nil)magit-blame-previous-chunk302,10976
(defvar-local magit-blame--style nil)magit-blame--style304,11023
(defsubst magit-blame--style-get (key)magit-blame--style-get306,11062
(define-minor-mode magit-blame-modemagit-blame-mode311,11164
(defun magit-blame-goto-chunk-hook ()magit-blame-goto-chunk-hook357,13452
(defun magit-blame-toggle-read-only ()magit-blame-toggle-read-only364,13736
(define-minor-mode magit-blame-read-only-modemagit-blame-read-only-mode369,13856
(defun magit-blame-put-keymap-before-view-mode ()magit-blame-put-keymap-before-view-mode384,14385
(defun magit-blame--run ()magit-blame--run396,14887
(defun magit-blame-run-process (revision file args &optional lines)magit-blame-run-process412,15523
(defun magit-blame-process-quickstart-sentinel (process event)magit-blame-process-quickstart-sentinel423,16084
(defun magit-blame-process-sentinel (process _event &optional quiet)magit-blame-process-sentinel433,16534
(defun magit-blame-process-filter (process string)magit-blame-process-filter449,17212
(defun magit-blame--parse-chunk (type)magit-blame--parse-chunk473,18220
(defun magit-blame--commit-alist (rev)magit-blame--commit-alist501,19467
(defun magit-blame-assert-buffer (process)magit-blame-assert-buffer510,19839
(defun magit-blame--make-overlays (buf chunk revinfo)magit-blame--make-overlays517,20041
(defun magit-blame--make-margin-overlays (chunk revinfo _beg end)magit-blame--make-margin-overlays533,20671
(defun magit-blame--make-margin-overlay (chunk revinfo line)magit-blame--make-margin-overlay541,20917
(defun magit-blame--make-heading-overlay (chunk revinfo beg end)magit-blame--make-heading-overlay552,21430
(defun magit-blame--make-highlight-overlay (chunk beg)magit-blame--make-highlight-overlay559,21720
(defun magit-blame--update-margin ()magit-blame--update-margin565,21975
(defun magit-blame--update-overlays ()magit-blame--update-overlays569,22144
(defun magit-blame--update-margin-overlay (ov)magit-blame--update-margin-overlay580,22595
(defun magit-blame--update-heading-overlay (ov)magit-blame--update-heading-overlay601,23436
(defun magit-blame--update-highlight-overlay (ov)magit-blame--update-highlight-overlay617,24162
(defun magit-blame--format-string (ov format face)magit-blame--format-string620,24280
(defun magit-blame--format-string-1 (rev revinfo format face)magit-blame--format-string-1633,24790
(defun magit-blame--format-separator ()magit-blame--format-separator669,26633
(defun magit-blame--format-time-string (time tz)magit-blame--format-time-string676,26893
(defun magit-blame--remove-overlays (&optional beg end)magit-blame--remove-overlays686,27392
(defun magit-blame-maybe-show-message ()magit-blame-maybe-show-message694,27663
(defun magit-blame-echo ()magit-blame-echo709,28254
(defun magit-blame ()magit-blame728,28960
(defun magit-blame-removal ()magit-blame-removal736,29183
(defun magit-blame-reverse ()magit-blame-reverse746,29510
(defun magit-blame--pre-blame-assert (type)magit-blame--pre-blame-assert755,29824
(defun magit-blame--pre-blame-setup (type)magit-blame--pre-blame-setup769,30440
(defun magit-blame-visit-other-file ()magit-blame-visit-other-file781,30879
(defun magit-blame-visit-file ()magit-blame-visit-file794,31324
(defun magit-blame-quit ()magit-blame-quit804,31635
(defun magit-blame-next-chunk ()magit-blame-next-chunk813,31865
(defun magit-blame-previous-chunk ()magit-blame-previous-chunk820,32074
(defun magit-blame-next-chunk-same-commit (&optional previous)magit-blame-next-chunk-same-commit827,32295
(defun magit-blame-previous-chunk-same-commit ()magit-blame-previous-chunk-same-commit848,33276
(defun magit-blame-cycle-style ()magit-blame-cycle-style853,33473
(defun magit-blame-copy-hash ()magit-blame-copy-hash864,33877
(defun magit-blame-maybe-update-revision-buffer ()magit-blame-maybe-update-revision-buffer909,35744

elpa/magit-20180610.1519/magit-diff.el,13921
(defvar gravatar-size)gravatar-size43,1606
(defvar magit-blame-mode)magit-blame-mode50,1932
(defvar git-rebase-line)git-rebase-line51,1958
(defvar bookmark-make-record-function)bookmark-make-record-function59,2189
(defgroup magit-diff nilmagit-diff64,2257
(defcustom magit-diff-mode-hook nilmagit-diff-mode-hook69,2382
(defcustom magit-diff-arguments '("--stat" "--no-ext-diff")magit-diff-arguments74,2500
(defcustom magit-diff-sections-hookmagit-diff-sections-hook80,2738
(defcustom magit-diff-expansion-threshold 60magit-diff-expansion-threshold88,2967
(defcustom magit-diff-highlight-hunk-body tmagit-diff-highlight-hunk-body106,3666
(defcustom magit-diff-highlight-hunk-region-functionsmagit-diff-highlight-hunk-region-functions114,3955
(defcustom magit-diff-unmarked-lines-keep-foreground tmagit-diff-unmarked-lines-keep-foreground147,5541
(defcustom magit-diff-refine-hunk nilmagit-diff-refine-hunk156,5919
(defcustom magit-diff-adjust-tab-width nilmagit-diff-adjust-tab-width170,6427
(defcustom magit-diff-paint-whitespace tmagit-diff-paint-whitespace198,7537
(defcustom magit-diff-highlight-trailing tmagit-diff-highlight-trailing210,8013
(defcustom magit-diff-highlight-indentation nilmagit-diff-highlight-indentation217,8238
(defcustom magit-diff-hide-trailing-cr-charactersmagit-diff-hide-trailing-cr-characters236,9142
(defcustom magit-diff-visit-previous-blob tmagit-diff-visit-previous-blob243,9385
(defcustom magit-diff-highlight-keywords tmagit-diff-highlight-keywords257,9905
(defcustom magit-diff-buffer-file-locked tmagit-diff-buffer-file-locked265,10107
(defgroup magit-revision nilmagit-revision274,10335
(defcustom magit-revision-mode-hook '(bug-reference-mode)magit-revision-mode-hook279,10474
(defcustom magit-revision-sections-hookmagit-revision-sections-hook285,10655
(defcustom magit-revision-headers-format "\magit-revision-headers-format297,11035
(defcustom magit-revision-insert-related-refs tmagit-revision-insert-related-refs314,11606
(defcustom magit-revision-use-hash-sections 'quickermagit-revision-use-hash-sections320,11790
(defcustom magit-revision-show-gravatars nilmagit-revision-show-gravatars344,12859
(defcustom magit-revision-use-gravatar-kludge nilmagit-revision-use-gravatar-kludge365,13837
(defcustom magit-diff-section-arguments '("--no-ext-diff")magit-diff-section-arguments386,14566
(defface magit-diff-file-headingmagit-diff-file-heading397,14888
(defface magit-diff-file-heading-highlightmagit-diff-file-heading-highlight402,15000
(defface magit-diff-file-heading-selectionmagit-diff-file-heading-selection407,15152
(defface magit-diff-hunk-headingmagit-diff-hunk-heading417,15498
(defface magit-diff-hunk-heading-highlightmagit-diff-hunk-heading-highlight427,15774
(defface magit-diff-hunk-heading-selectionmagit-diff-hunk-heading-selection437,16068
(defface magit-diff-hunk-regionmagit-diff-hunk-region447,16414
(defface magit-diff-lines-headingmagit-diff-lines-heading459,16880
(defface magit-diff-lines-boundarymagit-diff-lines-boundary470,17255
(defface magit-diff-conflict-headingmagit-diff-conflict-heading475,17409
(defface magit-diff-addedmagit-diff-added480,17543
(defface magit-diff-removedmagit-diff-removed490,17834
(defface magit-diff-ourmagit-diff-our500,18123
(defface magit-diff-basemagit-diff-base505,18265
(defface magit-diff-theirmagit-diff-their515,18566
(defface magit-diff-contextmagit-diff-context520,18710
(defface magit-diff-added-highlightmagit-diff-added-highlight526,18936
(defface magit-diff-removed-highlightmagit-diff-removed-highlight536,19237
(defface magit-diff-our-highlightmagit-diff-our-highlight546,19542
(defface magit-diff-base-highlightmagit-diff-base-highlight551,19704
(defface magit-diff-their-highlightmagit-diff-their-highlight561,20015
(defface magit-diff-context-highlightmagit-diff-context-highlight566,20179
(defface magit-diff-whitespace-warningmagit-diff-whitespace-warning576,20480
(defface magit-diffstat-addedmagit-diffstat-added581,20638
(defface magit-diffstat-removedmagit-diffstat-removed587,20855
(defconst magit-diff-popup-commonmagit-diff-popup-common596,21106
(defvar magit-diff-popupmagit-diff-popup606,21494
(defvar magit-diff-refresh-popupmagit-diff-refresh-popup624,22401
(defvar magit-diff-mode-refresh-popupmagit-diff-mode-refresh-popup637,23160
(defvar magit-revision-mode-refresh-popupmagit-revision-mode-refresh-popup653,24130
(defvar magit-diff-section-file-args nil)magit-diff-section-file-args672,25211
(defun magit-diff-get-buffer-args ()magit-diff-get-buffer-args679,25446
(defun magit-diff-arguments (&optional refresh)magit-diff-arguments692,25994
(defun magit-diff-popup (arg)magit-diff-popup702,26410
(defun magit-diff-buffer-file-popup ()magit-diff-buffer-file-popup715,27009
(defun magit-diff-refresh-popup (arg)magit-diff-refresh-popup733,27722
(defun magit-diff-select-algorithm (&rest _ignore)magit-diff-select-algorithm749,28527
(defun magit-diff-dwim (&optional args files)magit-diff-dwim759,28781
(defun magit-diff--dwim ()magit-diff--dwim779,29596
(defun magit-diff-read-range-or-commit (prompt &optional secondary-default mbase)magit-diff-read-range-or-commit837,31705
(defun magit-diff-setup (rev-or-range const args files)magit-diff-setup869,33200
(defun magit-diff (rev-or-range &optional args files)magit-diff874,33361
(defun magit-diff-working-tree (&optional rev args files)magit-diff-working-tree893,34236
(defun magit-diff-staged (&optional rev args files)magit-diff-staged904,34694
(defun magit-diff-unstaged (&optional args files)magit-diff-unstaged915,35119
(defun magit-diff-unmerged (&optional args files)magit-diff-unmerged921,35322
(defun magit-diff-while-committing (&optional args)magit-diff-while-committing929,35607
(define-key git-commit-mode-mapgit-commit-mode-map957,36843
(defun magit-diff-while-amending (&optional args)magit-diff-while-amending960,36924
(defun magit-diff-buffer-file ()magit-diff-buffer-file964,37047
(defun magit-diff-paths (a b)magit-diff-paths980,37755
(defvar-local magit-buffer-revision-hash nil)magit-buffer-revision-hash990,38240
(defun magit-show-commit--arguments ()magit-show-commit--arguments992,38287
(defun magit-show-commit (rev &optional args files module)magit-show-commit1000,38606
(defun magit-diff-refresh (args files)magit-diff-refresh1026,39734
(defun magit-diff-set-default-arguments (args files)magit-diff-set-default-arguments1036,40122
(defun magit-diff-save-default-arguments (args files)magit-diff-save-default-arguments1048,40664
(defun magit-diff-switch-range-type ()magit-diff-switch-range-type1060,41218
(defun magit-diff-flip-revs ()magit-diff-flip-revs1078,41878
(defvar-local magit-diff--last-file-args nil)magit-diff--last-file-args1094,42428
(defun magit-diff--toggle-file-args (files)magit-diff--toggle-file-args1095,42474
(defun magit-diff-toggle-file-filter ()magit-diff-toggle-file-filter1103,42708
(defun magit-diff-less-context (&optional count)magit-diff-less-context1122,43551
(defun magit-diff-more-context (&optional count)magit-diff-more-context1127,43751
(defun magit-diff-default-context ()magit-diff-default-context1132,43943
(defun magit-diff-set-context (fn)magit-diff-set-context1137,44090
(defun magit-diff-context-p ()magit-diff-context-p1151,44726
(defun magit-diff-toggle-refine-hunk (&optional style)magit-diff-toggle-refine-hunk1157,44906
(defun magit-diff-visit-filemagit-diff-visit-file1180,45791
(defun magit-diff-visit-file-other-window (file)magit-diff-visit-file-other-window1263,49530
(defvar magit-display-file-buffer-functionmagit-display-file-buffer-function1280,50310
(defun magit-display-file-buffer (buffer)magit-display-file-buffer1290,50732
(defun magit-display-file-buffer-traditional (buffer)magit-display-file-buffer-traditional1293,50830
(defun magit-display-file-buffer-other-window (buffer)magit-display-file-buffer-other-window1302,51203
(defun magit-diff-visit-file-worktree (file &optional other-window)magit-diff-visit-file-worktree1311,51577
(defun magit-diff-visit--range-end ()magit-diff-visit--range-end1331,52433
(defun magit-diff-visit--range-beginning ()magit-diff-visit--range-beginning1342,52721
(defun magit-diff-visit--hunk ()magit-diff-visit--hunk1351,52957
(defun magit-diff-visit--offset (file rev hunk-start line-offset)magit-diff-visit--offset1372,53738
(defun magit-diff-hunk-line (section)magit-diff-hunk-line1402,55021
(defun magit-diff-hunk-column (section visit-beginning)magit-diff-hunk-column1433,56220
(defun magit-diff-visit-directory (directory &optional other-window)magit-diff-visit-directory1442,56538
(defun magit-diff-show-or-scroll-up ()magit-diff-show-or-scroll-up1454,56964
(defun magit-diff-show-or-scroll-down ()magit-diff-show-or-scroll-down1465,57414
(defun magit-diff-show-or-scroll (fn)magit-diff-show-or-scroll1476,57870
(defvar magit-diff-mode-mapmagit-diff-mode-map1529,59965
(define-derived-mode magit-diff-mode magit-mode "Magit Diff"magit-diff-mode1542,60470
(defun magit-diff-refresh-buffer (rev-or-range const _args files)magit-diff-refresh-buffer1572,61548
(defun magit-insert-diff (rev-or-range)magit-insert-diff1597,62657
(defvar magit-file-section-mapmagit-file-section-map1608,63124
(defvar magit-hunk-section-mapmagit-hunk-section-map1626,63943
(defconst magit-diff-headline-remagit-diff-headline-re1644,64762
(defconst magit-diff-statline-remagit-diff-statline-re1649,64952
(defun magit-diff-wash-diffs (args &optional limit)magit-diff-wash-diffs1657,65200
(defun magit-jump-to-diffstat-or-diff ()magit-jump-to-diffstat-or-diff1665,65507
(defun magit-diff-wash-diffstat ()magit-diff-wash-diffstat1680,66149
(defun magit-diff-wash-diff (args)magit-diff-wash-diff1719,67919
(defun magit-diff-insert-file-section (file orig status modes header)magit-diff-insert-file-section1807,72048
(defun magit-diff-wash-submodule ()magit-diff-wash-submodule1825,72789
(defun magit-diff-wash-hunk ()magit-diff-wash-hunk1887,75714
(defun magit-diff-expansion-threshold (section)magit-diff-expansion-threshold1901,76287
(define-derived-mode magit-revision-mode magit-diff-mode "Magit Rev"magit-revision-mode1910,76593
(defun magit-revision-refresh-buffer (rev __const _args files)magit-revision-refresh-buffer1936,77499
(defun magit-insert-revision-diff (rev)magit-insert-revision-diff1950,78044
(defun magit-insert-revision-tag (rev)magit-insert-revision-tag1965,78803
(defvar magit-commit-message-section-mapmagit-commit-message-section-map2001,80534
(defun magit-insert-revision-message (rev)magit-insert-revision-message2007,80730
(defun magit-insert-revision-notes (rev)magit-insert-revision-notes2058,83231
(defun magit-insert-revision-headers (rev)magit-insert-revision-headers2081,84262
(defun magit-insert-revision-gravatars (rev beg)magit-insert-revision-gravatars2146,87292
(defun magit-insert-revision-gravatar (beg rev email regexp)magit-insert-revision-gravatar2156,87732
(defun magit-insert-revision-gravatar-cb (image rev marker align-to column)magit-insert-revision-gravatar-cb2171,88414
(defvar magit-unstaged-section-mapmagit-unstaged-section-map2202,89828
(defun magit-insert-unstaged-changes ()magit-insert-unstaged-changes2213,90241
(defvar magit-staged-section-mapmagit-staged-section-map2221,90552
(defun magit-insert-staged-changes ()magit-insert-staged-changes2233,91028
(defun magit-diff-type (&optional section)magit-diff-type2245,91465
(defun magit-diff-use-hunk-region-p ()magit-diff-use-hunk-region-p2347,96204
(defun magit-diff-unhighlight (section selection)magit-diff-unhighlight2363,96928
(defun magit-diff-highlight (section selection)magit-diff-highlight2369,97133
(defun magit-diff-highlight-recursive (section &optional selection)magit-diff-highlight-recursive2392,98081
(defun magit-diff-highlight-list (section &optional selection)magit-diff-highlight-list2400,98470
(defun magit-diff-highlight-file (section &optional selection)magit-diff-highlight-file2419,99359
(defun magit-diff-highlight-heading (section &optional selection)magit-diff-highlight-heading2425,99608
(defvar magit-diff--tab-width-cache nil)magit-diff--tab-width-cache2503,103270
(defun magit-diff-tab-width (file)magit-diff-tab-width2505,103312
(defun magit-diff-paint-tab (merging width)magit-diff-paint-tab2532,104357
(defun magit-diff-paint-whitespace (merging)magit-diff-paint-whitespace2540,104627
(defun magit-diff-update-hunk-refinement (&optional section)magit-diff-update-hunk-refinement2568,106086
(defun magit-diff-hunk-region-beginning ()magit-diff-hunk-region-beginning2598,107317
(defun magit-diff-hunk-region-end ()magit-diff-hunk-region-end2602,107456
(defun magit-diff-update-hunk-region (section)magit-diff-update-hunk-region2606,107577
(defun magit-diff-highlight-hunk-region-dim-outside (section)magit-diff-highlight-hunk-region-dim-outside2618,108070
(defun magit-diff-highlight-hunk-region-using-face (_section)magit-diff-highlight-hunk-region-using-face2636,109020
(defun magit-diff-highlight-hunk-region-using-overlays (section)magit-diff-highlight-hunk-region-using-overlays2645,109483
(defun magit-diff-highlight-hunk-region-using-underline (section)magit-diff-highlight-hunk-region-using-underline2659,110236
(defun magit-diff--make-hunk-overlay (start end &rest args)magit-diff--make-hunk-overlay2683,111456
(defun magit-diff--hunk-after-string (face)magit-diff--hunk-after-string2690,111697
(defun magit-diff-inside-hunk-body-p ()magit-diff-inside-hunk-body-p2704,112219
(defun magit-diff-file-header (section)magit-diff-file-header2712,112441
(defun magit-diff-hunk-region-header (section)magit-diff-hunk-region-header2718,112630
(defun magit-diff-hunk-region-patch (section &optional args)magit-diff-hunk-region-patch2723,112809

elpa/magit-20180610.1519/magit-obsolete.el,0

elpa/magit-20180610.1519/magit-ediff.el,1497
(defvar smerge-ediff-buf)smerge-ediff-buf35,1113
(defvar smerge-ediff-windows)smerge-ediff-windows36,1139
(defgroup magit-ediff nilmagit-ediff40,1183
(defcustom magit-ediff-quit-hookmagit-ediff-quit-hook45,1306
(defcustom magit-ediff-dwim-show-on-hunks nilmagit-ediff-dwim-show-on-hunks60,1917
(defcustom magit-ediff-show-stash-with-index tmagit-ediff-show-stash-with-index70,2314
(defvar magit-ediff-previous-winconf nil)magit-ediff-previous-winconf104,3465
(defun magit-ediff-resolve (file)magit-ediff-resolve121,4203
(defun magit-ediff-stage (file)magit-ediff-stage158,5811
(defun magit-ediff-compare (revA revB fileA fileB)magit-ediff-compare205,8007
(defun magit-ediff-compare--read-revisions (&optional arg mbase)magit-ediff-compare--read-revisions246,9757
(defun magit-ediff-read-files (revA revB &optional fileB)magit-ediff-read-files254,10060
(defun magit-ediff-dwim ()magit-ediff-dwim276,11070
(defun magit-ediff-show-staged (file)magit-ediff-show-staged347,14215
(defun magit-ediff-show-unstaged (file)magit-ediff-show-unstaged375,15331
(defun magit-ediff-show-working-tree (file)magit-ediff-show-working-tree404,16481
(defun magit-ediff-show-commit (commit)magit-ediff-show-commit429,17532
(defun magit-ediff-show-stash (stash)magit-ediff-show-stash439,17885
(defun magit-ediff-cleanup-auxiliary-buffers ()magit-ediff-cleanup-auxiliary-buffers475,19522
(defun magit-ediff-restore-previous-winconf ()magit-ediff-restore-previous-winconf503,20806

elpa/magit-20180610.1519/magit-refs.el,3224
(defvar bookmark-make-record-function)bookmark-make-record-function32,1085
(defgroup magit-refs nilmagit-refs36,1138
(defcustom magit-refs-mode-hook nilmagit-refs-mode-hook41,1285
(defcustom magit-refs-sections-hookmagit-refs-sections-hook47,1441
(defcustom magit-refs-show-commit-count nilmagit-refs-show-commit-count58,1764
(defcustom magit-refs-pad-commit-counts nilmagit-refs-pad-commit-counts76,2465
(defvar magit-refs-show-push-remote nilmagit-refs-show-push-remote90,2973
(defcustom magit-refs-show-remote-prefix nilmagit-refs-show-remote-prefix97,3295
(defcustom magit-refs-marginmagit-refs-margin106,3605
(defcustom magit-refs-margin-for-tags nilmagit-refs-margin-for-tags135,4828
(defcustom magit-refs-primary-column-width (cons 16 32)magit-refs-primary-column-width145,5101
(defcustom magit-refs-focus-column-width 5magit-refs-focus-column-width164,5965
(defcustom magit-refs-filter-alist nilmagit-refs-filter-alist181,6671
(defcustom magit-visit-ref-behavior nilmagit-visit-ref-behavior201,7615
(defvar magit-refs-mode-mapmagit-refs-mode-map270,10220
(define-derived-mode magit-refs-mode magit-mode "Magit Refs"magit-refs-mode278,10482
(defun magit-refs-refresh-buffer (ref &optional args)magit-refs-refresh-buffer302,11433
(defcustom magit-show-refs-arguments nilmagit-show-refs-arguments316,11929
(defvar magit-show-refs-popupmagit-show-refs-popup322,12119
(defun magit-read-ref-sort (prompt initial-input)magit-read-ref-sort349,13386
(defun magit-show-refs-get-buffer-args ()magit-show-refs-get-buffer-args355,13633
(defun magit-show-refs-arguments ()magit-show-refs-arguments366,14071
(defun magit-show-refs-popup (&optional arg)magit-show-refs-popup372,14248
(defun magit-show-refs-head (&optional args)magit-show-refs-head379,14499
(defun magit-show-refs-current (&optional args)magit-show-refs-current386,14727
(defun magit-show-refs (&optional ref args)magit-show-refs394,15021
(defun magit-refs-set-show-commit-count ()magit-refs-set-show-commit-count401,15335
(defun magit-visit-ref ()magit-visit-ref411,15695
(defvar magit-remote-section-mapmagit-remote-section-map465,18382
(defvar magit-branch-section-mapmagit-branch-section-map472,18634
(defvar magit-tag-section-mapmagit-tag-section-map480,18951
(defun magit-insert-branch-description ()magit-insert-branch-description487,19190
(defun magit-insert-tags ()magit-insert-tags504,19949
(defun magit-insert-remote-branches ()magit-insert-remote-branches530,21194
(defun magit-insert-local-branches ()magit-insert-local-branches572,23436
(defun magit-refs--format-local-branches ()magit-refs--format-local-branches589,24105
(defun magit-refs--format-local-branch (line)magit-refs--format-local-branch624,25869
(defun magit-refs--format-focus-column (ref &optional type)magit-refs--format-focus-column687,29112
(defun magit-refs--insert-refname-p (refname)magit-refs--insert-refname-p714,30228
(defun magit-refs--insert-cherry-commits (ref section)magit-refs--insert-cherry-commits723,30537
(defun magit-refs--insert-cherry-commits-1 (ref _section)magit-refs--insert-cherry-commits-1729,30785
(defun magit-refs--format-margin (commit)magit-refs--format-margin739,31164

elpa/magit-20180610.1519/magit-bisect.el,1101
(defcustom magit-bisect-show-graph tmagit-bisect-show-graph34,1100
(defface magit-bisect-goodmagit-bisect-good40,1293
(defface magit-bisect-skipmagit-bisect-skip45,1418
(defface magit-bisect-badmagit-bisect-bad50,1545
(defun magit-bisect-start (bad good)magit-bisect-start71,2350
(defun magit-bisect-start-read-args ()magit-bisect-start-read-args84,2888
(defun magit-bisect-reset ()magit-bisect-reset89,3089
(defun magit-bisect-good ()magit-bisect-good97,3362
(defun magit-bisect-bad ()magit-bisect-bad105,3592
(defun magit-bisect-skip ()magit-bisect-skip113,3815
(defun magit-bisect-run (cmdline &optional bad good)magit-bisect-run121,4071
(defun magit-git-bisect (subcommand &optional args no-assert)magit-git-bisect134,4671
(defun magit-bisect-in-progress-p ()magit-bisect-in-progress-p143,4960
(defun magit-insert-bisect-output ()magit-insert-bisect-output146,5046
(defun magit-insert-bisect-rest ()magit-insert-bisect-rest168,6187
(defun magit-insert-bisect-log ()magit-insert-bisect-log178,6623
(defun magit-wash-bisect-log (_args)magit-wash-bisect-log186,6922

elpa/magit-20180610.1519/git-rebase.el,3206
(defgroup git-rebase nilgit-rebase85,2984
(defcustom git-rebase-auto-advance tgit-rebase-auto-advance90,3113
(defcustom git-rebase-show-instructions tgit-rebase-show-instructions95,3246
(defcustom git-rebase-confirm-cancel tgit-rebase-confirm-cancel100,3393
(defgroup git-rebase-faces nilgit-rebase-faces107,3532
(defface git-rebase-hash '((t (:inherit magit-hash)))git-rebase-hash112,3637
(defface git-rebase-description nilgit-rebase-description116,3748
(defface git-rebase-killed-actiongit-rebase-killed-action120,3847
(defface git-rebase-comment-hashgit-rebase-comment-hash125,4017
(defface git-rebase-comment-headinggit-rebase-comment-heading130,4183
(defvar git-rebase-mode-mapgit-rebase-mode-map137,4352
(defvar git-rebase-command-descriptionsgit-rebase-command-descriptions202,7300
(defun git-rebase-pick ()git-rebase-pick219,8222
(defun git-rebase-reword ()git-rebase-reword224,8331
(defun git-rebase-edit ()git-rebase-edit229,8456
(defun git-rebase-squash ()git-rebase-squash234,8577
(defun git-rebase-fixup ()git-rebase-fixup239,8726
(defvar-local git-rebase-line nil)git-rebase-line244,8880
(defvar-local git-rebase-comment-re nil)git-rebase-comment-re245,8915
(defun git-rebase-set-action (action)git-rebase-set-action247,8957
(defun git-rebase-line-p (&optional pos)git-rebase-line-p257,9307
(defun git-rebase-region-bounds ()git-rebase-region-bounds263,9477
(defun git-rebase-move-line-down (n)git-rebase-move-line-down273,9882
(defun git-rebase-move-line-up (n)git-rebase-move-line-up306,11183
(defun git-rebase-highlight-region (start end window rol)git-rebase-highlight-region314,11472
(defun git-rebase-unhighlight-region (rol)git-rebase-unhighlight-region327,12082
(defun git-rebase-kill-line ()git-rebase-kill-line331,12257
(defun git-rebase-insert (rev)git-rebase-insert343,12630
(defun git-rebase-exec (arg)git-rebase-exec352,12962
(defun git-rebase-noop (&optional arg)git-rebase-noop382,14129
(defun git-rebase-undo (&optional arg)git-rebase-undo407,15178
(defun git-rebase--show-commit (&optional scroll)git-rebase--show-commit414,15362
(defun git-rebase-show-commit ()git-rebase-show-commit426,15828
(defun git-rebase-show-or-scroll-up ()git-rebase-show-or-scroll-up431,15955
(defun git-rebase-show-or-scroll-down ()git-rebase-show-or-scroll-down441,16306
(defun git-rebase-backward-line (&optional n)git-rebase-backward-line451,16663
(define-derived-mode git-rebase-mode special-mode "Git Rebase"git-rebase-mode460,16896
(defun git-rebase-cancel-confirm (force)git-rebase-cancel-confirm495,18673
(defun git-rebase-autostash-save ()git-rebase-autostash-save500,18830
(defun git-rebase-autostash-apply ()git-rebase-autostash-apply504,18995
(defun git-rebase-match-comment-line (limit)git-rebase-match-comment-line508,19121
(defun git-rebase-mode-font-lock-keywords ()git-rebase-mode-font-lock-keywords511,19234
(defun git-rebase-mode-show-keybindings ()git-rebase-mode-show-keybindings535,20166
(defun git-rebase-mode-disable-before-save-hook ()git-rebase-mode-disable-before-save-hook571,21896
(defconst git-rebase-filename-regexp "/git-rebase-todo\\'")git-rebase-filename-regexp577,22092

elpa/smooth-scroll-20130321.2114/smooth-scroll-pkg.el,297
(define-package "smooth-scroll" "20130321.2114" "Minor mode for smooth scrolling and in-place scrolling." 'nil :commit "02320f28abb5cae28b3a18f6b9ce93129bdbfc45" :keywords '("convenience" "emulations" "frames") :url "http://www.emacswiki.org/emacs/download/smooth-scroll.el")"smooth-scroll"2,31

elpa/smooth-scroll-20130321.2114/smooth-scroll.el,2453
(defconst smooth-scroll/version "1.1")smooth-scroll/version112,3617
(defgroup smooth-scroll nilsmooth-scroll125,3920
(defcustom smooth-scroll/vscroll-step-size 2smooth-scroll/vscroll-step-size129,3996
(defcustom smooth-scroll/hscroll-step-size 2smooth-scroll/hscroll-step-size139,4317
(defun scroll-up-1 (&optional arg)scroll-up-1156,4869
(defun scroll-down-1 (&optional arg)scroll-down-1168,5337
(defun scroll-left-1 (&optional arg)scroll-left-1180,5801
(defun scroll-right-1 (&optional arg)scroll-right-1192,6273
(defvar smooth-scroll/.scrolling-p nilsmooth-scroll/.scrolling-p210,6932
(defvar smooth-scroll/.debugging-p nilsmooth-scroll/.debugging-p213,7024
(defmacro smooth-scroll/.run-without-recursive-call (&rest body)smooth-scroll/.run-without-recursive-call222,7320
(defun smooth-scroll/.debug-msg (str)smooth-scroll/.debug-msg230,7633
(defun smooth-scroll/.drop-events ()smooth-scroll/.drop-events239,7880
(defvar smooth-scroll/redisplay-interval (when (not window-system) 0.005)smooth-scroll/redisplay-interval250,8289
(defun smooth-scroll/.force-redisplay ()smooth-scroll/.force-redisplay253,8416
(defun smooth-scroll/scroll-up (&optional arg)smooth-scroll/scroll-up272,9115
(defun smooth-scroll/scroll-down (&optional arg)smooth-scroll/scroll-down283,9588
(defun smooth-scroll/scroll-other-window (&optional arg)smooth-scroll/scroll-other-window294,10057
(defun smooth-scroll/scroll-other-window-down (&optional arg)smooth-scroll/scroll-other-window-down318,11209
(defun smooth-scroll/.vscroll-aux (amount up-p &optional inverse)smooth-scroll/.vscroll-aux337,11967
(defun smooth-scroll/scroll-left (&optional arg set-minimum)smooth-scroll/scroll-left388,13809
(defun smooth-scroll/scroll-right (&optional arg set-minimum)smooth-scroll/scroll-right403,14401
(defun smooth-scroll/.keep-cursor-within-new-hscroll-margin (delta left-p)smooth-scroll/.keep-cursor-within-new-hscroll-margin422,15174
(defun smooth-scroll/.do-primitive-hscroll (delta left-p)smooth-scroll/.do-primitive-hscroll468,17331
(defvar smooth-scroll/.pre-command-hook nil)smooth-scroll/.pre-command-hook477,17739
(defvar smooth-scroll/.orig-auto-hscroll-mode nil)smooth-scroll/.orig-auto-hscroll-mode478,17784
(defun smooth-scroll/.restore-auto-hscroll-mode (orig-auto-hscroll-mode)smooth-scroll/.restore-auto-hscroll-mode480,17836
(defun smooth-scroll/.hscroll-aux (amount left-p)smooth-scroll/.hscroll-aux496,18658

elpa/smooth-scroll-20130321.2114/smooth-scroll-autoloads.el,0

elpa/forecast-20180429.1500/forecast-autoloads.el,0

elpa/forecast-20180429.1500/forecast.el,4230
(defgroup forecastforecast251,8907
(defcustom forecast-api-key ""forecast-api-key258,9064
(defcustom forecast-api-url "https://api.darksky.net"forecast-api-url263,9149
(defcustom forecast-time-format "%H:%M:%S, %F"forecast-time-format269,9308
(defcustom forecast-units 'siforecast-units275,9463
(defcustom forecast-language 'enforecast-language287,9820
(defcustom forecast-graph-marker "█"forecast-graph-marker299,10311
(defcustom forecast-graph-marker-upcoming-max "▀"forecast-graph-marker-upcoming-max304,10438
(defcustom forecast-graph-marker-upcoming-min "▄"forecast-graph-marker-upcoming-min309,10609
(defcustom forecast-snow-symbol "❄"forecast-snow-symbol314,10780
(defcustom forecast-rain-symbol "⛆"forecast-rain-symbol319,10927
(defcustom forecast-old-ui nilforecast-old-ui324,11074
(defvar forecast--debug nilforecast--debug329,11201
(defconst forecast--supported-languagesforecast--supported-languages332,11271
(defvar forecast--data nilforecast--data336,11419
(defvar forecast--update-time 0forecast--update-time339,11477
(defvar forecast--buffer nilforecast--buffer343,11591
(defface forecast-moon-phaseforecast-moon-phase347,11673
(defun forecast--assoca (keyseq list)forecast--assoca364,12223
(defun forecast--insert (str)forecast--insert378,12747
(defun forecast--insert-with-props (text &rest props)forecast--insert-with-props388,13106
(defun forecast--insert-format (str &rest fa)forecast--insert-format396,13351
(defun forecast--get-forecast (callback)forecast--get-forecast403,13577
(defun forecast--api-opts ()forecast--api-opts442,15181
(defun forecast--load-data (callback)forecast--load-data462,15787
(defun forecast--summary ()forecast--summary481,16547
(defun forecast--temperature ()forecast--temperature485,16696
(defun forecast--temperature-unit ()forecast--temperature-unit493,16989
(defun forecast--timezone ()forecast--timezone501,17167
(defun forecast--offset ()forecast--offset505,17281
(defun forecast--temperature-unit-string ()forecast--temperature-unit-string509,17413
(defun forecast--temperature-string ()forecast--temperature-string515,17579
(defun forecast--pressure (unit)forecast--pressure524,17851
(defun forecast--bars-to-atm (bars)forecast--bars-to-atm532,18125
(defun forecast--wind-speed ()forecast--wind-speed536,18221
(defun forecast--wind-unit ()forecast--wind-unit540,18354
(defun forecast--apparent-temperature ()forecast--apparent-temperature547,18520
(defun forecast--format-current-time (formats)forecast--format-current-time554,18894
(defun forecast--wind-direction ()forecast--wind-direction561,19163
(defun forecast--cardinal-from-degrees (d)forecast--cardinal-from-degrees567,19441
(defun forecast--sun-position-graphic ()forecast--sun-position-graphic593,19944
(defun forecast--detailed-summary ()forecast--detailed-summary624,21039
(defun forecast--visualised-moon-phase ()forecast--visualised-moon-phase628,21214
(defun forecast--humidity ()forecast--humidity644,21894
(defun forecast--visibility ()forecast--visibility648,22016
(defun forecast--insert-atmosphere-details ()forecast--insert-atmosphere-details652,22131
(defun forecast--insert-upcoming-graph ()forecast--insert-upcoming-graph669,22690
(defun forecast--insert-upcoming-text ()forecast--insert-upcoming-text765,26658
(defun forecast--insert-io-link ()forecast--insert-io-link793,27665
(defun forecast--insert-location ()forecast--insert-location807,28085
(defun forecast--insert-update-time ()forecast--insert-update-time819,28484
(defun forecast--insert-summary ()forecast--insert-summary829,28836
(defun forecast--insert-sun-moon-graphic ()forecast--insert-sun-moon-graphic843,29268
(defun forecast--insert-hourly-forecast ()forecast--insert-hourly-forecast852,29573
(defun forecast--make-buffer (buffername)forecast--make-buffer883,30913
(defun forecast ()forecast921,31992
(defalias 'forecast-today 'forecast)forecast-today931,32251
(defvar forecast-mode-mapforecast-mode-map933,32289
(define-derived-mode forecast-mode special-modeforecast-mode941,32515
(defun forecast-refresh ()forecast-refresh949,32751
(defun forecast-quit (&optional quit)forecast-quit958,33010

elpa/forecast-20180429.1500/forecast-pkg.el,233
(define-package "forecast" "20180429.1500" "Weather forecasts" '((emacs "24.4")) :commit "e0dafad03b6948ba01df77f69aaf2211359a8c53" :keywords '("weather" "forecast") :url "http://gkayaalp.com/emacs.html#forecast-el")"forecast"2,31

elpa/package-utils-20180514.715/package-utils.el,1293
(defmacro package-utils-with-packages-list (packages &rest body)package-utils-with-packages-list35,1188
(defun package-utils-upgradable-packages ()package-utils-upgradable-packages46,1574
(defun package-utils-installed-packages ()package-utils-installed-packages51,1773
(defun package-utils-read-upgradable-package ()package-utils-read-upgradable-package55,1923
(defun package-utils-upgradable-p (name)package-utils-upgradable-p62,2224
(defun package-utils-installed-p (name)package-utils-installed-p66,2388
(defun package-utils-list-upgrades (&optional no-fetch)package-utils-list-upgrades71,2562
(defun package-utils-upgrade-all (&optional no-fetch)package-utils-upgrade-all84,3043
(defun package-utils-upgrade-all-no-fetch ()package-utils-upgrade-all-no-fetch100,3635
(defun package-utils-upgrade-all-and-quit (&optional no-fetch)package-utils-upgrade-all-and-quit106,3841
(defun package-utils-upgrade-all-and-restart (&optional no-fetch)package-utils-upgrade-all-and-restart116,4162
(defun package-utils-upgrade-by-name (name &optional no-fetch)package-utils-upgrade-by-name126,4477
(defun package-utils-upgrade-by-name-no-fetch (name)package-utils-upgrade-by-name-no-fetch142,4994
(defun package-utils-remove-by-name (name)package-utils-remove-by-name148,5248

elpa/package-utils-20180514.715/package-utils-pkg.el,258
(define-package "package-utils" "20180514.715" "Extensions for package.el" '((restart-emacs "0.1.1")) :commit "5621b95c56b55499f0463fd8b29501da25d861bd" :keywords '("package" "convenience") :url "https://github.com/Silex/package-utils")"package-utils"2,31

elpa/package-utils-20180514.715/package-utils-autoloads.el,0

elpa/magit-popup-20180509.1041/magit-popup.el,6774
(defgroup magit-popup nilmagit-popup73,2767
(defgroup magit-popup-faces nilmagit-popup-faces78,2897
(defcustom magit-popup-display-buffer-action '((display-buffer-below-selected))magit-popup-display-buffer-action84,3005
(defcustom magit-popup-manpage-packagemagit-popup-manpage-package94,3398
(defcustom magit-popup-show-help-echo tmagit-popup-show-help-echo101,3631
(defcustom magit-popup-show-common-commands nilmagit-popup-show-common-commands106,3757
(defcustom magit-popup-use-prefix-argument 'defaultmagit-popup-use-prefix-argument114,4086
(defface magit-popup-headingmagit-popup-heading136,4875
(defface magit-popup-keymagit-popup-key141,5011
(defface magit-popup-argumentmagit-popup-argument146,5138
(defface magit-popup-disabled-argumentmagit-popup-disabled-argument151,5293
(defface magit-popup-option-valuemagit-popup-option-value156,5442
(defvar magit-popup-mode-mapmagit-popup-mode-map163,5609
(defvar magit-popup-common-commandsmagit-popup-common-commands209,7814
(define-button-type 'magit-popup-buttonmagit-popup-button219,8207
(define-button-type 'magit-popup-switch-buttonmagit-popup-switch-button225,8389
(define-button-type 'magit-popup-option-buttonmagit-popup-option-button235,8667
(define-button-type 'magit-popup-variable-buttonmagit-popup-variable-button245,8945
(define-button-type 'magit-popup-action-buttonmagit-popup-action-button255,9223
(define-button-type 'magit-popup-command-buttonmagit-popup-command-button265,9511
(define-button-type 'magit-popup-internal-command-buttonmagit-popup-internal-command-button273,9843
(defvar-local magit-this-popup nilmagit-this-popup280,10003
(defvar-local magit-this-popup-events nilmagit-this-popup-events285,10168
(defvar-local magit-previous-popup nil)magit-previous-popup290,10346
(defvar-local magit-pre-popup-buffer nilmagit-pre-popup-buffer292,10387
(defun magit-popup-get (prop)magit-popup-get295,10496
(defun magit-popup-put (prop val)magit-popup-put301,10741
(defvar magit-current-popup nilmagit-current-popup308,11038
(defvar magit-current-popup-action nilmagit-current-popup-action316,11355
(defvar magit-current-popup-args nilmagit-current-popup-args319,11437
(defun magit-current-popup-args (&rest filter)magit-current-popup-args338,12309
(defvar magit-current-pre-popup-buffer nilmagit-current-pre-popup-buffer355,13139
(defmacro magit-with-pre-popup-buffer (&rest body)magit-with-pre-popup-buffer359,13301
(defun magit-popup-arg-match (pattern string)magit-popup-arg-match369,13766
(defun magit-popup-event-keydsc (ev)magit-popup-event-keydsc377,14054
(defun magit-popup-lookup (event type)magit-popup-lookup381,14194
(defun magit-popup-get-args ()magit-popup-get-args385,14353
(defmacro magit-popup-convert-events (def form)magit-popup-convert-events394,14738
(defun magit-popup-convert-switches (val def)magit-popup-convert-switches398,14904
(defun magit-popup-convert-options (val def)magit-popup-convert-options409,15342
(defun magit-popup-convert-variables (_val def)magit-popup-convert-variables419,15720
(defun magit-popup-convert-actions (_val def)magit-popup-convert-actions424,15900
(defmacro magit-define-popup (name doc &rest args)magit-define-popup431,16074
(defun magit-define-popup-switch (popup key desc switchmagit-define-popup-switch629,24399
(defun magit-define-popup-option (popup key desc optionmagit-define-popup-option654,25503
(defun magit-define-popup-variable (popup key desc command formattermagit-define-popup-variable685,26869
(defun magit-define-popup-action (popup key desc commandmagit-define-popup-action709,27895
(defun magit-define-popup-sequence-actionmagit-define-popup-sequence-action731,28828
(defconst magit-popup-type-plural-alistmagit-popup-type-plural-alist738,29104
(defun magit-popup-pluralize-type (type)magit-popup-pluralize-type745,29295
(defun magit-define-popup-keymagit-define-popup-key749,29404
(defun magit-define-popup-keys-deferred (popup)magit-define-popup-keys-deferred785,30980
(defun magit-change-popup-key (popup type from to)magit-change-popup-key793,31287
(defun magit-remove-popup-key (popup type key)magit-remove-popup-key802,31724
(defvar-local magit-popup-previous-winconf nil)magit-popup-previous-winconf815,32230
(defun magit-invoke-popup (popup mode arg)magit-invoke-popup817,32279
(defun magit-invoke-popup-switch (event)magit-invoke-popup-switch856,34037
(defun magit-invoke-popup-option (event)magit-invoke-popup-option865,34366
(defun magit-invoke-popup-action (event)magit-invoke-popup-action881,35054
(defun magit-popup-quit ()magit-popup-quit907,36186
(defun magit-popup-read-number (prompt &optional default)magit-popup-read-number918,36560
(defun magit-popup-set-default-arguments (arg)magit-popup-set-default-arguments926,36821
(defun magit-popup-save-default-arguments (arg)magit-popup-save-default-arguments939,37372
(defun magit-popup-toggle-show-common-commands ()magit-popup-toggle-show-common-commands954,37936
(defun magit-popup-help ()magit-popup-help964,38326
(defun magit-popup-manpage (topic arg)magit-popup-manpage1002,39980
(defun magit-popup-describe-function (function)magit-popup-describe-function1085,44297
(defun magit-popup-info ()magit-popup-info1101,44899
(define-minor-mode magit-popup-help-modemagit-popup-help-mode1113,45252
(define-derived-mode magit-popup-mode fundamental-mode "MagitPopup"magit-popup-mode1125,45734
(defun magit-popup-default-setup (val def)magit-popup-default-setup1136,46124
(defun magit-popup-mode-setup (popup mode)magit-popup-mode-setup1153,46962
(defun magit-popup-mode-display-buffer (buffer mode)magit-popup-mode-display-buffer1171,47796
(defvar magit-refresh-popup-buffer-hook nilmagit-refresh-popup-buffer-hook1177,48047
(defun magit-refresh-popup-buffer ()magit-refresh-popup-buffer1184,48329
(defvar magit-popup-min-padding 3magit-popup-min-padding1211,49455
(defun magit-popup-insert-section (type &optional spec heading)magit-popup-insert-section1214,49558
(defun magit-popup-format-argument-button (type ev)magit-popup-format-argument-button1267,52052
(defun magit-popup-format-variable-button (type ev)magit-popup-format-variable-button1288,53130
(defun magit-popup-format-action-button (type ev)magit-popup-format-action-button1298,53595
(defun magit-popup-insert-command-section (type spec)magit-popup-insert-command-section1323,54645
(defun magit-popup-format-command-button (type elt)magit-popup-format-command-button1331,54949
(defun magit-popup-import-file-args (args files)magit-popup-import-file-args1339,55243
(defun magit-popup-export-file-args (args)magit-popup-export-file-args1344,55382
(defconst magit-popup-font-lock-keywordsmagit-popup-font-lock-keywords1351,55623

elpa/magit-popup-20180509.1041/magit-popup-autoloads.el,0

elpa/magit-popup-20180509.1041/magit-popup-pkg.el,108
(define-package "magit-popup" "20180509.1041" "Define prefix-infix-suffix command combos""magit-popup"1,0

elpa/auto-read-only-20170305.2043/auto-read-only-autoloads.el,62
(defvar auto-read-only-mode nil "\auto-read-only-mode10,258

elpa/auto-read-only-20170305.2043/auto-read-only-pkg.el,141
(define-package "auto-read-only" "20170305.2043" "Automatically make the buffer to read-only" (quote ((cl-lib "0.5"))))"auto-read-only"1,0

elpa/auto-read-only-20170305.2043/auto-read-only.el,475
(defgroup auto-read-only ()auto-read-only53,1569
(defcustom auto-read-only-file-regexpsauto-read-only-file-regexps58,1690
(defcustom auto-read-only-function nilauto-read-only-function68,2208
(defvar auto-read-only-mode-lighter " AutoRO")auto-read-only-mode-lighter73,2454
(defun auto-read-only--hook-find-file ()auto-read-only--hook-find-file75,2502
(define-minor-mode auto-read-only-modeauto-read-only-mode81,2738
(defun auto-read-only ()auto-read-only90,3054

elpa/popup-20160709.729/popup-autoloads.el,0

elpa/popup-20160709.729/popup.el,6351
(defconst popup-version "0.5.3")popup-version35,1147
(defun popup-calculate-max-width (max-width)popup-calculate-max-width41,1199
(defvar popup-use-optimized-column-computation tpopup-use-optimized-column-computation48,1477
(defmacro popup-aif (test then &rest else)popup-aif52,1620
(defmacro popup-awhen (test &rest body)popup-awhen58,1754
(defun popup-x-to-string (x)popup-x-to-string64,1883
(defun popup-substring-by-width (string width)popup-substring-by-width74,2167
(defun popup-fill-string (string &optional width max-width justify squeeze)popup-fill-string89,2716
(defmacro popup-save-buffer-state (&rest body)popup-save-buffer-state142,4803
(defun popup-vertical-motion (column direction)popup-vertical-motion152,5096
(defun popup-last-line-of-buffer-p ()popup-last-line-of-buffer-p159,5355
(defun popup-lookup-key-by-event (function event)popup-lookup-key-by-event164,5518
(defgroup popup nilpopup177,5917
(defface popup-facepopup-face182,6005
(defface popup-summary-facepopup-summary-face187,6135
(defface popup-scroll-bar-foreground-facepopup-scroll-bar-foreground-face192,6262
(defface popup-scroll-bar-background-facepopup-scroll-bar-background-face197,6389
(defvar popup-instances nilpopup-instances202,6515
(defvar popup-scroll-bar-foreground-charpopup-scroll-bar-foreground-char205,6566
(defvar popup-scroll-bar-background-charpopup-scroll-bar-background-char209,6709
(defun popup-item-propertize (item &rest properties)popup-item-propertize221,7163
(defun popup-item-property (item property)popup-item-property231,7527
(defsubst popup-item-value (item)               (popup-item-property item 'value))popup-item-value259,8536
(defsubst popup-item-value-or-self (item)       (or (popup-item-value item) item))popup-item-value-or-self260,8619
(defsubst popup-item-face (item)                (popup-item-property item 'popup-face))popup-item-face261,8702
(defsubst popup-item-mouse-face (item)          (popup-item-property item 'popup-mouse-face))popup-item-mouse-face262,8790
(defsubst popup-item-selection-face (item)      (popup-item-property item 'selection-face))popup-item-selection-face263,8884
(defsubst popup-item-document (item)            (popup-item-property item 'document))popup-item-document264,8976
(defsubst popup-item-summary (item)             (popup-item-property item 'summary))popup-item-summary265,9062
(defsubst popup-item-symbol (item)              (popup-item-property item 'symbol))popup-item-symbol266,9147
(defsubst popup-item-sublist (item)             (popup-item-property item 'sublist))popup-item-sublist267,9231
(defun popup-item-documentation (item)popup-item-documentation269,9317
(defun popup-item-show-help-1 (item)popup-item-show-help-1275,9499
(defun popup-item-show-help-with-event-loop (item)popup-item-show-help-with-event-loop285,9791
(defun popup-item-show-help (item &optional persist)popup-item-show-help300,10386
(defun popup-set-list (popup list)popup-set-list311,10816
(defun popup-set-filtered-list (popup list)popup-set-filtered-list316,10969
(defun popup-selected-item (popup)popup-selected-item324,11224
(defun popup-selected-line (popup)popup-selected-line327,11309
(defun popup-line-overlay (popup line)popup-line-overlay330,11398
(defun popup-selected-line-overlay (popup)popup-selected-line-overlay333,11476
(defun popup-hide-line (popup line)popup-hide-line336,11578
(defun popup-line-hidden-p (popup line)popup-line-hidden-p341,11751
(defun popup-live-p (popup)popup-live-p425,15462
(defun popup-child-point (popup &optional offset)popup-child-point429,15569
(defun popup-calculate-direction (height row)popup-calculate-direction436,15723
(defun popup-delete (popup)popup-delete650,24280
(defun popup-draw (popup)popup-draw668,24858
(defun popup-hide (popup)popup-hide769,29974
(defun popup-hidden-p (popup)popup-hidden-p776,30200
(defun popup-jump (popup cursor)popup-jump785,30451
(defun popup-select (popup i)popup-select795,30856
(defun popup-next (popup)popup-next803,31084
(defun popup-previous (popup)popup-previous821,31687
(defun popup-page-next (popup)popup-page-next839,32276
(defun popup-page-previous (popup)popup-page-previous845,32462
(defun popup-scroll-down (popup &optional n)popup-scroll-down851,32658
(defun popup-scroll-up (popup &optional n)popup-scroll-up859,32999
(defface popup-isearch-matchpopup-isearch-match871,33318
(defvar popup-isearch-cursor-color "blue")popup-isearch-cursor-color876,33446
(defvar popup-isearch-keymappopup-isearch-keymap878,33490
(defvar popup-menu-show-quick-help-function 'popup-menu-show-quick-helppopup-menu-show-quick-help-function889,33946
(defcustom popup-isearch-regexp-builder-function #'regexp-quotepopup-isearch-regexp-builder-function892,34079
(defsubst popup-isearch-char-p (char)popup-isearch-char-p898,34337
(defun popup-isearch-filter-list (pattern list)popup-isearch-filter-list903,34442
(defun popup-isearch-prompt (popup pattern)popup-isearch-prompt924,35346
(defun popup-isearch-update (popup filter pattern &optional callback)popup-isearch-update929,35559
(defface popup-tip-facepopup-tip-face1010,38962
(defvar popup-tip-max-width 80)popup-tip-max-width1015,39080
(defface popup-menu-facepopup-menu-face1097,41758
(defface popup-menu-mouse-facepopup-menu-mouse-face1102,41857
(defface popup-menu-selection-facepopup-menu-selection-face1107,41981
(defface popup-menu-summary-facepopup-menu-summary-face1112,42141
(defvar popup-menu-show-tip-function 'popup-tippopup-menu-show-tip-function1117,42259
(defun popup-menu-show-help (menu &optional persist item)popup-menu-show-help1120,42380
(defun popup-menu-documentation (menu &optional item)popup-menu-documentation1123,42510
(defun popup-menu-show-quick-help (menu &optional item &rest args)popup-menu-show-quick-help1126,42632
(defun popup-menu-item-of-mouse-event (event)popup-menu-item-of-mouse-event1150,43532
(defun popup-menu-read-key-sequence (keymap &optional prompt timeout)popup-menu-read-key-sequence1158,43862
(defun popup-menu-fallback (event default))popup-menu-fallback1185,45188
(defun popup-preferred-width (list)popup-preferred-width1268,49040
(defvar popup-menu-keymappopup-menu-keymap1280,49552
(defun popup-cascade-menu (list &rest args)popup-cascade-menu1415,54833

elpa/popup-20160709.729/popup-pkg.el,107
(define-package "popup" "20160709.729" "Visual Popup User Interface" (quote ((cl-lib "0.5"))))"popup"1,0

elpa/anti-zenburn-theme-20180121.353/anti-zenburn-theme-pkg.el,128
(define-package "anti-zenburn-theme" "20180121.353" "Low-contrast Zenburn-inverted theme" (quote nil))"anti-zenburn-theme"1,0

elpa/anti-zenburn-theme-20180121.353/anti-zenburn-theme.el,77
(deftheme anti-zenburn "Reversed Zenburn color theme.")anti-zenburn28,1014

elpa/anti-zenburn-theme-20180121.353/anti-zenburn-theme-autoloads.el,0

elpa/dash-20180413.30/dash.el,15325
(defgroup dash ()dash37,1342
(defun dash--enable-fontlock (symbol value)dash--enable-fontlock42,1427
(defcustom dash-enable-fontlock nildash-enable-fontlock47,1545
(defmacro !cons (car cdr)!cons54,1728
(defmacro !cdr (list)!cdr58,1841
(defmacro --each (list &rest body)--each62,1939
(defmacro -doto (eval-initial-value &rest forms)-doto75,2269
(defun -each (list fn)-each90,2869
(defalias '--each-indexed '--each)--each-indexed96,3041
(defun -each-indexed (list fn)-each-indexed98,3077
(defmacro --each-while (list pred &rest body)--each-while107,3355
(defun -each-while (list pred fn)-each-while122,3802
(defmacro --dotimes (num &rest body)--dotimes129,4044
(defun -dotimes (num fn)-dotimes140,4396
(defun -map (fn list)-map146,4594
(defmacro --map (form list)--map150,4721
(defmacro --reduce-from (form initial-value list)--reduce-from155,4851
(defun -reduce-from (fn initial-value list)-reduce-from162,5056
(defmacro --reduce (form list)--reduce174,5490
(defun -reduce (fn list)-reduce183,5754
(defun -reduce-r-from (fn initial-value list)-reduce-r-from198,6290
(defmacro --reduce-r-from (form initial-value list)--reduce-r-from210,6749
(defun -reduce-r (fn list)-reduce-r215,6958
(defmacro --reduce-r (form list)--reduce-r234,7625
(defun -reductions-from (fn init list)-reductions-from239,7785
(defun -reductions (fn list)-reductions247,8081
(defun -reductions-r-from (fn init list)-reductions-r-from255,8330
(defun -reductions-r (fn list)-reductions-r263,8619
(defmacro --filter (form list)--filter271,8884
(defun -filter (pred list)-filter281,9128
(defalias '-select '-filter)-select289,9325
(defalias '--select '--filter)--select290,9354
(defmacro --remove (form list)--remove292,9386
(defun -remove (pred list)-remove299,9538
(defalias '-reject '-remove)-reject307,9714
(defalias '--reject '--remove)--reject308,9743
(defun -remove-first (pred list)-remove-first310,9775
(defmacro --remove-first (form list)--remove-first324,10136
(defalias '-reject-first '-remove-first)-reject-first329,10291
(defalias '--reject-first '--remove-first)--reject-first330,10332
(defun -remove-last (pred list)-remove-last332,10376
(defmacro --remove-last (form list)--remove-last340,10580
(defalias '-reject-last '-remove-last)-reject-last345,10732
(defalias '--reject-last '--remove-last)--reject-last346,10771
(defun -remove-item (item list)-remove-item348,10813
(defmacro --keep (form list)--keep355,11002
(defun -keep (fn list)-keep364,11270
(defun -non-nil (list)-non-nil370,11489
(defmacro --map-indexed (form list)--map-indexed375,11620
(defun -map-indexed (fn list)-map-indexed384,11850
(defmacro --map-when (pred rep list)--map-when392,12130
(defun -map-when (pred rep list)-map-when400,12367
(defalias '-replace-where '-map-when)-replace-where410,12706
(defalias '--replace-where '--map-when)--replace-where411,12744
(defun -map-first (pred rep list)-map-first413,12785
(defmacro --map-first (pred rep list)--map-first425,13183
(defun -map-last (pred rep list)-map-last429,13332
(defmacro --map-last (pred rep list)--map-last435,13543
(defun -replace (old new list)-replace439,13689
(defun -replace-first (old new list)-replace-first448,13910
(defun -replace-last (old new list)-replace-last457,14150
(defmacro --mapcat (form list)--mapcat466,14386
(defun -mapcat (fn list)-mapcat471,14523
(defun -flatten (l)-flatten476,14691
(defmacro --iterate (form init n)--iterate493,15268
(defun -flatten-n (num list)-flatten-n498,15421
(defun -concat (&rest lists)-concat505,15623
(defalias '-copy 'copy-sequence-copy510,15804
(defun -splice (pred fun list)-splice515,15885
(defmacro --splice (pred form list)--splice533,16400
(defun -splice-list (pred new-list list)-splice-list537,16530
(defmacro --splice-list (pred new-list list)--splice-list543,16716
(defun -cons* (&rest args)-cons*547,16855
(defun -snoc (list elem &rest elements)-snoc556,17141
(defmacro --first (form list)--first564,17375
(defun -first (pred list)-first573,17606
(defalias '-find '-first)-find581,17819
(defalias '--find '--first)--find582,17845
(defmacro --some (form list)--some584,17874
(defun -some (pred list)-some593,18093
(defalias '-any '-some)-any599,18250
(defalias '--any '--some)--any600,18274
(defmacro --last (form list)--last602,18301
(defun -last (pred list)-last611,18515
(defalias '-first-item 'car-first-item615,18643
(defalias '-second-item 'cadr-second-item627,18975
(defalias '-third-item 'caddr-third-item634,19110
(defun -fourth-item (list)-fourth-item641,19245
(defun -fifth-item (list)-fifth-item648,19438
(defun -last-item (list)-last-item665,19979
(defun -butlast (list)-butlast678,20455
(defmacro --count (pred list)--count684,20654
(defun -count (pred list)-count692,20870
(defun ---truthy? (val)---truthy?696,21002
(defmacro --any? (form list)--any?700,21089
(defun -any? (pred list)-any?705,21220
(defalias '-some? '-any?)-some?711,21384
(defalias '--some? '--any?)--some?712,21410
(defalias '-any-p '-any?)-any-p713,21438
(defalias '--any-p '--any?)--any-p714,21464
(defalias '-some-p '-any?)-some-p715,21492
(defalias '--some-p '--any?)--some-p716,21519
(defmacro --all? (form list)--all?718,21549
(defun -all? (pred list)-all?726,21767
(defalias '-every? '-all?)-every?732,21933
(defalias '--every? '--all?)--every?733,21960
(defalias '-all-p '-all?)-all-p734,21989
(defalias '--all-p '--all?)--all-p735,22015
(defalias '-every-p '-all?)-every-p736,22043
(defalias '--every-p '--all?)--every-p737,22071
(defmacro --none? (form list)--none?739,22102
(defun -none? (pred list)-none?744,22228
(defalias '-none-p '-none?)-none-p750,22370
(defalias '--none-p '--none?)--none-p751,22398
(defmacro --only-some? (form list)--only-some?753,22429
(defun -only-some? (pred list)-only-some?763,22741
(defalias '-only-some-p '-only-some?)-only-some-p770,23041
(defalias '--only-some-p '--only-some?)--only-some-p771,23079
(defun -slice (list from &optional to step)-slice773,23120
(defun -take (n list)-take800,24004
(defun -take-last (n list)-take-last812,24315
(defalias '-drop 'nthcdr-drop819,24483
(defun -drop-last (n list)-drop-last826,24603
(defmacro --take-while (form list)--take-while834,24827
(defun -take-while (pred list)-take-while842,25055
(defmacro --drop-while (form list)--drop-while846,25223
(defun -drop-while (pred list)-drop-while855,25469
(defun -split-at (n list)-split-at859,25634
(defun -rotate (n list)-rotate869,25942
(defun -insert-at (n x list)-insert-at877,26228
(defun -replace-at (n x list)-replace-at885,26495
(defun -update-at (n func list)-update-at893,26767
(defmacro --update-at (n form list)--update-at900,27057
(defun -remove-at (n list)-remove-at905,27216
(defun -remove-at-indices (indices list)-remove-at-indices912,27431
(defmacro --split-with (pred list)--split-with929,27995
(defun -split-with (pred list)-split-with946,28466
(defmacro -split-on (item list)-split-on950,28654
(defmacro --split-when (form list)--split-when962,28985
(defun -split-when (fn list)-split-when967,29137
(defmacro --separate (form list)--separate985,29660
(defun -separate (pred list)-separate994,29949
(defun ---partition-all-in-steps-reversed (n step list)---partition-all-in-steps-reversed998,30112
(defun -partition-all-in-steps (n step list)-partition-all-in-steps1008,30477
(defun -partition-in-steps (n step list)-partition-in-steps1014,30773
(defun -partition-all (n list)-partition-all1024,31208
(defun -partition (n list)-partition1030,31442
(defmacro --partition-by (form list)--partition-by1037,31711
(defun -partition-by (fn list)-partition-by1064,32530
(defmacro --partition-by-header (form list)--partition-by-header1068,32685
(defun -partition-by-header (fn list)-partition-by-header1099,33656
(defun -partition-after-pred (pred list)-partition-after-pred1106,33951
(defun -partition-before-pred (pred list)-partition-before-pred1121,34438
(defun -partition-after-item (item list)-partition-after-item1126,34650
(defun -partition-before-item (item list)-partition-before-item1131,34842
(defmacro --group-by (form list)--group-by1136,35038
(defun -group-by (fn list)-group-by1158,35590
(defun -interpose (sep list)-interpose1163,35769
(defun -interleave (&rest lists)-interleave1175,36102
(defmacro --zip-with (form list1 list2)--zip-with1185,36433
(defun -zip-with (fn list1 list2)-zip-with1204,37001
(defun -zip (&rest lists)-zip1214,37415
(defalias '-zip-pair '-zip)-zip-pair1237,38378
(defun -zip-fill (fill-value &rest lists)-zip-fill1239,38407
(defun -unzip (lists)-unzip1246,38698
(defun -cycle (list)-cycle1259,38976
(defun -pad (fill-value &rest lists)-pad1266,39215
(defun -annotate (fn list)-annotate1273,39529
(defmacro --annotate (form list)--annotate1278,39717
(defun dash--table-carry (lists restore-lists &optional re)dash--table-carry1283,39863
(defun -table (fn &rest lists)-table1298,40300
(defun -table-flat (fn &rest lists)-table-flat1319,41042
(defun -partial (fn &rest args)-partial1345,41922
(defun -elem-index (elem list)-elem-index1352,42208
(defun -elem-indices (elem list)-elem-indices1359,42455
(defun -find-indices (pred list)-find-indices1365,42678
(defmacro --find-indices (form list)--find-indices1370,42891
(defun -find-index (pred list)-find-index1375,43049
(defmacro --find-index (form list)--find-index1383,43289
(defun -find-last-index (pred list)-find-last-index1388,43441
(defmacro --find-last-index (form list)--find-last-index1396,43691
(defun -select-by-indices (indices list)-select-by-indices1400,43826
(defun -select-columns (columns table)-select-columns1409,44098
(defun -select-column (column table)-select-column1422,44495
(defmacro -> (x &optional form &rest more)->1434,44874
(defmacro ->> (x &optional form &rest more)->>1447,45390
(defmacro --> (x &rest forms)-->1460,45845
(defmacro -as-> (value variable &rest forms)-as->1469,46186
(defmacro -some-> (x &optional form &rest more)-some->1484,46686
(defmacro -some->> (x &optional form &rest more)-some->>1494,47058
(defmacro -some--> (x &optional form &rest more)-some-->1504,47436
(defun -grade-up (comparator list)-grade-up1514,47814
(defun -grade-down (comparator list)-grade-down1524,48229
(defvar dash--source-counter 0dash--source-counter1534,48647
(defun dash--match-make-source-symbol ()dash--match-make-source-symbol1537,48725
(defun dash--match-ignore-place-p (symbol)dash--match-ignore-place-p1544,48991
(defun dash--match-cons-skip-cdr (skip-cdr source)dash--match-cons-skip-cdr1549,49166
(defun dash--match-cons-get-car (skip-cdr source)dash--match-cons-get-car1558,49458
(defun dash--match-cons-get-cdr (skip-cdr source)dash--match-cons-get-cdr1568,49696
(defun dash--match-cons (match-form source)dash--match-cons1578,49928
(defun dash--match-cons-1 (match-form source &optional props)dash--match-cons-11602,50876
(defun dash--vector-tail (seq start)dash--vector-tail1636,52306
(defun dash--match-vector (match-form source)dash--match-vector1647,52628
(defun dash--match-vector-1 (match-form source)dash--match-vector-11666,53567
(defun dash--match-kv (match-form source)dash--match-kv1706,55037
(defun dash--match-kv-1 (match-form source type)dash--match-kv-11721,55686
(defun dash--match-symbol (match-form source)dash--match-symbol1751,56966
(defun dash--match (match-form source)dash--match1757,57123
(defmacro -let* (varlist &rest body)-let*1791,58343
(defmacro -let (varlist &rest body)-let1809,59014
(defmacro -lambda (match-form &rest body)-lambda1949,63958
(defmacro -if-let* (vars-vals then &rest else)-if-let*1982,65260
(defmacro -if-let (var-val then &rest else)-if-let2001,65908
(defmacro --if-let (val then &rest else)--if-let2012,66215
(defmacro -when-let* (vars-vals &rest body)-when-let*2019,66441
(defmacro -when-let (var-val &rest body)-when-let2031,66873
(defmacro --when-let (val &rest body)--when-let2041,67152
(defvar -compare-fn nil-compare-fn2048,67354
(defun -distinct (list)-distinct2054,67575
(defalias '-uniq '-distinct)-uniq2064,67860
(defun -union (list list2)-union2066,67890
(defun -intersection (list list2)-intersection2085,68780
(defun -difference (list list2)-difference2091,69033
(defun -powerset (list)-powerset2097,69273
(defun -permutations (list)-permutations2104,69481
(defun -inits (list)-inits2113,69772
(defun -tails (list)-tails2117,69882
(defun -common-prefix (&rest lists)-common-prefix2121,69975
(defun -contains? (list element)-contains?2127,70182
(defalias '-contains-p '-contains?)-contains-p2147,70718
(defun -same-items? (list list2)-same-items?2149,70755
(defalias '-same-items-p '-same-items?)-same-items-p2161,71085
(defun -is-prefix? (prefix list)-is-prefix?2163,71126
(defun -is-suffix? (suffix list)-is-suffix?2172,71353
(defun -is-infix? (infix list)-is-infix?2179,71549
(defalias '-is-prefix-p '-is-prefix?)-is-prefix-p2192,71847
(defalias '-is-suffix-p '-is-suffix?)-is-suffix-p2193,71885
(defalias '-is-infix-p '-is-infix?)-is-infix-p2194,71923
(defun -sort (comparator list)-sort2196,71960
(defmacro --sort (form list)--sort2203,72283
(defun -list (&rest args)-list2208,72420
(defun -repeat (n x)-repeat2217,72684
(defun -sum (list)-sum2225,72878
(defun -running-sum (list)-running-sum2230,72987
(defun -product (list)-product2239,73222
(defun -running-product (list)-running-product2244,73339
(defun -max (list)-max2253,73582
(defun -min (list)-min2258,73727
(defun -max-by (comparator list)-max-by2263,73873
(defun -min-by (comparator list)-min-by2271,74172
(defmacro --max-by (form list)--max-by2279,74468
(defmacro --min-by (form list)--min-by2286,74686
(defun -iterate (fun init n)-iterate2293,74904
(defun -fix (fn list)-fix2307,75233
(defmacro --fix (form list)--fix2317,75512
(defun -unfold (fun seed)-unfold2321,75608
(defmacro --unfold (form seed)--unfold2337,76129
(defun -cons-pair? (con)-cons-pair?2342,76269
(defun -cons-to-list (con)-cons-to-list2349,76473
(defun -value-to-list (val)-value-to-list2354,76654
(defun -tree-mapreduce-from (fn folder init-value tree)-tree-mapreduce-from2366,76981
(defmacro --tree-mapreduce-from (form folder init-value tree)--tree-mapreduce-from2383,77659
(defun -tree-mapreduce (fn folder tree)-tree-mapreduce2388,77901
(defmacro --tree-mapreduce (form folder tree)--tree-mapreduce2405,78526
(defun -tree-map (fn tree)-tree-map2410,78725
(defmacro --tree-map (form tree)--tree-map2419,78990
(defun -tree-reduce-from (fn init-value tree)-tree-reduce-from2424,79133
(defmacro --tree-reduce-from (form init-value tree)--tree-reduce-from2440,79691
(defun -tree-reduce (fn tree)-tree-reduce2445,79890
(defmacro --tree-reduce (form tree)--tree-reduce2460,80397
(defun -tree-map-nodes (pred fun tree)-tree-map-nodes2465,80553
(defmacro --tree-map-nodes (pred form tree)--tree-map-nodes2478,80975
(defun -tree-seq (branch children tree)-tree-seq2482,81129
(defmacro --tree-seq (branch children tree)--tree-seq2497,81667
(defun -clone (list)-clone2501,81815
(defun dash-enable-font-lock ()dash-enable-font-lock2509,82106

elpa/dash-20180413.30/dash-pkg.el,95
(define-package "dash" "20180413.30" "A modern list library for Emacs" (quote nil))"dash"1,0

elpa/dash-20180413.30/dash-autoloads.el,0

elpa/git-commit-20180607.906/git-commit-autoloads.el,248
(defvar global-git-commit-mode t "\global-git-commit-mode12,307
(defconst git-commit-filename-regexp "/\\(\\(\\(COMMIT\\|NOTES\\|PULLREQ\\|TAG\\)_EDIT\\|MERGE_\\|\\)MSG\\|\\(BRANCH\\|EDIT\\)_DESCRIPTION\\)\\'")git-commit-filename-regexp31,1017

elpa/git-commit-20180607.906/git-commit.el,4884
(defvar diff-default-read-only)diff-default-read-only128,5359
(defvar flyspell-generic-check-word-predicate)flyspell-generic-check-word-predicate129,5391
(defvar font-lock-beg)font-lock-beg130,5438
(defvar font-lock-end)font-lock-end131,5461
(defgroup git-commit nilgit-commit141,5755
(define-minor-mode global-git-commit-modeglobal-git-commit-mode148,5921
(defcustom git-commit-major-mode 'text-modegit-commit-major-mode166,6653
(defcustom git-commit-setup-hookgit-commit-setup-hook174,6940
(defcustom git-commit-finish-query-functionsgit-commit-finish-query-functions192,7559
(defcustom git-commit-style-convention-checks '(non-empty-second-line)git-commit-style-convention-checks209,8237
(defcustom git-commit-summary-max-length 68git-commit-summary-max-length217,8655
(defcustom git-commit-fill-column nilgit-commit-fill-column230,9168
(defcustom git-commit-known-pseudo-headersgit-commit-known-pseudo-headers249,9936
(defgroup git-commit-faces nilgit-commit-faces259,10264
(defface git-commit-summarygit-commit-summary265,10411
(defface git-commit-overlong-summarygit-commit-overlong-summary270,10556
(defface git-commit-nonempty-second-linegit-commit-nonempty-second-line275,10728
(defface git-commit-notegit-commit-note280,10911
(defface git-commit-pseudo-headergit-commit-pseudo-header285,11049
(defface git-commit-known-pseudo-headergit-commit-known-pseudo-header290,11205
(defface git-commit-comment-branch-localgit-commit-comment-branch-local295,11390
(define-obsolete-face-alias 'git-commit-comment-branchgit-commit-comment-branch302,11645
(defface git-commit-comment-branch-remotegit-commit-comment-branch-remote305,11757
(defface git-commit-comment-detachedgit-commit-comment-detached313,12056
(defface git-commit-comment-headinggit-commit-comment-heading318,12234
(defface git-commit-comment-filegit-commit-comment-file323,12403
(defface git-commit-comment-actiongit-commit-comment-action328,12565
(defvar git-commit-mode-mapgit-commit-mode-map335,12718
(defconst git-commit-filename-regexp "/\\(\git-commit-filename-regexp397,15252
(defun git-commit-setup-font-lock-in-buffer ()git-commit-setup-font-lock-in-buffer406,15574
(defun git-commit-setup-check-buffer ()git-commit-setup-check-buffer414,15847
(defvar git-commit-mode)git-commit-mode419,16008
(defun git-commit-setup ()git-commit-setup422,16049
(define-minor-mode git-commit-modegit-commit-mode473,18264
(defun git-commit-setup-changelog-support ()git-commit-setup-changelog-support481,18550
(defun git-commit-turn-on-auto-fill ()git-commit-turn-on-auto-fill485,18709
(defun git-commit-turn-on-flyspell ()git-commit-turn-on-flyspell496,19156
(defun git-commit-flyspell-verify ()git-commit-flyspell-verify515,19812
(defun git-commit-finish-query-functions (force)git-commit-finish-query-functions519,19935
(defun git-commit-check-style-conventions (force)git-commit-check-style-conventions523,20067
(defun git-commit-cancel-message ()git-commit-cancel-message544,21062
(defun git-commit-prev-message (arg)git-commit-prev-message552,21294
(defun git-commit-next-message (arg)git-commit-next-message568,21937
(defun git-commit-save-message ()git-commit-save-message574,22158
(defun git-commit-buffer-message ()git-commit-buffer-message581,22403
(defun git-commit-ack (name mail)git-commit-ack604,23191
(defun git-commit-modified (name mail)git-commit-modified609,23387
(defun git-commit-review (name mail)git-commit-review614,23586
(defun git-commit-signoff (name mail)git-commit-signoff619,23787
(defun git-commit-test (name mail)git-commit-test624,23966
(defun git-commit-cc (name mail)git-commit-cc629,24161
(defun git-commit-reported (name mail)git-commit-reported634,24344
(defun git-commit-suggested (name mail)git-commit-suggested639,24544
(defun git-commit-self-ident ()git-commit-self-ident644,24748
(defun git-commit-read-ident ()git-commit-read-ident656,25231
(defun git-commit-insert-header (header name email)git-commit-insert-header660,25329
(defun git-commit-summary-regexp ()git-commit-summary-regexp679,25950
(defun git-commit-extend-region-summary-line ()git-commit-extend-region-summary-line688,26286
(defvar-local git-commit--branch-name-regexp nil)git-commit--branch-name-regexp702,26908
(defconst git-commit-comment-headingsgit-commit-comment-headings704,26959
(defconst git-commit-font-lock-keywords-1git-commit-font-lock-keywords-1713,27170
(defconst git-commit-font-lock-keywords-2git-commit-font-lock-keywords-2732,27909
(defconst git-commit-font-lock-keywords-3git-commit-font-lock-keywords-3748,28675
(defvar git-commit-font-lock-keywords git-commit-font-lock-keywords-2git-commit-font-lock-keywords776,29776
(defun git-commit-setup-font-lock ()git-commit-setup-font-lock779,29892
(defun git-commit-propertize-diff ()git-commit-propertize-diff819,31764

elpa/git-commit-20180607.906/git-commit-pkg.el,272
(define-package "git-commit" "20180607.906" "Edit Git commit messages" '((emacs "25.1") (dash "20180413") (with-editor "20180414")) :commit "0b8e2aeb6248c9e3599b7e2adbd38f0281249cac" :keywords '("git" "tools" "vc") :url "https://github.com/magit/magit")"git-commit"2,31

elpa/fuzzy-20150729.2037/fuzzy-pkg.el,154
(define-package "fuzzy" "20150729.2037" "Fuzzy Matching" 'nil :commit "534d723ad2e06322ff8d9bd0ba4863d243f698e7" :keywords '("convenience"))"fuzzy"2,31

elpa/fuzzy-20150729.2037/fuzzy-autoloads.el,0

elpa/fuzzy-20150729.2037/fuzzy.el,3150
(defgroup fuzzy nilfuzzy32,920
(defun fuzzy-current-time-float ()fuzzy-current-time-float41,1020
(defmacro* fuzzy-with-stopwatch ((&optional (elapsed-name 'elapsed)) &body body)fuzzy-with-stopwatch49,1222
(defun* fuzzy-add-to-list-as-sorted (list-var value &key (test '<) (key 'identity))fuzzy-add-to-list-as-sorted56,1501
(defmacro* fuzzy-with-timeout ((timeout &optional timeout-result (tick-name 'tick)) &body body)fuzzy-with-timeout71,2071
(defun fuzzy-count-matches-in-string (regexp string &optional start end)fuzzy-count-matches-in-string81,2463
(defun fuzzy-jaro-winkler-distance (s1 s2)fuzzy-jaro-winkler-distance94,2863
(defalias 'fuzzy-jaro-winkler-score 'fuzzy-jaro-winkler-distance)fuzzy-jaro-winkler-score140,4296
(defcustom fuzzy-match-score-function 'fuzzy-jaro-winkler-scorefuzzy-match-score-function146,4386
(defcustom fuzzy-match-accept-error-rate 0.10fuzzy-match-accept-error-rate151,4525
(defcustom fuzzy-match-accept-length-difference 2fuzzy-match-accept-length-difference156,4641
(defvar fuzzy-match-score-cachefuzzy-match-score-cache161,4773
(defun fuzzy-match-score (s1 s2 function)fuzzy-match-score164,4852
(defun* fuzzy-match (s1 s2 &optional (function fuzzy-match-score-function))fuzzy-match171,5104
(defun fuzzy-all-completions (string collection)fuzzy-all-completions184,5524
(defvar fuzzy-search-some-char-regexpfuzzy-search-some-char-regexp196,5860
(defun fuzzy-search-regexp-compile (string)fuzzy-search-regexp-compile199,5962
(defun fuzzy-search-forward (string &optional bound noerror count)fuzzy-search-forward217,6542
(defun fuzzy-search-backward (string &optional bound noerror count)fuzzy-search-backward230,7029
(defvar fuzzy-isearch nil)fuzzy-isearch256,7907
(defvar fuzzy-isearch-failed-count 0)fuzzy-isearch-failed-count257,7934
(defvar fuzzy-isearch-enabled 'on-failed)fuzzy-isearch-enabled258,7972
(defvar fuzzy-isearch-original-search-fun nil)fuzzy-isearch-original-search-fun259,8014
(defvar fuzzy-isearch-message-prefixfuzzy-isearch-message-prefix260,8061
(defun fuzzy-isearch-activate ()fuzzy-isearch-activate263,8150
(defun fuzzy-isearch-deactivate ()fuzzy-isearch-deactivate267,8248
(defun fuzzy-isearch ()fuzzy-isearch271,8350
(defun fuzzy-isearch-end-hook ()fuzzy-isearch-end-hook286,8943
(defun turn-on-fuzzy-isearch ()turn-on-fuzzy-isearch289,9007
(defun turn-off-fuzzy-isearch ()turn-off-fuzzy-isearch295,9240
(defadvice isearch-message-prefix (after fuzzy-isearch-message-prefix activate)isearch-message-prefix300,9425
(defun fuzzy-quicksilver-make-abbrev-regexp (abbrev)fuzzy-quicksilver-make-abbrev-regexp309,9674
(defun fuzzy-quicksilver-abbrev-penalty (string skip-start skip-end)fuzzy-quicksilver-abbrev-penalty315,9894
(defun fuzzy-quicksilver-abbrev-score-nocache (string abbrev)fuzzy-quicksilver-abbrev-score-nocache330,10553
(defvar fuzzy-quicksilver-abbrev-score-cachefuzzy-quicksilver-abbrev-score-cache356,11516
(defun fuzzy-quicksilver-abbrev-score (string abbrev)fuzzy-quicksilver-abbrev-score359,11608
(defun* fuzzy-quicksilver-realtime-abbrev-score (listfuzzy-quicksilver-realtime-abbrev-score366,11927

elpa/irony-20180519.422/irony-diagnostics.el,462
(defun irony-diagnostics-file (diagnostic)irony-diagnostics-file39,1141
(defun irony-diagnostics-line (diagnostic)irony-diagnostics-line42,1207
(defun irony-diagnostics-column (diagnostic)irony-diagnostics-column45,1273
(defun irony-diagnostics-severity (diagnostic)irony-diagnostics-severity48,1341
(defun irony-diagnostics-message (diagnostic)irony-diagnostics-message51,1411
(defun irony-diagnostics-async (callback)irony-diagnostics-async54,1480

elpa/irony-20180519.422/irony-snippet.el,769
(defvar irony-snippet--expand-function nilirony-snippet--expand-function37,1191
(defun irony-snippet-available-p ()irony-snippet-available-p50,1511
(defun irony-snippet-expand (snippet-str &optional pos)irony-snippet-expand55,1679
(defun irony-snippet--get-expand-function ()irony-snippet--get-expand-function65,1952
(defun irony-snippet--init-yas ()irony-snippet--init-yas70,2104
(defun irony-snippet--yas-disabled-p ()irony-snippet--yas-disabled-p93,3248
(defun irony-snippet--expand-yas-1 (snippet-str &optional pos)irony-snippet--expand-yas-1106,3772
(defun irony-snippet--expand-yas-2 (snippet-str &optional pos)irony-snippet--expand-yas-2114,4114
(defun irony-snippet--expand-yas-3 (snippet-str &optional pos)irony-snippet--expand-yas-3124,4448

elpa/irony-20180519.422/irony-completion.el,3163
(defgroup irony-completion nilirony-completion38,1127
(defcustom irony-completion-trigger-commands '(self-insert-commandirony-completion-trigger-commands42,1210
(defcustom irony-completion-availability-filter '(available deprecated)irony-completion-availability-filter60,2254
(defun irony-completion-symbol-bounds ()irony-completion-symbol-bounds78,2799
(defun irony-completion-beginning-of-symbol ()irony-completion-beginning-of-symbol99,3669
(defun irony-completion-end-of-symbol ()irony-completion-end-of-symbol102,3759
(defsubst irony-completion--skip-whitespaces-backward ()irony-completion--skip-whitespaces-backward105,3843
(defun irony-completion--parse-context-position (&optional pos)irony-completion--parse-context-position109,4003
(defun irony--completion-line-column (&optional pos)irony--completion-line-column116,4187
(defun irony-completion--enter ()irony-completion--enter133,4588
(defun irony-completion--exit ()irony-completion--exit136,4701
(defun irony-completion--post-complete-yas-snippet (str placeholders)irony-completion--post-complete-yas-snippet139,4812
(defun irony--complete-task-1 (&optional buffer pos)irony--complete-task-1170,5877
(defun irony--complete-task (&optional buffer pos)irony--complete-task179,6335
(defun irony--candidates-task (&optional buffer pos prefix style)irony--candidates-task197,6974
(defun irony-completion-typed-text (candidate)irony-completion-typed-text207,7205
(defun irony-completion-priority (candidate)irony-completion-priority210,7274
(defun irony-completion-type (candidate)irony-completion-type213,7341
(defun irony-completion-brief (candidate)irony-completion-brief216,7404
(defun irony-completion-annotation (candidate)irony-completion-annotation219,7468
(defun irony-completion-post-comp-str (candidate)irony-completion-post-comp-str222,7567
(defun irony-completion-post-comp-placeholders (candidate)irony-completion-post-comp-placeholders225,7645
(defun irony-completion-availability (candidate)irony-completion-availability228,7732
(defun irony-completion--filter-candidates (candidates)irony-completion--filter-candidates232,7850
(defun irony-completion-candidates (&optional prefix style)irony-completion-candidates239,8069
(defun irony-completion-candidates-async (callback &optional prefix style)irony-completion-candidates-async263,9110
(defun irony-completion-post-complete (candidate)irony-completion-post-complete272,9533
(defun irony-completion-at-trigger-point-p ()irony-completion-at-trigger-point-p280,9930
(defsubst irony-completion--capf-candidate (candidate)irony-completion--capf-candidate326,12020
(defun irony-completion--capf-annotate (candidate)irony-completion--capf-annotate329,12123
(defun irony-completion--capf-postcomp-commonprefix (candidates)irony-completion--capf-postcomp-commonprefix333,12256
(defun irony-completion--capf-postcomp-all-equal-p (candidates)irony-completion--capf-postcomp-all-equal-p346,12932
(defun irony-completion--capf-exit-function (candidates str status)irony-completion--capf-exit-function356,13476
(defun irony-completion-at-point ()irony-completion-at-point393,15429

elpa/irony-20180519.422/irony-pkg.el,90
(define-package "irony" "20180519.422" "C/C++ minor mode powered by libclang""irony"1,0

elpa/irony-20180519.422/.dir-locals.el,0

elpa/irony-20180519.422/irony.el,5099
(defgroup irony nilirony91,2801
(defcustom irony-lighter " Irony"irony-lighter95,2877
(defcustom irony-extra-cmake-args nilirony-extra-cmake-args100,3005
(defcustom irony-user-dir (locate-user-emacs-file "irony/")irony-user-dir105,3142
(defcustom irony-supported-major-modes '(c++-modeirony-supported-major-modes113,3337
(defcustom irony-additional-clang-options nilirony-additional-clang-options121,3598
(defcustom irony-lang-compile-option-alistirony-lang-compile-option-alist134,4023
(defcustom irony-cmake-executable "cmake"irony-cmake-executable142,4291
(defcustom irony-server-source-dir nilirony-server-source-dir147,4409
(defcustom irony-server-build-dir nilirony-server-build-dir158,4748
(defcustom irony-server-install-prefix irony-user-dirirony-server-install-prefix166,4987
(defcustom irony-server-w32-pipe-buffer-size nilirony-server-w32-pipe-buffer-size174,5218
(defvar-local irony--compile-options nilirony--compile-options195,5816
(defvar-local irony--working-directory nilirony--working-directory202,6041
(defconst irony--eot "\n;;EOT\n"irony--eot214,6368
(defun irony--define-error (name message &optional parent)irony--define-error223,6561
(defmacro irony--aif (test if-expr &rest else-body)irony--aif253,7814
(defmacro irony--awhen (test &rest body)irony--awhen261,8049
(defun irony--assoc-all (key list)irony--assoc-all267,8174
(defmacro irony--without-narrowing (&rest body)irony--without-narrowing273,8346
(defun irony--buffer-size-in-bytes ()irony--buffer-size-in-bytes283,8635
(defun irony--read-char-choice (prompt chars)irony--read-char-choice287,8749
(defun irony--shorten-path (path)irony--shorten-path299,9186
(defun irony--split-command-line-1 (quoted-str)irony--split-command-line-1311,9615
(defun irony--split-command-line (cmd-line)irony--split-command-line336,10427
(defun irony--get-buffer-path-for-server (&optional buffer)irony--get-buffer-path-for-server386,12424
(defvar irony-mode-map (make-sparse-keymap)irony-mode-map401,12760
(define-minor-mode irony-modeirony-mode405,12862
(defun irony--mode-enter ()irony--mode-enter415,13080
(defun irony--mode-exit ()irony--mode-exit431,13786
(defun irony-version (&optional show-version)irony-version435,13857
(defun irony--lang-compile-option ()irony--lang-compile-option453,14306
(defun irony--extract-working-directory-option (flags)irony--extract-working-directory-option457,14442
(defun irony--adjust-compile-options ()irony--adjust-compile-options471,14912
(defun irony--extract-user-search-paths (compile-options work-dir)irony--extract-user-search-paths484,15470
(defvar irony--server-install-command-history nil)irony--server-install-command-history517,16630
(defun irony--install-server-read-command (command)irony--install-server-read-command518,16681
(defun irony-install-server (command)irony-install-server525,16953
(defun irony--server-install-finish-function (buffer msg)irony--server-install-finish-function562,18876
(defun irony--find-server-executable ()irony--find-server-executable567,19098
(defvar irony--server-executable nil)irony--server-executable610,20942
(defvar irony--server-process nil)irony--server-process611,20980
(defvar irony--server-buffer " *Irony*"irony--server-buffer612,21015
(defun irony--start-server-process ()irony--start-server-process618,21224
(defun irony-server-kill ()irony-server-kill642,22276
(defun irony--get-server-process-create ()irony--get-server-process-create649,22499
(defun irony--run-task (task)irony--run-task654,22681
(defun irony--run-task-asynchronously (task callback)irony--run-task-asynchronously657,22774
(defun irony--quote-strings (strings &optional separator)irony--quote-strings660,22905
(defun irony--server-send-command (command &rest args)irony--server-send-command680,23605
(defun irony--server-command-update (&rest _args)irony--server-command-update692,24192
(defun irony--server-query-update (&rest _args)irony--server-query-update711,24998
(defun irony--get-compile-options-task (build-dir file)irony--get-compile-options-task732,25695
(defun irony--buffer-state-create (buffer)irony--buffer-state-create742,25958
(defun irony--buffer-state-compare (old new)irony--buffer-state-compare749,26313
(defun irony--set-unsaved-task (process buffer buf-state)irony--set-unsaved-task790,28175
(defun irony--reset-unsaved-task (process buffer)irony--reset-unsaved-task809,29006
(defun irony--list-unsaved-irony-mode-buffers (&optional ignore-list)irony--list-unsaved-irony-mode-buffers812,29126
(defun irony--get-buffer-change-alist (process)irony--get-buffer-change-alist820,29479
(defun irony--unsaved-buffers-tasks ()irony--unsaved-buffers-tasks831,29897
(defun irony--parse-task-1 (&optional buffer)irony--parse-task-1857,30975
(defun irony--parse-task (&optional buffer)irony--parse-task863,31253
(defun irony--diagnostics-task (&optional buffer)irony--diagnostics-task876,31689
(defun irony--get-type-task (&optional buffer pos)irony--get-type-task887,32049
(defun irony-get-type ()irony-get-type895,32353

elpa/irony-20180519.422/irony-cdb-clang-complete.el,379
(defun irony-cdb-clang-complete (command &rest args)irony-cdb-clang-complete33,1009
(defun irony-cdb-clang-complete--get-compile-options ()irony-cdb-clang-complete--get-compile-options37,1158
(defun irony-cdb-clang-complete--locate-db ()irony-cdb-clang-complete--locate-db41,1314
(defun irony-cdb-clang-complete--load-db (cc-file)irony-cdb-clang-complete--load-db46,1528

elpa/irony-20180519.422/irony-cdb.el,1085
(defgroup irony-cdb nilirony-cdb46,1480
(defcustom irony-cdb-compilation-databases '(irony-cdb-clang-completeirony-cdb-compilation-databases50,1566
(defcustom irony-cdb-search-directory-list '("." "build")irony-cdb-search-directory-list66,2275
(defvar-local irony-cdb--compilation-database nil)irony-cdb--compilation-database85,2935
(defun irony-cdb-autosetup-compile-options ()irony-cdb-autosetup-compile-options93,3051
(defun irony-cdb-menu ()irony-cdb-menu100,3303
(defun irony-cdb--choose-closest-path (file paths)irony-cdb--choose-closest-path131,4495
(defun irony-cdb--locate-dominating-file-with-dirs (fileirony-cdb--locate-dominating-file-with-dirs164,6050
(defun irony-cdb--update-compile-options (compile-optionsirony-cdb--update-compile-options182,6976
(defun irony-cdb--autodetect-compile-options ()irony-cdb--autodetect-compile-options187,7206
(defun irony-cdb--string-suffix-p (suffix string &optional ignore-case)irony-cdb--string-suffix-p196,7624
(defun irony-cdb--remove-compiler-from-flags (flags)irony-cdb--remove-compiler-from-flags203,7949

elpa/irony-20180519.422/irony-autoloads.el,84
(defvar irony-additional-clang-options nil "\irony-additional-clang-options11,289

elpa/irony-20180519.422/server/src/Style.h,505
#define IRONY_MODE_SERVER_STYLE_H_IRONY_MODE_SERVER_STYLE_H_10,189
enum class PrefixMatchStyle {PrefixMatchStyle12,225
  Exact, CaseInsensitive, SmartCase,Exact13,255
  Exact, CaseInsensitive, SmartCase,PrefixMatchStyle::Exact13,255
  Exact, CaseInsensitive, SmartCase,CaseInsensitive13,255
  Exact, CaseInsensitive, SmartCase,PrefixMatchStyle::CaseInsensitive13,255
  Exact, CaseInsensitive, SmartCase,SmartCase13,255
  Exact, CaseInsensitive, SmartCase,PrefixMatchStyle::SmartCase13,255

elpa/irony-20180519.422/server/src/Irony.cpp,4245
std::string cxStringToStd(CXString cxString) {cxStringToStd25,424
std::string cxStringToStd(CXString cxString) {__anon1::cxStringToStd25,424
const char *diagnosticSeverity(const CXDiagnostic &diagnostic) {diagnosticSeverity36,626
const char *diagnosticSeverity(const CXDiagnostic &diagnostic) {__anon1::diagnosticSeverity36,626
void dumpDiagnostic(const CXDiagnostic &diagnostic) {dumpDiagnostic53,1013
void dumpDiagnostic(const CXDiagnostic &diagnostic) {__anon1::dumpDiagnostic53,1013
bool readFileContent(const std::string &filename,readFileContent84,2132
bool readFileContent(const std::string &filename,__anon1::readFileContent84,2132
Irony::Irony()Irony120,3084
Irony::Irony()Irony::Irony120,3084
void Irony::parse(const std::string &file,parse124,3177
void Irony::parse(const std::string &file,Irony::parse124,3177
void Irony::diagnostics() const {diagnostics141,3621
void Irony::diagnostics() const {Irony::diagnostics141,3621
void Irony::resetCache() {resetCache163,4057
void Irony::resetCache() {Irony::resetCache163,4057
void Irony::getType(unsigned line, unsigned col) const {getType172,4264
void Irony::getType(unsigned line, unsigned col) const {Irony::getType172,4264
class CompletionChunk {CompletionChunk212,5227
class CompletionChunk {__anon2::CompletionChunk212,5227
  explicit CompletionChunk(CXCompletionString completionString)CompletionChunk214,5259
  explicit CompletionChunk(CXCompletionString completionString)__anon2::CompletionChunk::CompletionChunk214,5259
  bool hasNext() const {hasNext220,5457
  bool hasNext() const {__anon2::CompletionChunk::hasNext220,5457
  void next() {next224,5522
  void next() {__anon2::CompletionChunk::next224,5522
  CXCompletionChunkKind kind() const {kind233,5656
  CXCompletionChunkKind kind() const {__anon2::CompletionChunk::kind233,5656
  std::string text() const {text238,5840
  std::string text() const {__anon2::CompletionChunk::text238,5840
  CXCompletionString completionString_;completionString_244,5978
  CXCompletionString completionString_;__anon2::CompletionChunk::completionString_244,5978
  unsigned int numChunks_;numChunks_245,6018
  unsigned int numChunks_;__anon2::CompletionChunk::numChunks_245,6018
  unsigned chunkIdx_;chunkIdx_246,6045
  unsigned chunkIdx_;__anon2::CompletionChunk::chunkIdx_246,6045
void Irony::complete(const std::string &file,complete251,6095
void Irony::complete(const std::string &file,Irony::complete251,6095
bool hasUppercase(const std::string &prefix)hasUppercase292,7495
bool hasUppercase(const std::string &prefix)__anon3::hasUppercase292,7495
bool isEqual(const bool insensitive, const char a, const char b)isEqual302,7643
bool isEqual(const bool insensitive, const char a, const char b)__anon3::isEqual302,7643
bool startsWith(const std::string& str, const std::string &prefix, bool caseInsensitive)startsWith311,7815
bool startsWith(const std::string& str, const std::string &prefix, bool caseInsensitive)__anon3::startsWith311,7815
bool isStyleCaseInsensitive(const std::string &prefix, PrefixMatchStyle style)isStyleCaseInsensitive325,8194
bool isStyleCaseInsensitive(const std::string &prefix, PrefixMatchStyle style)__anon3::isStyleCaseInsensitive325,8194
void Irony::completionDiagnostics() const {completionDiagnostics339,8593
void Irony::completionDiagnostics() const {Irony::completionDiagnostics339,8593
void Irony::candidates(const std::string &prefix, PrefixMatchStyle style) const {candidates362,9123
void Irony::candidates(const std::string &prefix, PrefixMatchStyle style) const {Irony::candidates362,9123
void Irony::computeCxUnsaved() {computeCxUnsaved529,14623
void Irony::computeCxUnsaved() {Irony::computeCxUnsaved529,14623
void Irony::setUnsaved(const std::string &file,setUnsaved542,14952
void Irony::setUnsaved(const std::string &file,Irony::setUnsaved542,14952
void Irony::resetUnsaved(const std::string &file) {resetUnsaved562,15549
void Irony::resetUnsaved(const std::string &file) {Irony::resetUnsaved562,15549
void Irony::getCompileOptions(const std::string &buildDir,getCompileOptions579,15952
void Irony::getCompileOptions(const std::string &buildDir,Irony::getCompileOptions579,15952

elpa/irony-20180519.422/server/src/support/NonCopyable.h,400
#define IRONY_MODE_SERVER_SUPPORT_NONCOPYABLE_H_IRONY_MODE_SERVER_SUPPORT_NONCOPYABLE_H_14,354
namespace util {util16,404
class NonCopyable {NonCopyable18,422
class NonCopyable {util::NonCopyable18,422
  NonCopyable() {NonCopyable20,453
  NonCopyable() {util::NonCopyable::NonCopyable20,453
  ~NonCopyable() {~NonCopyable24,514
  ~NonCopyable() {util::NonCopyable::~NonCopyable24,514

elpa/irony-20180519.422/server/src/support/TemporaryFile.cpp,515
static std::string getTemporaryFileDirectory() {getTemporaryFileDirectory18,315
TemporaryFile::TemporaryFile(const std::string &prefix,TemporaryFile29,582
TemporaryFile::TemporaryFile(const std::string &prefix,TemporaryFile::TemporaryFile29,582
TemporaryFile::~TemporaryFile() {~TemporaryFile34,747
TemporaryFile::~TemporaryFile() {TemporaryFile::~TemporaryFile34,747
const std::string &TemporaryFile::getPath() {getPath41,875
const std::string &TemporaryFile::getPath() {TemporaryFile::getPath41,875

elpa/irony-20180519.422/server/src/support/TemporaryFile.h,503
#define IRONY_MODE_SERVER_SUPPORT_TEMPORARY_FILE_H_IRONY_MODE_SERVER_SUPPORT_TEMPORARY_FILE_H_12,283
class TemporaryFile {TemporaryFile18,391
    MAX_ATTEMPS = 25MAX_ATTEMPS21,470
    MAX_ATTEMPS = 25TemporaryFile::MAX_ATTEMPS21,470
  std::string pathOrPattern_;pathOrPattern_32,694
  std::string pathOrPattern_;TemporaryFile::pathOrPattern_32,694
  std::unique_ptr<std::fstream> openedFile_;openedFile_33,724
  std::unique_ptr<std::fstream> openedFile_;TemporaryFile::openedFile_33,724

elpa/irony-20180519.422/server/src/support/CIndex.h,443
#define IRONY_MODE_SERVER_SUPPORT_CINDEXVERSION_H_IRONY_MODE_SERVER_SUPPORT_CINDEXVERSION_H_10,233
#define CINDEX_VERSION CINDEX_VERSION17,461
#define HAS_BRIEF_COMMENTS_IN_COMPLETION HAS_BRIEF_COMMENTS_IN_COMPLETION21,543
#define HAS_BRIEF_COMMENTS_IN_COMPLETION HAS_BRIEF_COMMENTS_IN_COMPLETION23,592
#define HAS_COMPILATION_DATABASE HAS_COMPILATION_DATABASE27,667
#define HAS_COMPILATION_DATABASE HAS_COMPILATION_DATABASE30,751

elpa/irony-20180519.422/server/src/support/CommandLineParser.cpp,2243
class CommandLineArgumentParser {CommandLineArgumentParser17,388
class CommandLineArgumentParser {__anon5::CommandLineArgumentParser17,388
  CommandLineArgumentParser(const std::string &commandLine)CommandLineArgumentParser19,430
  CommandLineArgumentParser(const std::string &commandLine)__anon5::CommandLineArgumentParser::CommandLineArgumentParser19,430
  std::vector<std::string> parse() {parse23,554
  std::vector<std::string> parse() {__anon5::CommandLineArgumentParser::parse23,554
  bool parseStringInto(std::string &string) {parseStringInto36,904
  bool parseStringInto(std::string &string) {__anon5::CommandLineArgumentParser::parseStringInto36,904
  bool parseDoubleQuotedStringInto(std::string &string) {parseDoubleQuotedStringInto52,1321
  bool parseDoubleQuotedStringInto(std::string &string) {__anon5::CommandLineArgumentParser::parseDoubleQuotedStringInto52,1321
  bool parseSingleQuotedStringInto(std::string &string) {parseSingleQuotedStringInto65,1611
  bool parseSingleQuotedStringInto(std::string &string) {__anon5::CommandLineArgumentParser::parseSingleQuotedStringInto65,1611
  bool parseFreeStringInto(std::string &string) {parseFreeStringInto76,1846
  bool parseFreeStringInto(std::string &string) {__anon5::CommandLineArgumentParser::parseFreeStringInto76,1846
  bool skipEscapeCharacter() {skipEscapeCharacter87,2136
  bool skipEscapeCharacter() {__anon5::CommandLineArgumentParser::skipEscapeCharacter87,2136
  bool nextNonWhitespace() {nextNonWhitespace94,2246
  bool nextNonWhitespace() {__anon5::CommandLineArgumentParser::nextNonWhitespace94,2246
  bool next() {next102,2380
  bool next() {__anon5::CommandLineArgumentParser::next102,2380
  const std::string input_;input_108,2465
  const std::string input_;__anon5::CommandLineArgumentParser::input_108,2465
  std::string::const_iterator position_;position_109,2493
  std::string::const_iterator position_;__anon5::CommandLineArgumentParser::position_109,2493
  std::vector<std::string> commandLine_;commandLine_110,2534
  std::vector<std::string> commandLine_;__anon5::CommandLineArgumentParser::commandLine_110,2534
unescapeCommandLine(const std::string &escapedCommandLine) {unescapeCommandLine116,2628

elpa/irony-20180519.422/server/src/support/iomanip_quoted.h,962
#define IRONY_MODE_SERVER_SUPPORT_IOMANIP_QUOTED_H_IRONY_MODE_SERVER_SUPPORT_IOMANIP_QUOTED_H_11,262
namespace support {support16,353
namespace detail {detail17,373
namespace detail {support::detail17,373
struct QuotedStringProxy {QuotedStringProxy19,393
struct QuotedStringProxy {support::detail::QuotedStringProxy19,393
  QuotedStringProxy(const std::string &s) : s(s) {QuotedStringProxy20,420
  QuotedStringProxy(const std::string &s) : s(s) {support::detail::QuotedStringProxy::QuotedStringProxy20,420
  std::string s;s23,476
  std::string s;support::detail::QuotedStringProxy::s23,476
std::ostream &operator<<(std::ostream &os, const QuotedStringProxy &q) {operator <<26,497
std::ostream &operator<<(std::ostream &os, const QuotedStringProxy &q) {support::detail::operator <<26,497
detail::QuotedStringProxy quoted(const std::string &s) {quoted46,850
detail::QuotedStringProxy quoted(const std::string &s) {support::quoted46,850

elpa/irony-20180519.422/server/src/support/CommandLineParser.h,113
#define IRONY_MODE_SERVER_SUPPORT_COMMAND_LINE_PARSER_H_IRONY_MODE_SERVER_SUPPORT_COMMAND_LINE_PARSER_H_13,343

elpa/irony-20180519.422/server/src/TUManager.h,1113
#define IRONY_MODE_SERVER_TUMANAGER_H_IRONY_MODE_SERVER_TUMANAGER_H_15,346
class TUManager : public util::NonCopyable {TUManager24,500
  typedef std::map<const std::string, CXTranslationUnit> TranslationUnitsMap;TranslationUnitsMap99,2847
  typedef std::map<const std::string, CXTranslationUnit> TranslationUnitsMap;TUManager::TranslationUnitsMap99,2847
  typedef std::map<const std::string, std::vector<std::string>> FilenameFlagsMap;FilenameFlagsMap100,2925
  typedef std::map<const std::string, std::vector<std::string>> FilenameFlagsMap;TUManager::FilenameFlagsMap100,2925
  CXIndex index_;index_103,3017
  CXIndex index_;TUManager::index_103,3017
  TranslationUnitsMap translationUnits_; // cache variabletranslationUnits_104,3035
  TranslationUnitsMap translationUnits_; // cache variableTUManager::translationUnits_104,3035
  FilenameFlagsMap flagsPerFileCache_;flagsPerFileCache_105,3094
  FilenameFlagsMap flagsPerFileCache_;TUManager::flagsPerFileCache_105,3094
  unsigned parseTUOptions_;parseTUOptions_106,3133
  unsigned parseTUOptions_;TUManager::parseTUOptions_106,3133

elpa/irony-20180519.422/server/src/main.cpp,1826
static void printHelp() {printHelp24,433
#define X(X36,707
static void printVersion() {printVersion42,969
struct CommandProviderInterface {CommandProviderInterface52,1323
  virtual ~CommandProviderInterface() { }~CommandProviderInterface53,1357
  virtual ~CommandProviderInterface() { }CommandProviderInterface::~CommandProviderInterface53,1357
struct CommandLineCommandProvider : CommandProviderInterface {CommandLineCommandProvider58,1458
  CommandLineCommandProvider(const std::vector<std::string> &argv)CommandLineCommandProvider59,1521
  CommandLineCommandProvider(const std::vector<std::string> &argv)CommandLineCommandProvider::CommandLineCommandProvider59,1521
  std::vector<std::string> nextCommand() {nextCommand63,1631
  std::vector<std::string> nextCommand() {CommandLineCommandProvider::nextCommand63,1631
  std::vector<std::string> argv_;argv_73,1811
  std::vector<std::string> argv_;CommandLineCommandProvider::argv_73,1811
  bool firstCall_;firstCall_74,1845
  bool firstCall_;CommandLineCommandProvider::firstCall_74,1845
struct InteractiveCommandProvider : CommandProviderInterface {InteractiveCommandProvider77,1868
  std::vector<std::string> nextCommand() {nextCommand78,1931
  std::vector<std::string> nextCommand() {InteractiveCommandProvider::nextCommand78,1931
struct RestoreClogOnExit {RestoreClogOnExit89,2140
  RestoreClogOnExit() : rdbuf_(std::clog.rdbuf()) {RestoreClogOnExit90,2167
  RestoreClogOnExit() : rdbuf_(std::clog.rdbuf()) {RestoreClogOnExit::RestoreClogOnExit90,2167
  ~RestoreClogOnExit() {~RestoreClogOnExit93,2224
  ~RestoreClogOnExit() {RestoreClogOnExit::~RestoreClogOnExit93,2224
  std::streambuf *rdbuf_;rdbuf_102,2409
  std::streambuf *rdbuf_;RestoreClogOnExit::rdbuf_102,2409
int main(int ac, const char *av[]) {main105,2439

elpa/irony-20180519.422/server/src/Irony.h,1294
#define IRONY_MODE_SERVER_IRONY_H_IRONY_MODE_SERVER_IRONY_H_17,523
class Irony {Irony26,640
  typedef std::string UnsavedBuffer;UnsavedBuffer30,809
  typedef std::string UnsavedBuffer;Irony::UnsavedBuffer30,809
  bool isDebugEnabled() const {isDebugEnabled35,867
  bool isDebugEnabled() const {Irony::isDebugEnabled35,867
  void setDebug(bool enable) {setDebug43,1002
  void setDebug(bool enable) {Irony::setDebug43,1002
  TUManager tuManager_;tuManager_136,3405
  TUManager tuManager_;Irony::tuManager_136,3405
  std::map<std::string, UnsavedBuffer> filenameToContent_;filenameToContent_137,3429
  std::map<std::string, UnsavedBuffer> filenameToContent_;Irony::filenameToContent_137,3429
  CXTranslationUnit activeTu_;activeTu_138,3488
  CXTranslationUnit activeTu_;Irony::activeTu_138,3488
  std::string file_;file_139,3519
  std::string file_;Irony::file_139,3519
  std::vector<CXUnsavedFile> cxUnsavedFiles_;cxUnsavedFiles_140,3540
  std::vector<CXUnsavedFile> cxUnsavedFiles_;Irony::cxUnsavedFiles_140,3540
  CXCodeCompleteResults *activeCompletionResults_;activeCompletionResults_141,3586
  CXCodeCompleteResults *activeCompletionResults_;Irony::activeCompletionResults_141,3586
  bool debug_;debug_142,3637
  bool debug_;Irony::debug_142,3637

elpa/irony-20180519.422/server/src/TUManager.cpp,1017
TUManager::TUManager()TUManager16,249
TUManager::TUManager()TUManager::TUManager16,249
TUManager::~TUManager() {~TUManager58,1951
TUManager::~TUManager() {TUManager::~TUManager58,1951
CXTranslationUnit &TUManager::tuRef(const std::string &filename,tuRef62,2010
CXTranslationUnit &TUManager::tuRef(const std::string &filename,TUManager::tuRef62,2010
TUManager::parse(const std::string &filename,parse81,2642
TUManager::parse(const std::string &filename,TUManager::parse81,2642
TUManager::getOrCreateTU(const std::string &filename,getOrCreateTU151,5036
TUManager::getOrCreateTU(const std::string &filename,TUManager::getOrCreateTU151,5036
void TUManager::invalidateCachedTU(const std::string &filename) {invalidateCachedTU160,5335
void TUManager::invalidateCachedTU(const std::string &filename) {TUManager::invalidateCachedTU160,5335
void TUManager::invalidateAllCachedTUs() {invalidateAllCachedTUs171,5637
void TUManager::invalidateAllCachedTUs() {TUManager::invalidateAllCachedTUs171,5637

elpa/irony-20180519.422/server/src/Command.h,1344
#define IRONY_MODE_SERVER_COMMAND_H_IRONY_MODE_SERVER_COMMAND_H_12,259
struct Command {Command25,482
  Command() {Command26,499
  Command() {Command::Command26,499
  void clear() {clear30,531
  void clear() {Command::clear30,531
#define X(X43,758
  enum Action {Action44,789
  enum Action {Command::Action44,789
  } action;action46,829
  } action;Command::action46,829
  std::vector<std::string> flags;flags48,842
  std::vector<std::string> flags;Command::flags48,842
  std::string file;file49,876
  std::string file;Command::file49,876
  std::string unsavedFile;unsavedFile50,896
  std::string unsavedFile;Command::unsavedFile50,896
  std::string dir;dir51,923
  std::string dir;Command::dir51,923
  std::string prefix;prefix52,942
  std::string prefix;Command::prefix52,942
  PrefixMatchStyle style;style53,964
  PrefixMatchStyle style;Command::style53,964
  unsigned line;line54,990
  unsigned line;Command::line54,990
  unsigned column;column55,1007
  unsigned column;Command::column55,1007
  bool opt;opt56,1026
  bool opt;Command::opt56,1026
class CommandParser {CommandParser62,1186
  Command command_;command_69,1302
  Command command_;CommandParser::command_69,1302
  TemporaryFile tempFile_;tempFile_70,1322
  TemporaryFile tempFile_;CommandParser::tempFile_70,1322

elpa/irony-20180519.422/server/src/Command.cpp,3392
struct StringConverter {StringConverter24,386
struct StringConverter {__anon6::StringConverter24,386
  StringConverter(std::string *dest) : dest_(dest) {StringConverter25,411
  StringConverter(std::string *dest) : dest_(dest) {__anon6::StringConverter::StringConverter25,411
  bool operator()(const std::string &str) {operator ()28,469
  bool operator()(const std::string &str) {__anon6::StringConverter::operator ()28,469
  std::string *dest_;dest_34,562
  std::string *dest_;__anon6::StringConverter::dest_34,562
struct UnsignedIntConverter {UnsignedIntConverter37,588
struct UnsignedIntConverter {__anon6::UnsignedIntConverter37,588
  UnsignedIntConverter(unsigned *dest) : dest_(dest) {UnsignedIntConverter38,618
  UnsignedIntConverter(unsigned *dest) : dest_(dest) {__anon6::UnsignedIntConverter::UnsignedIntConverter38,618
  bool operator()(const std::string &str) {operator ()41,678
  bool operator()(const std::string &str) {__anon6::UnsignedIntConverter::operator ()41,678
  unsigned *dest_;dest_63,1119
  unsigned *dest_;__anon6::UnsignedIntConverter::dest_63,1119
struct OptionConverter {OptionConverter67,1182
struct OptionConverter {__anon6::OptionConverter67,1182
  OptionConverter(bool *dest) : dest_(dest) {OptionConverter68,1207
  OptionConverter(bool *dest) : dest_(dest) {__anon6::OptionConverter::OptionConverter68,1207
  bool operator()(const std::string &str) {operator ()71,1258
  bool operator()(const std::string &str) {__anon6::OptionConverter::operator ()71,1258
  bool *dest_;dest_83,1469
  bool *dest_;__anon6::OptionConverter::dest_83,1469
const std::map<std::string, PrefixMatchStyle> PREFIX_MATCH_STYLE_MAP = {PREFIX_MATCH_STYLE_MAP86,1488
const std::map<std::string, PrefixMatchStyle> PREFIX_MATCH_STYLE_MAP = {__anon6::PREFIX_MATCH_STYLE_MAP86,1488
struct PrefixMatchStyleConverter {PrefixMatchStyleConverter93,1754
struct PrefixMatchStyleConverter {__anon6::PrefixMatchStyleConverter93,1754
  PrefixMatchStyleConverter(PrefixMatchStyle *dest) : dest_(dest) {PrefixMatchStyleConverter94,1789
  PrefixMatchStyleConverter(PrefixMatchStyle *dest) : dest_(dest) {__anon6::PrefixMatchStyleConverter::PrefixMatchStyleConverter94,1789
  bool operator()(const std::string &str) {operator ()97,1862
  bool operator()(const std::string &str) {__anon6::PrefixMatchStyleConverter::operator ()97,1862
  PrefixMatchStyle *dest_;dest_108,2087
  PrefixMatchStyle *dest_;__anon6::PrefixMatchStyleConverter::dest_108,2087
std::ostream &operator<<(std::ostream &os, PrefixMatchStyle style) {operator <<111,2118
std::ostream &operator<<(std::ostream &os, PrefixMatchStyle style) {__anon6::operator <<111,2118
std::ostream &operator<<(std::ostream &os, const Command::Action &action) {operator <<125,2374
#define X(X129,2492
std::ostream &operator<<(std::ostream &os, const Command &command) {operator <<138,2790
static Command::Action actionFromString(const std::string &actionStr) {actionFromString161,3490
#define X(X162,3562
CommandParser::CommandParser() : tempFile_("irony-server") {CommandParser171,3805
CommandParser::CommandParser() : tempFile_("irony-server") {CommandParser::CommandParser171,3805
Command *CommandParser::parse(const std::vector<std::string> &argv) {parse174,3869
Command *CommandParser::parse(const std::vector<std::string> &argv) {CommandParser::parse174,3869

elpa/irony-20180519.422/server/test/elisp/irony.el,0

elpa/irony-20180519.422/server/test/elisp/irony-iotask.el,352
(defun irony-iotask-echo-process-exit-filter (process output)irony-iotask-echo-process-exit-filter15,498
(defmacro irony-iotask/with-echo-process (&rest body)irony-iotask/with-echo-process33,1296
(defvar irony-iotask/task-finish-var nil)irony-iotask/task-finish-var181,7336
(defvar irony-iotask/task-on-var nil)irony-iotask/task-on-var182,7378

elpa/irony-20180519.422/server/test/elisp/test-config.el,50
(defvar test-dir (if load-file-nametest-dir2,30

elpa/irony-20180519.422/server/test/elisp/irony-cdb-json.el,68
(defconst irony-cdb/compile-commandirony-cdb/compile-command9,175

elpa/irony-20180519.422/server/cmake/LibClangDiagnosticsChecker.cpp,53
int main(int argc, const char *argv[]) {main13,287

elpa/irony-20180519.422/server/build-aux/run-clang-tidy/run-clang-tidy.py,327
def find_compilation_database(path):find_compilation_database50,1341
def get_tidy_invocation(f, clang_tidy_binary, checks, tmpdir, build_path,get_tidy_invocation61,1691
def apply_fixes(args, tmpdir):apply_fixes93,2845
def run_tidy(args, tmpdir, build_path, queue, results, i):run_tidy104,3165
def main():main119,3787

elpa/irony-20180519.422/irony-iotask.el,2785
(defun irony-iotask--define-error (name message &optional parent)irony-iotask--define-error49,1665
(defun irony-iotask-result-valid-p (result)irony-iotask-result-valid-p85,3061
(defun irony-iotask-result-value-p (result)irony-iotask-result-value-p88,3151
(defun irony-iotask-result-error-p (result)irony-iotask-result-error-p91,3245
(defun irony-iotask-result-set-value (result value)irony-iotask-result-set-value94,3339
(defun irony-iotask-result-set-error (result error &rest error-data)irony-iotask-result-set-error98,3494
(defun irony-iotask-result-get (result)irony-iotask-result-get106,3826
(defmacro irony-iotask-define-task (var docstring &rest properties)irony-iotask-define-task115,4227
(defun irony-iotask-package-task (task &rest args)irony-iotask-package-task188,6571
(defvar irony-iotask--current-packaged-task) ;dynamically boundirony-iotask--current-packaged-task193,6798
(defun irony-iotask-package-task-invoke (packaged-task prop-fnirony-iotask-package-task-invoke194,6862
(defun irony-iotask--chain-1 (packaged-task-1 packaged-task-2)irony-iotask--chain-1214,7824
(defun irony-iotask-chain (packaged-task-1 packaged-task-2 &rest others)irony-iotask-chain221,8143
(defun irony-iotask-ectx-call-callback (ectx result)irony-iotask-ectx-call-callback235,8534
(defvar irony-iotask--process)irony-iotask--process242,8872
(defun irony-iotask--start-next (process)irony-iotask--start-next244,8904
(defun irony-iotask--start-next-safe (process)irony-iotask--start-next-safe257,9487
(defun irony-iotask--check-result (process)irony-iotask--check-result263,9728
(defun irony-iotask--abort-all (process &rest reasons)irony-iotask--abort-all289,11054
(defun irony-iotask-process-filter (process output)irony-iotask-process-filter301,11419
(defun irony-iotask-process-sentinel (process event)irony-iotask-process-sentinel328,12711
(defun irony-iotask-check-process (process)irony-iotask-check-process335,13048
(defun irony-iotask-setup-process (process)irony-iotask-setup-process356,13852
(defun irony-iotask-schedule (process packaged-task callback)irony-iotask-schedule365,14235
(defun irony-iotask-run (process packaged-task)irony-iotask-run378,14905
(defun irony-iotask-get (propname)irony-iotask-get410,16088
(defun irony-iotask-put (propname value)irony-iotask-put415,16246
(defun irony-iotask--result ()irony-iotask--result422,16533
(defun irony-iotask-set-result (value)irony-iotask-set-result425,16640
(defun irony-iotask-set-error (err &rest error-data)irony-iotask-set-error428,16744
(defun irony-iotask-send-string (string)irony-iotask-send-string431,16879
(defun irony-iotask-send-region (start end)irony-iotask-send-region434,16975
(defun irony-iotask-send-eof (string)irony-iotask-send-eof437,17077

elpa/irony-20180519.422/irony-cdb-libclang.el,412
(defun irony-cdb-libclang (command &rest args)irony-cdb-libclang34,1091
(defun irony-cdb-libclang--get-compile-options ()irony-cdb-libclang--get-compile-options38,1228
(defun irony-cdb-libclang--server-exact-flags (db-file)irony-cdb-libclang--server-exact-flags42,1373
(defun irony-cdb-libclang--adjust-options-and-remove-compiler (file cmds)irony-cdb-libclang--adjust-options-and-remove-compiler54,1849

elpa/irony-20180519.422/irony-cdb-json.el,2558
(defvar irony-cdb-json--project-alist nilirony-cdb-json--project-alist36,1064
(defconst irony-cdb-json--project-alist-fileirony-cdb-json--project-alist-file42,1258
(defun irony-cdb-json (command &rest args)irony-cdb-json46,1366
(defun irony-cdb-json-add-compile-commands-path (project-rootirony-cdb-json-add-compile-commands-path51,1510
(defun irony-cdb-json--put-first (pos target-list)irony-cdb-json--put-first74,2470
(defun irony-cdb-json--choose-cdb ()irony-cdb-json--choose-cdb80,2669
(defun irony-cdb-json-select ()irony-cdb-json-select91,3198
(defun irony-cdb-json--last-mod (file)irony-cdb-json--last-mod110,3987
(defun irony-cdb-json-select-most-recent ()irony-cdb-json-select-most-recent116,4161
(defun irony-cdb-json--get-compile-options ()irony-cdb-json--get-compile-options127,4591
(defsubst irony-cdb-json--target-path ()irony-cdb-json--target-path135,4912
(defun irony-cdb-json--ensure-project-alist-loaded ()irony-cdb-json--ensure-project-alist-loaded138,5016
(defun irony-cdb-json--save-project-alist ()irony-cdb-json--save-project-alist142,5154
(defun irony-cdb-json--load-project-alist ()irony-cdb-json--load-project-alist153,5477
(defun irony-cdb-json--find-best-prefix-path (file prefixes)irony-cdb-json--find-best-prefix-path160,5760
(defun irony-cdb-json--locate-db ()irony-cdb-json--locate-db169,6097
(defun irony-cdb-json--load-db (json-file)irony-cdb-json--load-db184,6738
(defun irony-cdb-json--exact-flags (file-cdb)irony-cdb-json--exact-flags189,6939
(defun irony-cdb-json--guess-flags (dir-cdb)irony-cdb-json--guess-flags195,7141
(defsubst irony-cdb-json--compile-command-directory (compile-command)irony-cdb-json--compile-command-directory206,7577
(defsubst irony-cdb-json--compile-command-file (compile-command)irony-cdb-json--compile-command-file209,7691
(defun irony-cdb-json--compile-command-options (compile-command)irony-cdb-json--compile-command-options212,7795
(defun irony-cdb-json--adjust-compile-options (compile-options file default-dir)irony-cdb-json--adjust-compile-options220,8189
(defun irony-cdb-json--transform-compile-command (compile-command)irony-cdb-json--transform-compile-command256,9458
(defun irony-cdb-json--compute-directory-cdb (file-cdb)irony-cdb-json--compute-directory-cdb277,10365
(defun irony-cdb-json--collect-compile-options-by-dir (file-cdb)irony-cdb-json--collect-compile-options-by-dir285,10798
(defun irony-cdb-json--collect-compile-options-for-include-dirs (dir-cdb)irony-cdb-json--collect-compile-options-for-include-dirs302,11620

elpa/ctags-update-20170728.58/ctags-update.el,1944
(defgroup ctags-update nilctags-update61,2253
(defcustom ctags-update-command "ctags"ctags-update-command66,2388
(defcustom ctags-update-delay-seconds  (* 5 60) ; 5 minsctags-update-delay-seconds74,2666
(defcustom ctags-update-other-optionsctags-update-other-options80,2879
(defcustom ctags-update-lighter " ctagsU"ctags-update-lighter97,3249
(defcustom ctags-update-prompt-create-tags tctags-update-prompt-create-tags103,3409
(defvar ctags-update-last-update-timectags-update-last-update-time108,3546
(defvar ctags-auto-update-mode-mapctags-auto-update-mode-map112,3722
(defvar  ctags-auto-update-mode-hook nil)ctags-auto-update-mode-hook116,3804
(defvar ctags-update-use-xemacs-etags-pctags-update-use-xemacs-etags-p118,3847
(defun ctags-update-file-truename (filename &optional counter prev-dirs)ctags-update-file-truename122,3945
(defsubst ctags-update-native-w32-p()ctags-update-native-w32-p133,4339
(defun ctags-update-command-args (tagfile-full-path &optional save-tagfile-to-as)ctags-update-command-args137,4484
(defun ctags-update-get-command(command command-args)ctags-update-get-command152,5267
(defun ctags-update-get-system-path(file-path)ctags-update-get-system-path156,5421
(defun ctags-update-find-tags-file ()ctags-update-find-tags-file164,5725
(defsubst ctags-update-check-interval()ctags-update-check-interval171,6095
(defsubst ctags-update-triggered-by-tags(tags)ctags-update-triggered-by-tags176,6245
(defun ctags-update-process-sentinel(proc _change)ctags-update-process-sentinel187,6716
(defun ctags-update-how-to-update(is-interactive)ctags-update-how-to-update198,7099
(defun ctags-update(&optional args)ctags-update222,8050
(define-minor-mode ctags-auto-update-modectags-auto-update-mode260,10138
(defun turn-on-ctags-auto-update-mode()turn-on-ctags-auto-update-mode272,10523
(define-global-minor-mode ctags-global-auto-update-modectags-global-auto-update-mode278,10663

elpa/ctags-update-20170728.58/ctags-update-autoloads.el,82
(defvar ctags-global-auto-update-mode nil "\ctags-global-auto-update-mode31,935

elpa/ctags-update-20170728.58/ctags-update-pkg.el,270
(define-package "ctags-update" "20170728.58" "(auto) update TAGS in parent directory using exuberant-ctags" 'nil :commit "783bf91eba1cd27cbb739067a24e15e5e04564e6" :keywords '("exuberant-ctags" "etags") :url "https://github.com/jixiuf/ctags-update")"ctags-update"2,31

elpa/seq-2.20/seq-autoloads.el,0

elpa/seq-2.20/seq-25.el,836
(defmacro seq--when-emacs-25-p (&rest body)seq--when-emacs-25-p55,1881
(defmacro seq-doseq (spec &rest body)seq-doseq66,2156
(defmacro seq-let (args sequence &rest body)seq-let89,2913
(defalias 'seq-each #'seq-do)seq-each122,4025
(defun seq-map-indexed (function sequence)seq-map-indexed151,4943
(defun seq-sort-by (function pred sequence)seq-sort-by222,7690
(defun seq--count-successive (pred sequence)seq--count-successive437,15759
(defun seq--into-list (sequence)seq--into-list471,16745
(defun seq--into-vector (sequence)seq--into-vector477,16899
(defun seq--into-string (sequence)seq--into-string483,17056
(defun seq--make-pcase-bindings (args)seq--make-pcase-bindings489,17212
(defun seq--make-pcase-patterns (args)seq--make-pcase-patterns507,17833
(defun seq--elt-safe (sequence n)seq--elt-safe517,18156

elpa/seq-2.20/seq-24.el,3207
(defmacro seq-doseq (spec &rest body)seq-doseq41,1400
(defmacro seq-let (args sequence &rest body)seq-let65,2327
(defun seq-drop (sequence n)seq-drop76,2730
(defun seq-take (sequence n)seq-take88,3132
(defun seq-drop-while (predicate sequence)seq-drop-while98,3474
(defun seq-take-while (predicate sequence)seq-take-while105,3808
(defun seq-filter (predicate sequence)seq-filter112,4136
(defun seq-map-indexed (function sequence)seq-map-indexed121,4527
(defun seq-remove (predicate sequence)seq-remove132,4939
(defun seq-reduce (function sequence initial-value)seq-reduce137,5151
(defun seq-some (predicate sequence)seq-some153,5757
(defun seq-find (predicate sequence &optional default)seq-find162,6051
(defun seq-every-p (predicate sequence)seq-every-p175,6504
(defun seq-count (predicate sequence)seq-count183,6770
(defun seq-empty-p (sequence)seq-empty-p191,7029
(defun seq-sort (predicate sequence)seq-sort197,7208
(defun seq-sort-by (function pred sequence)seq-sort-by205,7557
(defun seq-contains (sequence elt &optional testfn)seq-contains215,7940
(defun seq-set-equal-p (sequence1 sequence2 &optional testfn)seq-set-equal-p222,8219
(defun seq-position (sequence elt &optional testfn)seq-position228,8613
(defun seq-uniq (sequence &optional testfn)seq-uniq239,9010
(defun seq-subseq (sequence start &optional end)seq-subseq248,9356
(defun seq-concatenate (type &rest seqs)seq-concatenate270,10481
(defun seq-mapcat (function sequence &optional type)seq-mapcat281,10869
(defun seq-mapn (function sequence &rest seqs)seq-mapn287,11147
(defun seq-partition (sequence n)seq-partition303,11710
(defun seq-intersection (seq1 seq2 &optional testfn)seq-intersection314,12136
(defun seq-difference (seq1 seq2 &optional testfn)seq-difference324,12517
(defun seq-group-by (function sequence)seq-group-by334,12904
(defalias 'seq-reverseseq-reverse349,13361
(defun seq-into (sequence type)seq-into362,13795
(defun seq-min (sequence)seq-min371,14148
(defun seq-max (sequence)seq-max376,14314
(defun seq-random-elt (sequence)seq-random-elt381,14481
(defun seq--drop-list (list n)seq--drop-list388,14722
(defun seq--take-list (list n)seq--take-list393,14880
(defun seq--drop-while-list (predicate list)seq--drop-while-list402,15149
(defun seq--take-while-list (predicate list)seq--take-while-list409,15424
(defun seq--count-successive (predicate sequence)seq--count-successive417,15741
(defun seq--make-bindings (args sequence &optional bindings)seq--make-bindings428,16145
(defun seq--elt-safe (sequence n)seq--elt-safe451,17055
(defun seq--activate-font-lock-keywords ()seq--activate-font-lock-keywords459,17314
(defalias 'seq-copy #'copy-sequence)seq-copy464,17531
(defalias 'seq-elt #'elt)seq-elt465,17568
(defalias 'seq-length #'length)seq-length466,17594
(defalias 'seq-do #'mapc)seq-do467,17626
(defalias 'seq-each #'seq-do)seq-each468,17652
(defalias 'seq-map #'mapcar)seq-map469,17682
(defalias 'seqp #'sequencep)seqp470,17711
(defun seq--into-list (sequence)seq--into-list472,17741
(defun seq--into-vector (sequence)seq--into-vector478,17895
(defun seq--into-string (sequence)seq--into-string484,18052

elpa/seq-2.20/seq.el,0

elpa/seq-2.20/seq-pkg.el,150
(define-package "seq" "2.20" "Sequence manipulation functions" 'nil :url "http://elpa.gnu.org/packages/seq.html" :keywords '("sequences"))"seq"2,45

elpa/seq-2.20/tests/seq-tests.el,266
(defmacro with-test-sequences (spec &rest body)with-test-sequences32,936
(defun same-contents-p (seq1 seq2)same-contents-p45,1443
(defun test-sequences-evenp (integer)test-sequences-evenp49,1595
(defun test-sequences-oddp (integer)test-sequences-oddp53,1696

elpa/helm-core-20180610.144/helm-source.el,2588
(defvar helm-fuzzy-sort-fn)helm-fuzzy-sort-fn35,1294
(defvar helm-fuzzy-match-fn)helm-fuzzy-match-fn36,1322
(defvar helm-fuzzy-search-fn)helm-fuzzy-search-fn37,1351
(defgeneric helm--setup-source (source)helm--setup-source44,1553
(defgeneric helm-setup-user-source (source)helm-setup-user-source47,1667
(defclass helm-source ()helm-source54,1809
(defclass helm-source-sync (helm-source)helm-source-sync638,22478
(defclass helm-source-async (helm-source)helm-source-async674,23864
(defclass helm-source-in-buffer (helm-source)helm-source-in-buffer695,24571
(defclass helm-source-dummy (helm-source)helm-source-dummy789,28305
(defclass helm-source-in-file (helm-source-in-buffer)helm-source-in-file813,28777
(defun helm-default-init-source-in-buffer-function ()helm-default-init-source-in-buffer-function842,29799
(defun helm--create-source (object)helm--create-source850,30031
(defun helm-make-source (name class &rest args)helm-make-source858,30342
(defun helm-make-type (class &rest args)helm-make-type871,30911
(defvar helm-mm-default-search-functions)helm-mm-default-search-functions877,31114
(defvar helm-mm-default-match-functions)helm-mm-default-match-functions878,31156
(defun helm-source-mm-get-search-or-match-fns (source method)helm-source-mm-get-search-or-match-fns880,31198
(defun helm-source--persistent-help-string (string source)helm-source--persistent-help-string938,34022
(defun helm-source--header-line (source)helm-source--header-line944,34277
(defmethod helm--setup-source :primary ((_source helm-source)))helm--setup-source974,35659
(defmethod helm--setup-source :before ((source helm-source))helm--setup-source976,35724
(defmethod helm-setup-user-source ((_source helm-source)))helm-setup-user-source1005,37289
(defmethod helm--setup-source ((source helm-source-sync))helm--setup-source1007,37349
(defmethod helm--setup-source ((source helm-source-in-buffer))helm--setup-source1024,38143
(defmethod helm--setup-source ((source helm-source-async))helm--setup-source1063,39897
(defmethod helm--setup-source ((source helm-source-dummy))helm--setup-source1071,40327
(defmacro helm-build-sync-source (name &rest args)helm-build-sync-source1087,40950
(defmacro helm-build-async-source (name &rest args)helm-build-async-source1093,41186
(defmacro helm-build-in-buffer-source (name &rest args)helm-build-in-buffer-source1099,41426
(defmacro helm-build-dummy-source (name &rest args)helm-build-dummy-source1105,41701
(defmacro helm-build-in-file-source (name file &rest args)helm-build-in-file-source1111,41949

elpa/helm-core-20180610.144/helm.el,36067
(defun helm-define-multi-key (keymap key functions &optional delay)helm-define-multi-key43,1482
(defmacro helm-multi-key-defun (name docstring funs &optional delay)helm-multi-key-defun68,2347
(defun helm-make-multi-command (functions &optional delay)helm-make-multi-command77,2774
(defun helm-run-multi-key-command (functions iterator delay)helm-run-multi-key-command89,3219
(defun helm-define-key-with-subkeys (map key subkey commandhelm-define-key-with-subkeys116,4383
(defvar helm-maphelm-map176,6600
(defun helm-customize-group ()helm-customize-group269,11919
(defun helm--action-at-nth-set-fn-1 (value &optional negative)helm--action-at-nth-set-fn-1277,12176
(defun helm--action-at-nth-set-fn- (var val)helm--action-at-nth-set-fn-288,12639
(defun helm--action-at-nth-set-fn+ (var val)helm--action-at-nth-set-fn+292,12749
(defcustom helm-action-at-nth-negative-prefix-key "C-x %d"helm-action-at-nth-negative-prefix-key296,12849
(defcustom helm-action-at-nth-positive-prefix-key "C-c %d"helm-action-at-nth-positive-prefix-key308,13210
(defgroup helm nilhelm321,13573
(defcustom helm-completion-window-scroll-margin 5helm-completion-window-scroll-margin325,13647
(defcustom helm-display-source-at-screen-top thelm-display-source-at-screen-top333,13892
(defcustom helm-candidate-number-limit 100helm-candidate-number-limit340,14163
(defcustom helm-input-idle-delay 0.01helm-input-idle-delay352,14633
(defcustom helm-exit-idle-delay 0helm-exit-idle-delay357,14756
(defcustom helm-full-frame nilhelm-full-frame364,14977
(defvaralias 'helm-samewindow 'helm-full-frame)helm-samewindow370,15133
(defcustom helm-candidate-separatorhelm-candidate-separator373,15251
(defcustom helm-save-configuration-functionshelm-save-configuration-functions379,15393
(defcustom helm-display-function 'helm-default-display-bufferhelm-display-function394,16001
(defcustom helm-case-fold-search 'smarthelm-case-fold-search412,16685
(defcustom helm-file-name-case-fold-searchhelm-file-name-case-fold-search430,17321
(defcustom helm-reuse-last-window-split-state nilhelm-reuse-last-window-split-state441,17616
(defcustom helm-split-window-preferred-function 'helm-split-window-default-fnhelm-split-window-preferred-function449,17935
(defcustom helm-split-window-default-side 'belowhelm-split-window-default-side454,18096
(defcustom helm-display-buffer-default-height nilhelm-display-buffer-default-height475,18890
(defcustom helm-display-buffer-default-width nilhelm-display-buffer-default-width485,19281
(defcustom helm-split-window-inside-p nilhelm-split-window-inside-p495,19672
(defvaralias 'helm-split-window-in-side-p 'helm-split-window-inside-p)helm-split-window-in-side-p505,19994
(defcustom helm-always-two-windows nilhelm-always-two-windows508,20156
(defcustom helm-display-buffer-width 72helm-display-buffer-width524,20675
(defcustom helm-display-buffer-height 20helm-display-buffer-height529,20807
(defcustom helm-default-display-buffer-functions nilhelm-default-display-buffer-functions534,20941
(defcustom helm-default-display-buffer-alist nilhelm-default-display-buffer-alist543,21260
(defcustom helm-sources-using-default-as-input '(helm-source-imenuhelm-sources-using-default-as-input554,21736
(defcustom helm-delete-minibuffer-contents-from-point thelm-delete-minibuffer-contents-from-point570,22649
(defcustom helm-follow-mode-persistent nilhelm-follow-mode-persistent577,22919
(defcustom helm-source-names-using-follow nilhelm-source-names-using-follow588,23355
(defcustom helm-prevent-escaping-from-minibuffer thelm-prevent-escaping-from-minibuffer601,23875
(defcustom helm-allow-mouse nilhelm-allow-mouse606,24042
(defcustom helm-move-to-line-cycle-in-source nilhelm-move-to-line-cycle-in-source615,24339
(defcustom helm-fuzzy-match-fn 'helm-fuzzy-matchhelm-fuzzy-match-fn621,24553
(defcustom helm-fuzzy-search-fn 'helm-fuzzy-searchhelm-fuzzy-search-fn626,24710
(defcustom helm-fuzzy-sort-fn 'helm-fuzzy-matching-default-sort-fnhelm-fuzzy-sort-fn631,24874
(defcustom helm-fuzzy-matching-highlight-fn 'helm-fuzzy-default-highlight-matchhelm-fuzzy-matching-highlight-fn637,25065
(defcustom helm-autoresize-max-height 40helm-autoresize-max-height643,25260
(defcustom helm-autoresize-min-height 10helm-autoresize-min-height650,25463
(defcustom helm-input-method-verbose-flag nilhelm-input-method-verbose-flag658,25700
(defcustom helm-display-header-line thelm-display-header-line671,26405
(defcustom helm-inherit-input-method thelm-inherit-input-method676,26515
(defcustom helm-echo-input-in-header-line nilhelm-echo-input-in-header-line683,26741
(defcustom helm-header-line-space-before-prompt 'left-fringehelm-header-line-space-before-prompt688,26873
(defcustom helm-tramp-connection-min-time-diff 5helm-tramp-connection-min-time-diff704,27478
(defcustom helm-debug-root-directory nilhelm-debug-root-directory717,28090
(defcustom helm-show-action-window-other-window nilhelm-show-action-window-other-window727,28443
(defcustom helm-cycle-resume-delay 1.0helm-cycle-resume-delay743,29044
(defcustom helm-display-buffer-reuse-frame nilhelm-display-buffer-reuse-frame748,29174
(defcustom helm-commands-using-frame nilhelm-commands-using-frame757,29496
(defcustom helm-actions-inherit-frame-settings thelm-actions-inherit-frame-settings762,29647
(defcustom helm-use-undecorated-frame-option nilhelm-use-undecorated-frame-option767,29803
(defcustom helm-use-frame-when-more-than-two-windows nilhelm-use-frame-when-more-than-two-windows774,29998
(defcustom helm-default-prompt-display-functionhelm-default-prompt-display-function779,30150
(defgroup helm-faces nilhelm-faces788,30353
(defface helm-source-headerhelm-source-header794,30467
(defface helm-visible-markhelm-visible-mark806,30831
(defface helm-headerhelm-header818,31203
(defface helm-candidate-numberhelm-candidate-number823,31325
(defface helm-candidate-number-suspendedhelm-candidate-number-suspended829,31560
(defface helm-selectionhelm-selection834,31750
(defface helm-separatorhelm-separator842,32022
(defface helm-actionhelm-action848,32204
(defface helm-prefarghelm-prefarg853,32325
(defface helm-matchhelm-match859,32508
(defface helm-header-line-left-marginhelm-header-line-left-margin865,32684
(defvar helm-selection-overlay nilhelm-selection-overlay874,32880
(defvar helm-async-processes nilhelm-async-processes877,32976
(defvar helm-before-initialize-hook nilhelm-before-initialize-hook880,33081
(defvar helm-after-initialize-hook nilhelm-after-initialize-hook887,33369
(defvaralias 'helm-update-hook 'helm-after-update-hook)helm-update-hook892,33570
(defvar helm-after-update-hook nilhelm-after-update-hook895,33702
(defvar helm-cleanup-hook nilhelm-cleanup-hook898,33807
(defvar helm-select-action-hook nilhelm-select-action-hook905,34004
(defvar helm-before-action-hook nilhelm-before-action-hook908,34083
(defvar helm-after-action-hook nilhelm-after-action-hook913,34270
(defvar helm-exit-minibuffer-hook nilhelm-exit-minibuffer-hook916,34340
(defvar helm-after-persistent-action-hook nilhelm-after-persistent-action-hook923,34603
(defvar helm-move-selection-before-hook nilhelm-move-selection-before-hook926,34695
(defvar helm-move-selection-after-hook nilhelm-move-selection-after-hook929,34792
(defvar helm-after-preselection-hook nilhelm-after-preselection-hook932,34887
(defvar helm-window-configuration-hook nilhelm-window-configuration-hook935,34977
(defvar helm-execute-action-at-once-if-one nilhelm-execute-action-at-once-if-one938,35077
(defvar helm-quit-if-no-candidate nilhelm-quit-if-no-candidate945,35402
(defvar helm-debug-variables nilhelm-debug-variables949,35530
(defvar helm-debug-buffer "*Debug Helm Log*")helm-debug-buffer954,35706
(defvar helm-debug nilhelm-debug956,35753
(defvar helm-mode-line-string "\helm-mode-line-string961,35947
(defvar helm-minibuffer-set-up-hook nilhelm-minibuffer-set-up-hook973,36383
(defvar helm-help-messagehelm-help-message986,36824
(defvar helm-autoresize-mode) ;; Undefined in `helm-default-display-buffer'.helm-autoresize-mode1297,51725
(defvar helm-async-outer-limit-hook nilhelm-async-outer-limit-hook1299,51803
(defvar helm-quit-hook nilhelm-quit-hook1303,52012
(defvar helm-resume-after-hook nilhelm-resume-after-hook1306,52081
(defvar helm-source-filter nilhelm-source-filter1313,52237
(defvar helm-current-prefix-arg nilhelm-current-prefix-arg1319,52481
(defvar helm-saved-action nilhelm-saved-action1321,52575
(defvar helm-saved-current-source nilhelm-saved-current-source1323,52663
(defvar helm-in-persistent-action nilhelm-in-persistent-action1325,52765
(defvar helm-last-buffer nilhelm-last-buffer1327,52850
(defvar helm-saved-selection nilhelm-saved-selection1329,52928
(defvar helm-sources nilhelm-sources1331,53036
(defvar helm-buffer-file-name nilhelm-buffer-file-name1333,53118
(defvar helm-candidate-cache (make-hash-table :test 'equal)helm-candidate-cache1335,53209
(defvar helm--candidate-buffer-alist nil)helm--candidate-buffer-alist1337,53337
(defvar helm-input ""helm-input1338,53379
(defvar helm-input-local nilhelm-input-local1340,53447
(defvar helm--source-name nil)helm--source-name1342,53558
(defvar helm-current-source nil)helm-current-source1343,53589
(defvar helm-tick-hash (make-hash-table :test 'equal))helm-tick-hash1344,53622
(defvar helm-issued-errors nil)helm-issued-errors1345,53677
(defvar helm--last-log-file nilhelm--last-log-file1346,53709
(defvar helm--local-variables nil)helm--local-variables1348,53797
(defvar helm-split-window-state nil)helm-split-window-state1349,53832
(defvar helm--window-side-state nil)helm--window-side-state1350,53869
(defvar helm-selection-point nil)helm-selection-point1351,53906
(defvar helm-alive-p nil)helm-alive-p1352,53940
(defvar helm-visible-mark-overlays nil)helm-visible-mark-overlays1353,53966
(defvar helm-update-blacklist-regexps '("^" "^ *" "$" "!" " " "\\b"helm-update-blacklist-regexps1354,54006
(defvar helm--force-updating-p nilhelm--force-updating-p1357,54206
(defvar helm-exit-status 0helm-exit-status1359,54290
(defvar helm-minibuffer-confirm-state nil)helm-minibuffer-confirm-state1366,54617
(defvar helm-quit nil)helm-quit1367,54660
(defvar helm-buffers nilhelm-buffers1368,54683
(defvar helm-current-position nilhelm-current-position1370,54765
(defvar helm-last-frame-or-window-configuration nilhelm-last-frame-or-window-configuration1374,54941
(defvar helm-onewindow-p nil)helm-onewindow-p1376,55057
(defvar helm-types nil)helm-types1377,55087
(defvar helm--mode-line-string-real nil) ; The string to display in mode-line.helm--mode-line-string-real1378,55111
(defvar helm-persistent-action-display-window nil)helm-persistent-action-display-window1379,55190
(defvar helm-marked-candidates nilhelm-marked-candidates1380,55241
(defvar helm--mode-line-display-prefarg nil)helm--mode-line-display-prefarg1382,55333
(defvar helm--temp-follow-flag nilhelm--temp-follow-flag1383,55378
(defvar helm--reading-passwd-or-string nil)helm--reading-passwd-or-string1385,55489
(defvar helm--in-update nil)helm--in-update1386,55533
(defvar helm--in-fuzzy nil)helm--in-fuzzy1387,55562
(defvar helm--maybe-use-default-as-input nilhelm--maybe-use-default-as-input1388,55590
(defvar helm--temp-hooks nilhelm--temp-hooks1394,55859
(defvar helm-truncate-lines nilhelm-truncate-lines1396,55947
(defvar helm--prompt nil)helm--prompt1398,56047
(defvar helm--file-completion-sourceshelm--file-completion-sources1399,56073
(defvar helm--completing-file-name nilhelm--completing-file-name1406,56385
(defvar helm--url-regexp "\\`\\(news\\(post\\)?:\\|mailto:\\|file:\\|\\(ftp\\|https?\\|telnet\\|gopher\\|www\\|wais\\)://\\)")helm--url-regexp1410,56604
(defvar helm--ignore-errors nilhelm--ignore-errors1411,56731
(defvar helm--action-prompt "Select action: ")helm--action-prompt1415,56917
(defvar helm--cycle-resume-iterator nil)helm--cycle-resume-iterator1416,56964
(defvar helm--buffer-in-new-frame-p nil)helm--buffer-in-new-frame-p1417,57005
(defvar helm-initial-frame nilhelm-initial-frame1418,57046
(defvar helm-popup-frame nilhelm-popup-frame1422,57222
(defvar helm--nested nil)helm--nested1428,57441
(defconst helm--frame-default-attributeshelm--frame-default-attributes1429,57467
(defvar helm--last-frame-parameters nilhelm--last-frame-parameters1434,57710
(defvar helm--executing-helm-action nilhelm--executing-helm-action1437,57824
(defvar helm--current-buffer-narrowed nil)helm--current-buffer-narrowed1442,58085
(defun helm-log (format-string &rest args)helm-log1445,58150
(defun helm-log-run-hook (hook)helm-log-run-hook1466,59060
(defun helm-log-get-current-function ()helm-log-get-current-function1473,59365
(defun helm-log-error (&rest args)helm-log-error1484,59862
(defun helm-log-save-maybe ()helm-log-save-maybe1493,60246
(defun helm-debug-open-last-log ()helm-debug-open-last-log1516,61304
(defun helm-print-error-messages ()helm-print-error-messages1526,61631
(defmacro with-helm-time-after-update (&rest body)with-helm-time-after-update1534,61876
(defmacro with-helm-default-directory (directory &rest body)with-helm-default-directory1550,62468
(defun helm-default-directory ()helm-default-directory1557,62752
(defmacro with-helm-temp-hook (hook &rest body)with-helm-temp-hook1561,62922
(defmacro with-helm-after-update-hook (&rest body)with-helm-after-update-hook1574,63387
(defmacro with-helm-alive-p (&rest body)with-helm-alive-p1579,63571
(defmacro with-helm-in-frame (&rest body)with-helm-in-frame1587,63815
(defun helm-attr (attribute-name &optional source compute)helm-attr1597,64111
(defun helm-add-action-to-source (name fn source &optional index)helm-add-action-to-source1641,66042
(defun helm-delete-action-from-source (action-or-name source)helm-delete-action-from-source1660,66937
(defun helm-set-source-filter (sources)helm-set-source-filter1716,69737
(defun helm--normalize-filter-sources (sources)helm--normalize-filter-sources1754,71094
(defun helm-set-sources (sources &optional no-init no-update)helm-set-sources1761,71339
(defun helm-get-selection (&optional buffer force-display-part source)helm-get-selection1771,71795
(defun helm-get-actions-from-current-source (&optional source)helm-get-actions-from-current-source1812,74041
(defun helm-get-current-source ()helm-get-current-source1836,75213
(defun helm-buffer-is-modified (buffer)helm-buffer-is-modified1856,76203
(defun helm-current-buffer-is-modified ()helm-current-buffer-is-modified1868,76737
(defun helm-run-after-exit (function &rest args)helm-run-after-exit1872,76902
(defun helm-exit-and-execute-action (action)helm-exit-and-execute-action1888,77510
(defun helm--get-frame-parameters (&optional frame)helm--get-frame-parameters1922,79271
(defalias 'helm-run-after-quit 'helm-run-after-exit)helm-run-after-quit1927,79470
(defalias 'helm-quit-and-execute-action 'helm-exit-and-execute-action)helm-quit-and-execute-action1929,79589
(defun helm-interpret-value (value &optional source compute)helm-interpret-value1932,79745
(defun helm-set-local-variable (&rest args)helm-set-local-variable1952,80642
(defun helm--set-local-variables-internal ()helm--set-local-variables-internal1975,81506
(defun helm-empty-source-p ()helm-empty-source-p1998,82446
(defun helm-apply-functions-from-source (source functions &rest args)helm-apply-functions-from-source2016,82977
(defalias 'helm-funcall-with-source 'helm-apply-functions-from-source)helm-funcall-with-source2051,84648
(defun helm-compute-attr-in-sources (attr &optional sources)helm-compute-attr-in-sources2054,84804
(defalias 'helm-funcall-foreach 'helm-compute-attr-in-sources)helm-funcall-foreach2067,85465
(defun helm-normalize-sources (sources)helm-normalize-sources2070,85605
(defun helm-get-candidate-number (&optional in-current-source)helm-get-candidate-number2077,85840
(defmacro with-helm-quittable (&rest body)with-helm-quittable2110,87435
(defconst helm-argument-keyshelm-argument-keys2125,87934
(defun helm (&rest plist)helm2130,88066
(defun helm--alive-p ()helm--alive-p2291,92608
(defun helm-parse-keys (keys)helm-parse-keys2301,92983
(defun helm-internal (&optionalhelm-internal2325,93988
(defun helm-resume (arg)helm-resume2431,99279
(defun helm-resume-previous-session-after-quit (arg)helm-resume-previous-session-after-quit2482,101420
(defun helm-resume-list-buffers-after-quit ()helm-resume-list-buffers-after-quit2491,101819
(defun helm-resume-p (any-resume)helm-resume-p2500,102177
(defun helm-resume-select-buffer ()helm-resume-select-buffer2504,102285
(defun helm-cycle-resume ()helm-cycle-resume2515,102691
(defun helm--resume-or-iter (&optional from-helm)helm--resume-or-iter2530,103287
(defun helm-run-cycle-resume ()helm-run-cycle-resume2543,103861
(defun helm-other-buffer (any-sources any-buffer)helm-other-buffer2563,104670
(defun helm--nest (&rest same-as-helm)helm--nest2571,104913
(defun helm-current-position (save-or-restore)helm-current-position2643,108238
(defun helm-frame-or-window-configuration (save-or-restore)helm-frame-or-window-configuration2665,109268
(defun helm-split-window-default-fn (window)helm-split-window-default-fn2707,111801
(defun helm-window-in-direction (direction)helm-window-in-direction2745,113727
(defun helm-resolve-display-function (com)helm-resolve-display-function2754,113963
(defun helm-display-buffer (buffer &optional resume)helm-display-buffer2773,114909
(defun helm-default-display-buffer (buffer &optional _resume)helm-default-display-buffer2812,116682
(defun helm-display-buffer-in-own-frame (buffer &optional resume)helm-display-buffer-in-own-frame2837,117953
(defun helm-display-buffer-popup-frame (buffer frame-alist)helm-display-buffer-popup-frame2918,122062
(defun helm--delete-frame-function (frame)helm--delete-frame-function2939,122999
(defun helm-get-sources (sources)helm-get-sources2948,123277
(defun helm-initialize (any-resume any-input any-default any-sources)helm-initialize2957,123563
(defun helm-initialize-overlays (buffer)helm-initialize-overlays2993,125167
(defun helm-restore-position-on-quit ()helm-restore-position-on-quit3007,125726
(defun helm--recent-push (elm sym)helm--recent-push3011,125864
(defun helm--current-buffer ()helm--current-buffer3018,126090
(defun helm--run-init-hooks (hook sources)helm--run-init-hooks3037,127097
(defun helm-initial-setup (any-default sources)helm-initial-setup3051,127685
(define-derived-mode helm-major-modehelm-major-mode3103,129998
(defun helm-create-helm-buffer ()helm-create-helm-buffer3110,130249
(define-minor-mode helm--minor-modehelm--minor-mode3142,131731
(defun helm--reset-default-pattern ()helm--reset-default-pattern3153,132072
(defun helm-read-pattern-maybe (any-prompt any-inputhelm-read-pattern-maybe3157,132183
(defun helm-toggle-suspend-update ()helm-toggle-suspend-update3266,138070
(defun helm--suspend-read-passwd (old--fn &rest args)helm--suspend-read-passwd3282,138707
(defun cua-delete-region--advice (old--fn &rest args)cua-delete-region--advice3298,139320
(defun copy-region-as-kill--advice (old--fn &rest args)copy-region-as-kill--advice3302,139419
(defun helm--maybe-update-keymap (&optional map)helm--maybe-update-keymap3307,139563
(defvar helm--remap-mouse-mode-maphelm--remap-mouse-mode-map3329,140587
(define-minor-mode helm--remap-mouse-modehelm--remap-mouse-mode3339,141056
(defun helm-cleanup ()helm-cleanup3353,141467
(defun helm-clean-up-minibuffer ()helm-clean-up-minibuffer3398,143407
(defun helm-check-minibuffer-input ()helm-check-minibuffer-input3411,143776
(defun helm-check-new-input (input)helm-check-new-input3418,144030
(defun helm--reset-update-flag ()helm--reset-update-flag3429,144410
(defun helm-get-candidates (source)helm-get-candidates3439,144626
(defmacro helm-while-no-input (&rest body)helm-while-no-input3491,147389
(defun helm-get-cached-candidates (source)helm-get-cached-candidates3500,147694
(defun helm-process-candidate-transformer (candidates source)helm-process-candidate-transformer3524,148716
(defun helm-process-filtered-candidate-transformer (candidates source)helm-process-filtered-candidate-transformer3530,148989
(defmacro helm--maybe-process-filter-one-by-one-candidate (candidate source)helm--maybe-process-filter-one-by-one-candidate3536,149296
(defun helm--initialize-one-by-one-candidates (candidates source)helm--initialize-one-by-one-candidates3550,149945
(defun helm-process-filtered-candidate-transformer-maybehelm-process-filtered-candidate-transformer-maybe3559,150387
(defun helm-process-real-to-display (candidates source)helm-process-real-to-display3569,150835
(defun helm-transform-candidates (candidates source &optional process-p)helm-transform-candidates3582,151451
(defun helm-candidate-number-limit (source)helm-candidate-number-limit3602,152225
(defun helm-candidate-get-display (candidate)helm-candidate-get-display3615,152840
(defun helm-process-pattern-transformer (pattern source)helm-process-pattern-transformer3626,153194
(defun helm-default-match-function (candidate)helm-default-match-function3632,153457
(defvar helm--fuzzy-regexp-cache (make-hash-table :test 'eq))helm--fuzzy-regexp-cache3641,153684
(defun helm--fuzzy-match-maybe-set-pattern ()helm--fuzzy-match-maybe-set-pattern3642,153746
(defun helm-fuzzy-match (candidate)helm-fuzzy-match3668,154935
(defun helm-fuzzy-search (pattern)helm-fuzzy-search3679,155455
(defun helm-score-candidate-for-pattern (candidate pattern)helm-score-candidate-for-pattern3713,157168
(defun helm-fuzzy-matching-default-sort-fn-1 (candidates &optional use-real basename preserve-tie-order)helm-fuzzy-matching-default-sort-fn-13741,158584
(defun helm-fuzzy-matching-default-sort-fn (candidates _source)helm-fuzzy-matching-default-sort-fn3790,161220
(defun helm-fuzzy-matching-sort-fn-preserve-ties-order (candidates _source)helm-fuzzy-matching-sort-fn-preserve-ties-order3794,161422
(defun helm--maybe-get-migemo-pattern (pattern)helm--maybe-get-migemo-pattern3802,161867
(defun helm-fuzzy-default-highlight-match (candidate)helm-fuzzy-default-highlight-match3807,162026
(defun helm-fuzzy-highlight-matches (candidates _source)helm-fuzzy-highlight-matches3869,165234
(defun helm-match-functions (source)helm-match-functions3879,165539
(defun helm-search-functions (source)helm-search-functions3886,165837
(defun helm-take-first-elements (seq n)helm-take-first-elements3891,166026
(defun helm-match-from-candidates (cands matchfns match-part-fn limit source)helm-match-from-candidates3897,166264
(defun helm-compute-matches (source)helm-compute-matches3943,168832
(defun helm--candidates-in-buffer-p (matchfns)helm--candidates-in-buffer-p3981,170663
(defun helm-render-source (source matches)helm-render-source3984,170743
(defmacro helm--maybe-use-while-no-input (&rest body)helm--maybe-use-while-no-input4006,171643
(defun helm--collect-matches (src-list)helm--collect-matches4016,172067
(defun helm-set-case-fold-search-1 (pattern)helm-set-case-fold-search-14050,173460
(defun helm-update (&optional preselect source candidates)helm-update4059,173696
(defun helm-update-source-p (source)helm-update-source-p4129,177143
(defun helm--update-move-first-line ()helm--update-move-first-line4151,178201
(defun helm-refresh ()helm-refresh4186,179628
(defun helm-force-update--reinit (source)helm-force-update--reinit4193,179798
(defun helm-redisplay-buffer ()helm-redisplay-buffer4207,180427
(defun helm-remove-candidate-cache (source)helm-remove-candidate-cache4263,183518
(defun helm-insert-match (match insert-function &optional num source)helm-insert-match4267,183673
(defun helm--mouse-reset-selection-help-echo ()helm--mouse-reset-selection-help-echo4310,185693
(defun helm--bind-mouse-for-selection (pos)helm--bind-mouse-for-selection4322,186199
(defun helm-mouse-select-candidate (event)helm-mouse-select-candidate4337,186901
(defun helm-insert-header-from-source (source)helm-insert-header-from-source4358,187873
(defun helm-insert-header (name &optional display-string)helm-insert-header4368,188263
(defun helm-insert-candidate-separator ()helm-insert-candidate-separator4386,188979
(defun helm-output-filter (process output-string)helm-output-filter4396,189291
(defun helm-output-filter-1 (process-assoc output-string)helm-output-filter-14401,189503
(defun helm-output-filter--process-source (process output-string source limit)helm-output-filter--process-source4417,190169
(defun helm-output-filter--collect-candidates (lines incomplete-line-info)helm-output-filter--collect-candidates4441,191331
(defun helm-output-filter--post-process ()helm-output-filter--post-process4467,192802
(defun helm-process-deferred-sentinel-hook (process event file)helm-process-deferred-sentinel-hook4478,193272
(defun helm-kill-async-processes ()helm-kill-async-processes4507,194776
(defun helm-kill-async-process (process)helm-kill-async-process4513,195036
(defun helm-execute-selection-action ()helm-execute-selection-action4521,195229
(defun helm-execute-selection-action-1 (&optionalhelm-execute-selection-action-14532,195665
(defun helm-coerce-selection (selection source)helm-coerce-selection4559,196905
(defun helm-get-default-action (action)helm-get-default-action4566,197170
(defun helm--show-action-window-other-window-p ()helm--show-action-window-other-window-p4572,197353
(defun helm-select-action ()helm-select-action4578,197571
(defun helm--set-action-prompt (&optional restore)helm--set-action-prompt4615,199611
(defun helm-show-action-buffer (actions)helm-show-action-buffer4627,200044
(defun helm-display-source-at-screen-top-maybe (unit)helm-display-source-at-screen-top-maybe4667,201804
(defun helm-skip-noncandidate-line (direction)helm-skip-noncandidate-line4674,202142
(defun helm-skip-header-and-separator-line (direction)helm-skip-header-and-separator-line4683,202581
(defun helm-display-mode-line (source &optional force)helm-display-mode-line4696,203141
(defun helm--set-header-line (&optional update)helm--set-header-line4773,207127
(defun helm-set-default-prompt-display (pos)helm-set-default-prompt-display4801,208613
(defun helm-exchange-minibuffer-and-header-line ()helm-exchange-minibuffer-and-header-line4812,208997
(defun helm--update-header-line ()helm--update-header-line4829,209686
(defun helm-hide-minibuffer-maybe ()helm-hide-minibuffer-maybe4835,209880
(defun helm-show-candidate-number (&optional name)helm-show-candidate-number4856,210970
(defun helm-move--beginning-of-multiline-candidate ()helm-move--beginning-of-multiline-candidate4919,213819
(defun helm-move--previous-multi-line-fn ()helm-move--previous-multi-line-fn4929,214212
(defun helm-move--previous-line-fn ()helm-move--previous-line-fn4935,214416
(defun helm-move--next-multi-line-fn ()helm-move--next-multi-line-fn4950,214948
(defun helm-move--next-line-fn ()helm-move--next-line-fn4959,215299
(defun helm-move--previous-page-fn ()helm-move--previous-page-fn4971,215822
(defun helm-move--next-page-fn ()helm-move--next-page-fn4976,215955
(defun helm-move--beginning-of-buffer-fn ()helm-move--beginning-of-buffer-fn4981,216076
(defun helm-move--end-of-buffer-fn ()helm-move--end-of-buffer-fn4984,216148
(defun helm-move--end-of-source ()helm-move--end-of-source4987,216214
(defun helm-move--beginning-of-source ()helm-move--beginning-of-source4992,216366
(defun helm-move--previous-source-fn ()helm-move--previous-source-fn4998,216540
(defun helm-move--next-source-fn ()helm-move--next-source-fn5006,216762
(defun helm-move--goto-source-fn (source-or-name)helm-move--goto-source-fn5015,217133
(defun helm-candidate-number-at-point ()helm-candidate-number-at-point5027,217605
(defun helm--next-or-previous-line (direction &optional arg)helm--next-or-previous-line5033,217807
(defun helm-previous-line (&optional arg)helm-previous-line5049,218609
(defun helm-next-line (&optional arg)helm-next-line5057,218903
(defun helm-previous-page ()helm-previous-page5067,219252
(defun helm-next-page ()helm-next-page5074,219467
(defun helm-beginning-of-buffer ()helm-beginning-of-buffer5081,219673
(defun helm-end-of-buffer ()helm-end-of-buffer5088,219891
(defun helm-previous-source ()helm-previous-source5095,220096
(defun helm-next-source ()helm-next-source5102,220320
(defun helm-goto-source (&optional source-or-name)helm-goto-source5109,220528
(defun helm--follow-action (arg)helm--follow-action5116,220797
(defun helm-follow-action-forward ()helm-follow-action-forward5135,221639
(defun helm-follow-action-backward ()helm-follow-action-backward5141,221838
(defun helm-mark-current-line (&optional resumep nomouse)helm-mark-current-line5147,222044
(defun helm-confirm-and-exit-minibuffer ()helm-confirm-and-exit-minibuffer5173,223097
(defun helm-confirm-and-exit-hook ()helm-confirm-and-exit-hook5221,225596
(defun helm-read-string (prompt &optional initial-input historyhelm-read-string5228,225881
(defun helm--updating-p ()helm--updating-p5235,226219
(defun helm-maybe-exit-minibuffer ()helm-maybe-exit-minibuffer5243,226524
(defun helm-exit-minibuffer ()helm-exit-minibuffer5255,226884
(defun helm-keyboard-quit ()helm-keyboard-quit5263,227163
(defun helm-get-next-header-pos ()helm-get-next-header-pos5274,227495
(defun helm-get-previous-header-pos ()helm-get-previous-header-pos5278,227640
(defun helm-pos-multiline-p ()helm-pos-multiline-p5282,227797
(defun helm-get-next-candidate-separator-pos ()helm-get-next-candidate-separator-pos5286,227956
(defun helm-get-previous-candidate-separator-pos ()helm-get-previous-candidate-separator-pos5300,228519
(defun helm-pos-header-line-p ()helm-pos-header-line-p5304,228715
(defun helm-pos-candidate-separator-p ()helm-pos-candidate-separator-p5309,228920
(defun helm-debug-output ()helm-debug-output5317,229107
(defun helm-debug-output-function (&optional vars)helm-debug-output-function5324,229332
(defun helm-enable-or-switch-to-debug ()helm-enable-or-switch-to-debug5336,229850
(defun helm-kill-buffer-hook ()helm-kill-buffer-hook5350,230269
(defun helm-preselect (candidate-or-regexp &optional source)helm-preselect5359,230691
(defun helm-delete-current-selection ()helm-delete-current-selection5400,232405
(defun helm-end-of-source-1 (n at-point)helm-end-of-source-15424,233450
(defun helm-end-of-source-p (&optional at-point)helm-end-of-source-p5433,233786
(defun helm-beginning-of-source-p (&optional at-point)helm-beginning-of-source-p5437,233929
(defun helm--edit-current-selection-internal (func)helm--edit-current-selection-internal5441,234085
(defmacro helm-edit-current-selection (&rest forms)helm-edit-current-selection5458,234760
(defun helm--delete-minibuffer-contents-from (from-str)helm--delete-minibuffer-contents-from5465,235018
(defun helm-delete-minibuffer-contents (&optional arg)helm-delete-minibuffer-contents5476,235446
(defun helm-candidates-in-buffer (&optional source)helm-candidates-in-buffer5493,236117
(defun helm-candidates-in-buffer-search-default-fn (pattern)helm-candidates-in-buffer-search-default-fn5563,238673
(defun helm-candidates-in-buffer-1 (buffer pattern get-line-fnhelm-candidates-in-buffer-15569,238898
(defun helm-search-from-candidate-buffer (pattern get-line-fn search-fnshelm-search-from-candidate-buffer5587,239636
(defun helm-search-match-part (candidate pattern)helm-search-match-part5643,242782
(defun helm-initial-candidates-from-candidate-buffer (get-line-fn limit)helm-initial-candidates-from-candidate-buffer5668,244051
(defun helm--search-from-candidate-buffer-1 (search-fn)helm--search-from-candidate-buffer-15675,244365
(defun helm-candidate-buffer (&optional buffer-spec)helm-candidate-buffer5694,244981
(defun helm-init-candidates-in-buffer (buffer-spec data)helm-init-candidates-in-buffer5793,249559
(defun helm-toggle-resplit-window ()helm-toggle-resplit-window5833,251138
(defun helm-enlarge-window-1 (n)helm-enlarge-window-15877,253705
(defun helm-narrow-window ()helm-narrow-window5885,253981
(defun helm-enlarge-window ()helm-enlarge-window5892,254144
(defun helm-toggle-full-frame (&optional arg)helm-toggle-full-frame5899,254309
(defun helm-swap-windows ()helm-swap-windows5923,255292
(defun helm--get-window-side-state ()helm--get-window-side-state5971,257953
(defun helm-replace-buffer-in-window (window buffer1 buffer2)helm-replace-buffer-in-window5982,258434
(defun helm-select-nth-action (n)helm-select-nth-action5989,258721
(defun helm-get-nth-action (n action)helm-get-nth-action6003,259276
(defun helm-execute-selection-action-at-nth (linum)helm-execute-selection-action-at-nth6014,259615
(defun helm-initialize-persistent-action ()helm-initialize-persistent-action6025,259972
(defun helm-persistent-action-display-window (&optional split-onewindow)helm-persistent-action-display-window6099,263762
(defun helm-select-persistent-action-window (&optional split-onewindow)helm-select-persistent-action-window6125,265186
(defun helm-other-window-base (command &optional arg)helm-other-window-base6138,265694
(defun helm-scroll-other-window (&optional arg)helm-scroll-other-window6143,265886
(defun helm-scroll-other-window-down (&optional arg)helm-scroll-other-window-down6151,266207
(defun helm-recenter-top-bottom-other-window (&optional arg)helm-recenter-top-bottom-other-window6159,266550
(defun helm-reposition-window-other-window (&optional arg)helm-reposition-window-other-window6169,266949
(defun helm-clear-visible-mark ()helm-clear-visible-mark6182,267366
(defun helm-this-visible-mark ()helm-this-visible-mark6187,267562
(defun helm-delete-visible-mark (overlay)helm-delete-visible-mark6192,267706
(defun helm-make-visible-mark (&optional src selection)helm-make-visible-mark6202,268053
(defun helm-toggle-visible-mark (arg)helm-toggle-visible-mark6224,269141
(defun helm-file-completion-source-p (&optional source)helm-file-completion-source-p6249,270229
(defun helm-mark-all (&optional all)helm-mark-all6257,270636
(defun helm-mark-all-1 (&optional ensure-beg-of-source)helm-mark-all-16281,271585
(defun helm-unmark-all ()helm-unmark-all6341,274810
(defun helm-toggle-all-marks (&optional all)helm-toggle-all-marks6353,275186
(defun helm--compute-marked (real source &optional wildcard)helm--compute-marked6369,275737
(defun helm--remove-marked-and-update-mode-line (elm)helm--remove-marked-and-update-mode-line6417,278035
(defun helm-current-source-name= (name)helm-current-source-name=6424,278297
(defun helm-revive-visible-mark ()helm-revive-visible-mark6429,278451
(defun helm-next-point-in-list (curpos points &optional prev)helm-next-point-in-list6461,280058
(defun helm-next-visible-mark (&optional prev)helm-next-visible-mark6481,280718
(defun helm-prev-visible-mark ()helm-prev-visible-mark6495,281177
(defun helm-yank-selection (arg)helm-yank-selection6504,281393
(defun helm-kill-selection-and-quit (arg)helm-kill-selection-and-quit6514,281743
(defun helm-copy-to-buffer ()helm-copy-to-buffer6531,282454
(defvar helm-follow-input-idle-delay nilhelm-follow-input-idle-delay6550,283015
(defun helm-follow-mode (&optional arg)helm-follow-mode6555,283228
(defun helm-follow-execute-persistent-action-maybe (&optional delay)helm-follow-execute-persistent-action-maybe6620,286852
(defun helm-follow-mode-p (&optional source)helm-follow-mode-p6645,288081
(defun helm-follow-mode-set-source (value &optional source)helm-follow-mode-set-source6649,288218
(defun helm--autoresize-hook (&optional max-height min-height)helm--autoresize-hook6655,288397
(define-minor-mode helm-autoresize-modehelm-autoresize-mode6666,288867
(defun helm-help ()helm-help6682,289539
(defun helm-toggle-truncate-line ()helm-toggle-truncate-line6704,290416

elpa/helm-core-20180610.144/helm-lib.el,7691
(defvar helm-current-position)helm-current-position38,1455
(defvar wdired-old-marks)wdired-old-marks39,1486
(defvar helm-persistent-action-display-window)helm-persistent-action-display-window40,1512
(defcustom helm-file-globstar thelm-file-globstar44,1579
(defcustom helm-yank-text-at-point-function nilhelm-yank-text-at-point-function51,1803
(defcustom helm-scroll-amount nilhelm-scroll-amount60,2198
(defcustom helm-help-full-frame thelm-help-full-frame69,2469
(defvar helm-ff--boring-regexp nil)helm-ff--boring-regexp78,2764
(defun helm-ff--setup-boring-regex (var val)helm-ff--setup-boring-regex79,2800
(defcustom helm-boring-file-regexp-listhelm-boring-file-regexp-list91,3292
(defvar helm-yank-point nil)helm-yank-point119,4338
(defvar helm-pattern ""helm-pattern120,4367
(defvar helm-buffer "*helm*"helm-buffer122,4446
(defvar helm-current-buffer nilhelm-current-buffer124,4508
(defvar helm-suspend-update-flag nil)helm-suspend-update-flag126,4584
(defvar helm-action-buffer "*helm action*"helm-action-buffer127,4622
(defun helm-add-face-text-properties (beg end face &optional append object)helm-add-face-text-properties133,4718
(defun helm--advice-wdired-finish-edit ()helm--advice-wdired-finish-edit146,5385
(defun helm--advice-wdired-get-filename (&optional no-dir old)helm--advice-wdired-get-filename243,9522
(defun helm--advice-push-mark (&optional location nomsg activate)helm--advice-push-mark276,11018
(defcustom helm-advice-push-mark thelm-advice-push-mark303,12417
(defmacro helm-with-gensyms (symbols &rest body)helm-with-gensyms315,12785
(defun helm-this-command ()helm-this-command330,13394
(defun helm-iter-list (seq)helm-iter-list374,14975
(defun helm-iter-circular (seq)helm-iter-circular382,15152
(defun helm-iter-next (iterator)helm-iter-next398,15692
(defmacro helm-aif (test-form then-form &rest else-forms)helm-aif405,15823
(defmacro helm-awhile (sexp &rest body)helm-awhile413,16151
(defmacro helm-acond (&rest clauses)helm-acond428,16640
(defmacro helm-aand (&rest conditions)helm-aand445,17269
(defsubst helm--mapconcat-pattern (pattern)helm--mapconcat-pattern455,17578
(defsubst helm--collect-pairs-in-string (string)helm--collect-pairs-in-string476,18379
(defun helm-help-internal (bufname insert-content-fn)helm-help-internal483,18584
(defun helm-help-scroll-up (amount)helm-help-scroll-up508,19595
(defun helm-help-scroll-down (amount)helm-help-scroll-down514,19744
(defun helm-help-next-line ()helm-help-next-line520,19897
(defun helm-help-previous-line ()helm-help-previous-line526,20046
(defun helm-help-toggle-mark ()helm-help-toggle-mark532,20203
(defun helm-help-event-loop ()helm-help-event-loop539,20446
(defun helm-multiline-transformer (candidates _source)helm-multiline-transformer580,22300
(defun helm--multiline-get-truncated-candidate (candidate offset)helm--multiline-get-truncated-candidate588,22652
(defun helm-flatten-list (seq &optional omit-nulls)helm-flatten-list609,23280
(defun helm-mklist (obj)helm-mklist627,24005
(defsubst helm--string-join (strings &optional separator)helm--string-join652,25018
(defun helm--concat-regexps (regexp-list)helm--concat-regexps656,25158
(defun helm-skip-entries (seq black-regexp-list &optional white-regexp-list)helm-skip-entries662,25419
(defun helm-boring-directory-p (directory black-list)helm-boring-directory-p673,25925
(defun helm-shadow-entries (seq regexp-list)helm-shadow-entries684,26383
(defun helm-remove-if-not-match (regexp seq)helm-remove-if-not-match694,26777
(defun helm-remove-if-match (regexp seq)helm-remove-if-match705,27164
(defun helm-transform-mapcar (function args)helm-transform-mapcar716,27543
(defun helm-append-at-nth (seq elm index)helm-append-at-nth732,28059
(defun helm-source-by-name (name &optional sources)helm-source-by-name745,28475
(defun helm-make-actions (&rest args)helm-make-actions759,29104
(defun helm-stringify (elm)helm-stringify774,29569
(defun helm-substring (str width)helm-substring782,29796
(defun helm-substring-by-width (str width &optional endstr)helm-substring-by-width791,30072
(defun helm-string-multibyte-p (str)helm-string-multibyte-p802,30555
(defun helm-get-pid-from-process-name (process-name)helm-get-pid-from-process-name807,30715
(defun helm-ff-find-printers ()helm-ff-find-printers815,31056
(defun helm-region-active-p ()helm-region-active-p826,31496
(defun helm-quote-whitespace (candidate)helm-quote-whitespace829,31589
(defun helm-current-line-contents ()helm-current-line-contents833,31735
(defun helm--replace-regexp-in-buffer-string (regexp rep str &optional fixedcase literal subexp start)helm--replace-regexp-in-buffer-string837,31883
(defun helm-url-unhex-string (str)helm-url-unhex-string883,33448
(defun helm-read-answer (prompt answer-list)helm-read-answer897,34035
(defun helm-symbolify (str-or-sym)helm-symbolify927,34952
(defun helm-symbol-name (obj)helm-symbol-name933,35088
(defun helm-describe-function (func)helm-describe-function939,35245
(defun helm-describe-variable (var)helm-describe-variable944,35412
(defun helm-describe-face (face)helm-describe-face949,35576
(defun helm-elisp--persistent-help (candidate fun &optional name)helm-elisp--persistent-help957,35880
(defun helm-find-function (func)helm-find-function984,37105
(defun helm-find-variable (var)helm-find-variable988,37210
(defun helm-find-face-definition (face)helm-find-face-definition992,37312
(defun helm-kill-new (candidate &optional replace)helm-kill-new996,37431
(defun helm-same-major-mode-p (start-buffer alist)helm-same-major-mode-p1004,37619
(defun helm-file-name-sans-extension (filename)helm-file-name-sans-extension1045,39470
(defun helm-basename (fname &optional ext)helm-basename1053,39822
(defun helm-basedir (fname)helm-basedir1069,40582
(defun helm-current-directory ()helm-current-directory1076,40833
(defun helm-shadow-boring-files (files)helm-shadow-boring-files1084,41083
(defun helm-skip-boring-files (files)helm-skip-boring-files1089,41294
(defun helm-skip-current-file (files)helm-skip-current-file1093,41453
(defun helm-w32-pathname-transformer (args)helm-w32-pathname-transformer1097,41583
(defun helm-w32-prepare-filename (file)helm-w32-prepare-filename1109,41969
(defun helm-w32-shell-execute-open-file (file)helm-w32-shell-execute-open-file1117,42250
(defvar helm-walk-ignore-directorieshelm-walk-ignore-directories1122,42426
(defsubst helm--dir-file-name (file dir)helm--dir-file-name1126,42572
(defsubst helm--dir-name-p (str)helm--dir-name-p1130,42681
(defun helm-file-expand-wildcards (pattern &optional full)helm-file-expand-wildcards1183,45285
(defun helm-set-pattern (pattern &optional noupdate)helm-set-pattern1204,46196
(defun helm-minibuffer-completion-contents ()helm-minibuffer-completion-contents1213,46533
(defmacro with-helm-buffer (&rest body)with-helm-buffer1218,46741
(defmacro with-helm-current-buffer (&rest body)with-helm-current-buffer1224,46907
(defun helm-buffer-get ()helm-buffer-get1233,47277
(defun helm-window ()helm-window1239,47440
(defun helm-action-window ()helm-action-window1243,47535
(defmacro with-helm-window (&rest body)with-helm-window1247,47652
(defun helm-yank-text-at-point (arg)helm-yank-text-at-point1257,47858
(defun helm-undo-yank-text-at-point ()helm-undo-yank-text-at-point1289,49142
(defun helm-reset-yank-point ()helm-reset-yank-point1295,49335
(defvar helm--ansi-color-regexphelm--ansi-color-regexp1304,49529
(defvar helm--ansi-color-drop-regexphelm--ansi-color-drop-regexp1306,49592
(defun helm--ansi-color-apply (string)helm--ansi-color-apply1308,49696

elpa/helm-core-20180610.144/helm-multi-match.el,3044
(defgroup helm-multi-match nilhelm-multi-match30,1043
(defcustom helm-mm-matching-method 'multi3helm-mm-matching-method34,1113
(defvar helm-mm-default-match-functionshelm-mm-default-match-functions57,2186
(defvar helm-mm-default-search-functionshelm-mm-default-search-functions59,2266
(defconst helm-mm-space-regexp "\\s\\\\s-"helm-mm-space-regexp66,2376
(defun helm-mm-split-pattern (pattern)helm-mm-split-pattern69,2484
(defun helm-mm-1-make-regexp (pattern)helm-mm-1-make-regexp79,2947
(defvar helm-mm-exact-pattern-str nil)helm-mm-exact-pattern-str88,3131
(defvar helm-mm-exact-pattern-real nil)helm-mm-exact-pattern-real89,3170
(defun helm-mm-exact-get-pattern (pattern)helm-mm-exact-get-pattern91,3211
(defun helm-mm-exact-search (pattern &rest _ignore)helm-mm-exact-search106,3690
(defvar helm-mm-prefix-pattern-str nil)helm-mm-prefix-pattern-str115,3873
(defvar helm-mm-prefix-pattern-real nil)helm-mm-prefix-pattern-real116,3913
(defun helm-mm-prefix-get-pattern (pattern)helm-mm-prefix-get-pattern118,3955
(defun helm-mm-prefix-match (str &optional pattern)helm-mm-prefix-match124,4191
(defun helm-mm-prefix-search (pattern &rest _ignore)helm-mm-prefix-search133,4576
(defvar helm-mm-1-pattern-str nil)helm-mm-1-pattern-str141,4775
(defvar helm-mm-1-pattern-real nil)helm-mm-1-pattern-real142,4810
(defun helm-mm-1-get-pattern (pattern)helm-mm-1-get-pattern144,4847
(defun helm-mm-1-search (pattern &rest _ignore)helm-mm-1-search154,5211
(defvar helm-mm-2-pattern-str nil)helm-mm-2-pattern-str162,5404
(defvar helm-mm-2-pattern-real nil)helm-mm-2-pattern-real163,5439
(defun helm-mm-2-get-pattern (pattern)helm-mm-2-get-pattern165,5476
(defun helm-mm-2-search (pattern &rest _ignore)helm-mm-2-search175,5842
(defvar helm-mm-3-pattern-str nil)helm-mm-3-pattern-str183,6018
(defvar helm-mm-3-pattern-list nil)helm-mm-3-pattern-list184,6053
(defun helm-mm-3-get-patterns (pattern)helm-mm-3-get-patterns186,6090
(defun helm-mm-3-get-patterns-internal (pattern)helm-mm-3-get-patterns-internal196,6522
(defun helm-mm-3-search-base (pattern searchfn1 searchfn2)helm-mm-3-search-base226,8000
(defun helm-mm-3-search (pattern &rest _ignore)helm-mm-3-search253,9341
(defvar helm-mm--previous-migemo-info nilhelm-mm--previous-migemo-info262,9573
(define-minor-mode helm-migemo-modehelm-migemo-mode269,9830
(defun helm-mm-migemo-get-pattern (pattern)helm-mm-migemo-get-pattern279,10160
(defun helm-mm-migemo-search-pattern-get (pattern)helm-mm-migemo-search-pattern-get284,10349
(defun helm-mm-migemo-string-match (pattern str)helm-mm-migemo-string-match289,10552
(defun helm-mm-migemo-forward (word &optional bound noerror count)helm-mm-migemo-forward303,11201
(defun helm-mm-3-migemo-search (pattern &rest _ignore)helm-mm-3-migemo-search314,11721
(defun helm-mm-3p-match (str &optional pattern)helm-mm-3p-match323,11964
(defun helm-mm-3p-search (pattern &rest _ignore)helm-mm-3p-search334,12500
(defun helm-mm-search (pattern &rest _ignore)helm-mm-search352,13074

elpa/helm-core-20180610.144/helm-core-pkg.el,88
(define-package "helm-core" "20180610.144" "Development files for Helm""helm-core"1,0

elpa/helm-core-20180610.144/helm-core-autoloads.el,0

elpa/flycheck-20180610.1331/flycheck.el,35683
(defvar sh-shell)                       ; For shell script checker predicatessh-shell86,3475
(defvar ess-language)                   ; For r-lintr predicateess-language87,3553
(defgroup flycheck nilflycheck135,5283
(defgroup flycheck-config-files nilflycheck-config-files142,5533
(defgroup flycheck-options nilflycheck-options147,5668
(defgroup flycheck-executables nilflycheck-executables152,5786
(defgroup flycheck-faces nilflycheck-faces157,5900
(defcustom flycheck-checkersflycheck-checkers162,6018
(defcustom flycheck-disabled-checkers nilflycheck-disabled-checkers288,8382
(defvar-local flycheck-checker nilflycheck-checker310,9238
(defcustom flycheck-locate-config-file-functions nilflycheck-locate-config-file-functions333,10208
(defcustom flycheck-checker-error-threshold 400flycheck-checker-error-threshold352,10896
(defcustom flycheck-process-error-functions nilflycheck-process-error-functions370,11655
(defcustom flycheck-display-errors-delay 0.9flycheck-display-errors-delay394,12522
(defcustom flycheck-display-errors-function #'flycheck-display-error-messagesflycheck-display-errors-function403,12779
(defcustom flycheck-help-echo-function #'flycheck-help-echo-all-error-messagesflycheck-help-echo-function420,13491
(defcustom flycheck-command-wrapper-function #'identityflycheck-command-wrapper-function438,14292
(defcustom flycheck-executable-find #'executable-findflycheck-executable-find456,15054
(defcustom flycheck-indication-mode 'left-fringeflycheck-indication-mode474,15757
(defcustom flycheck-highlighting-mode 'symbolsflycheck-highlighting-mode491,16467
(defcustom flycheck-check-syntax-automatically '(saveflycheck-check-syntax-automatically526,17724
(defcustom flycheck-idle-change-delay 0.5flycheck-idle-change-delay566,19258
(defcustom flycheck-standard-error-navigation tflycheck-standard-error-navigation581,19767
(define-widget 'flycheck-minimum-level 'lazyflycheck-minimum-level600,20490
(defcustom flycheck-navigation-minimum-level nilflycheck-navigation-minimum-level611,20920
(defcustom flycheck-error-list-minimum-level nilflycheck-error-list-minimum-level621,21271
(defcustom flycheck-completing-read-function #'completing-readflycheck-completing-read-function637,21868
(defcustom flycheck-temp-prefix "flycheck"flycheck-temp-prefix649,22296
(defcustom flycheck-mode-hook nilflycheck-mode-hook656,22479
(defcustom flycheck-after-syntax-check-hook nilflycheck-after-syntax-check-hook662,22618
(defcustom flycheck-before-syntax-check-hook nilflycheck-before-syntax-check-hook682,23276
(defcustom flycheck-syntax-check-failed-hook nilflycheck-syntax-check-failed-hook699,23766
(defcustom flycheck-status-changed-functions nilflycheck-status-changed-functions714,24195
(defcustom flycheck-error-list-after-refresh-hook nilflycheck-error-list-after-refresh-hook728,24622
(defface flycheck-errorflycheck-error739,24939
(defface flycheck-warningflycheck-warning748,25190
(defface flycheck-infoflycheck-info757,25453
(defface flycheck-fringe-errorflycheck-fringe-error766,25728
(defface flycheck-fringe-warningflycheck-fringe-warning772,25897
(defface flycheck-fringe-infoflycheck-fringe-info778,26072
(defface flycheck-error-list-errorflycheck-error-list-error786,26339
(defface flycheck-error-list-warningflycheck-error-list-warning792,26521
(defface flycheck-error-list-infoflycheck-error-list-info798,26709
(defface flycheck-error-list-line-numberflycheck-error-list-line-number805,26970
(defface flycheck-error-list-column-numberflycheck-error-list-column-number811,27165
(defface flycheck-error-list-filenameflycheck-error-list-filename817,27362
(defface flycheck-error-list-idflycheck-error-list-id823,27554
(defface flycheck-error-list-id-with-explainerflycheck-error-list-id-with-explainer829,27736
(defface flycheck-error-list-checker-nameflycheck-error-list-checker-name836,28006
(defface flycheck-error-list-highlightflycheck-error-list-highlight842,28218
(defvar flycheck-command-mapflycheck-command-map848,28409
(defcustom flycheck-keymap-prefix (kbd "C-c !")flycheck-keymap-prefix869,29445
(defcustom flycheck-mode-line '(:eval (flycheck-mode-line-status-text))flycheck-mode-line894,30357
(defcustom flycheck-mode-line-prefix "FlyC"flycheck-mode-line-prefix920,31333
(defcustom flycheck-error-list-mode-lineflycheck-error-list-mode-line932,31673
(defcustom flycheck-global-modes tflycheck-global-modes953,32463
(defvar flycheck-mode-menu-mapflycheck-mode-menu-map994,34360
(defun flycheck-version (&optional show-version)flycheck-version1029,35881
(defun flycheck-unload-function ()flycheck-unload-function1047,36519
(defun flycheck-manual ()flycheck-manual1056,36871
(define-obsolete-function-alias 'flycheck-infoflycheck-info1061,36986
(defun flycheck-sexp-to-string (sexp)flycheck-sexp-to-string1066,37111
(defun flycheck-string-to-number-safe (string)flycheck-string-to-number-safe1076,37361
(defun flycheck-string-list-p (obj)flycheck-string-list-p1085,37742
(defun flycheck-symbol-list-p (obj)flycheck-symbol-list-p1089,37871
(defun flycheck-same-files-p (file-a file-b)flycheck-same-files-p1093,38000
(defvar-local flycheck-temporaries nilflycheck-temporaries1106,38742
(defun flycheck-temp-dir-system ()flycheck-temp-dir-system1109,38840
(defun flycheck-temp-file-system (filename)flycheck-temp-file-system1120,39162
(defun flycheck-temp-file-inplace (filename)flycheck-temp-file-inplace1140,39955
(defun flycheck-temp-directory (checker)flycheck-temp-directory1160,40693
(defun flycheck-temp-files-writable-p (checker)flycheck-temp-files-writable-p1172,41123
(defun flycheck-save-buffer-to-file (file-name)flycheck-save-buffer-to-file1183,41512
(defun flycheck-save-buffer-to-temp (temp-file-fn)flycheck-save-buffer-to-temp1189,41748
(defun flycheck-prepend-with-option (option items &optional prepend-fn)flycheck-prepend-with-option1199,42119
(defun flycheck-find-in-buffer (pattern)flycheck-find-in-buffer1227,43303
(defun flycheck-buffer-empty-p (&optional buffer)flycheck-buffer-empty-p1239,43657
(defun flycheck-ephemeral-buffer-p ()flycheck-ephemeral-buffer-p1247,43882
(defun flycheck-encrypted-buffer-p ()flycheck-encrypted-buffer-p1254,44103
(defun flycheck-autoloads-file-p ()flycheck-autoloads-file-p1265,44589
(defun flycheck-in-user-emacs-directory-p (filename)flycheck-in-user-emacs-directory-p1271,44800
(defun flycheck-safe-delete (file-or-dir)flycheck-safe-delete1276,45032
(defun flycheck-safe-delete-temporaries ()flycheck-safe-delete-temporaries1283,45247
(defun flycheck-rx-file-name (form)flycheck-rx-file-name1291,45554
(defun flycheck-rx-message (form)flycheck-rx-message1297,45806
(defun flycheck-rx-id (form)flycheck-rx-id1302,46006
(defun flycheck-rx-to-string (form &optional no-group)flycheck-rx-to-string1306,46138
(defun flycheck-current-load-file ()flycheck-current-load-file1341,47224
(defun flycheck-module-root-directory (module &optional file-name)flycheck-module-root-directory1359,48009
(defvar read-flycheck-checker-history nilread-flycheck-checker-history1396,49656
(defun flycheck-completing-read (prompt candidates default &optional history)flycheck-completing-read1399,49758
(defun read-flycheck-checker (prompt &optional default property candidates)read-flycheck-checker1410,50204
(defun read-flycheck-error-level (prompt)read-flycheck-error-level1444,51819
(defun flycheck-defined-checkers (&optional property)flycheck-defined-checkers1458,52369
(defun flycheck-registered-checker-p (checker)flycheck-registered-checker-p1474,53001
(defun flycheck-disabled-checker-p (checker)flycheck-disabled-checker-p1482,53246
(defconst flycheck-generic-checker-version 2flycheck-generic-checker-version1491,53485
(defsubst flycheck--checker-property-name (property)flycheck--checker-property-name1497,53686
(defun flycheck-checker-get (checker property)flycheck-checker-get1501,53849
(defun flycheck-validate-next-checker (next &optional strict)flycheck-validate-next-checker1508,54140
(defun flycheck-define-generic-checker (symbol docstring &rest properties)flycheck-define-generic-checker1534,55080
(defun flycheck-valid-checker-p (checker)flycheck-valid-checker-p1836,67687
(defun flycheck-checker-supports-major-mode-p (checker &optional mode)flycheck-checker-supports-major-mode-p1845,67991
(defvar-local flycheck-enabled-checkers nilflycheck-enabled-checkers1858,68507
(defun flycheck-may-enable-checker (checker)flycheck-may-enable-checker1864,68694
(defun flycheck-may-use-checker (checker)flycheck-may-use-checker1879,69342
(defun flycheck-may-use-next-checker (next-checker)flycheck-may-use-next-checker1890,69776
(define-button-type 'help-flycheck-checker-defhelp-flycheck-checker-def1903,70240
(defconst flycheck-find-checker-regexpflycheck-find-checker-regexp1908,70427
(defun flycheck-goto-checker-definition (checker file)flycheck-goto-checker-definition1921,70879
(defun flycheck-checker-at-point ()flycheck-checker-at-point1930,71241
(defun flycheck-describe-checker (checker)flycheck-describe-checker1938,71482
(defun flycheck-verify-generic-checker (checker)flycheck-verify-generic-checker2036,75567
(define-button-type 'help-flycheck-checker-dochelp-flycheck-checker-doc2061,76587
(defun flycheck--verify-princ-checker (checker buffer &optional with-mm)flycheck--verify-princ-checker2066,76760
(defun flycheck--verify-print-header (desc buffer)flycheck--verify-print-header2108,78580
(defun flycheck--verify-print-footer (buffer)flycheck--verify-print-footer2126,79203
(defun flycheck-verify-checker (checker)flycheck-verify-checker2151,80209
(defun flycheck-verify-setup ()flycheck-verify-setup2183,81583
(defun flycheck-buffer-saved-p (&optional buffer)flycheck-buffer-saved-p2241,83862
(defun flycheck-add-next-checker (checker next &optional append)flycheck-add-next-checker2254,84296
(defun flycheck-add-mode (checker mode)flycheck-add-mode2279,85337
(defun flycheck-syntax-check-start (syntax-check callback)flycheck-syntax-check-start2315,86292
(defun flycheck-syntax-check-interrupt (syntax-check)flycheck-syntax-check-interrupt2323,86682
(defvar flycheck-mode-mapflycheck-mode-map2334,87061
(defvar-local flycheck-old-next-error-function nilflycheck-old-next-error-function2345,87550
(defconst flycheck-hooks-alistflycheck-hooks-alist2348,87647
(define-minor-mode flycheck-modeflycheck-mode2384,89620
(defun flycheck-get-checker-for-buffer ()flycheck-get-checker-for-buffer2429,91101
(defun flycheck-get-next-checker-for-buffer (checker)flycheck-get-next-checker-for-buffer2442,91558
(defun flycheck-select-checker (checker)flycheck-select-checker2449,91867
(defun flycheck-disable-checker (checker &optional enable)flycheck-disable-checker2480,93064
(defvar-local flycheck-current-syntax-check nilflycheck-current-syntax-check2516,94632
(defun flycheck-start-current-syntax-check (checker)flycheck-start-current-syntax-check2520,94787
(defun flycheck-running-p ()flycheck-running-p2538,95543
(defun flycheck-stop ()flycheck-stop2542,95690
(defun flycheck-buffer-status-callback (syntax-check)flycheck-buffer-status-callback2552,96165
(defun flycheck-buffer ()flycheck-buffer2558,96395
(defun flycheck-report-buffer-checker-statusflycheck-report-buffer-checker-status2585,97491
(defun flycheck-finish-current-syntax-check (errors working-dir)flycheck-finish-current-syntax-check2658,100450
(defun flycheck-disable-excessive-checker (checker errors)flycheck-disable-excessive-checker2698,102343
(defun flycheck-clear (&optional shall-interrupt)flycheck-clear2715,103069
(defun flycheck-teardown ()flycheck-teardown2728,103438
(defun flycheck-may-check-automatically (&optional condition)flycheck-may-check-automatically2741,103846
(defun flycheck-buffer-automatically (&optional condition force-deferred)flycheck-buffer-automatically2754,104358
(defvar-local flycheck-idle-change-timer nilflycheck-idle-change-timer2768,104940
(defun flycheck-clear-idle-change-timer ()flycheck-clear-idle-change-timer2771,105042
(defun flycheck-handle-change (beg end _len)flycheck-handle-change2777,105244
(defun flycheck--handle-idle-change-in-buffer (buffer)flycheck--handle-idle-change-in-buffer2797,106055
(defun flycheck-handle-idle-change ()flycheck-handle-idle-change2806,106457
(defun flycheck-handle-save ()flycheck-handle-save2811,106637
(defvar-local flycheck-deferred-syntax-check nilflycheck-deferred-syntax-check2817,106774
(defun flycheck-must-defer-check ()flycheck-must-defer-check2820,106877
(defun flycheck-deferred-check-p ()flycheck-deferred-check-p2837,107639
(defun flycheck-buffer-deferred ()flycheck-buffer-deferred2843,107808
(defun flycheck-clean-deferred-check ()flycheck-clean-deferred-check2847,107934
(defun flycheck-perform-deferred-syntax-check ()flycheck-perform-deferred-syntax-check2851,108064
(defun flycheck-may-enable-mode ()flycheck-may-enable-mode2859,108300
(defun flycheck-mode-on-safe ()flycheck-mode-on-safe2887,109358
(define-globalized-minor-mode global-flycheck-mode flycheck-modeglobal-flycheck-mode2896,109619
(defun flycheck-global-teardown ()flycheck-global-teardown2907,109983
(defmacro flycheck-error-with-buffer (err &rest forms)flycheck-error-with-buffer2979,112385
(defun flycheck-error-line-region (err)flycheck-error-line-region2988,112713
(defun flycheck-error-column-region (err)flycheck-error-column-region3012,113695
(defun flycheck-error-thing-region (thing err)flycheck-error-thing-region3044,115074
(defun flycheck-error-region-for-mode (err mode)flycheck-error-region-for-mode3062,115711
(defun flycheck-error-pos (err)flycheck-error-pos3096,116921
(defun flycheck-error-format-message-and-id (err)flycheck-error-format-message-and-id3106,117257
(defun flycheck-error-format (err &optional with-file-name)flycheck-error-format3117,117742
(defun flycheck-error-< (err1 err2)flycheck-error-<3136,118609
(defun flycheck-error-level-< (err1 err2)flycheck-error-level-<3150,119116
(defun flycheck-assert-error-list-p (errors)flycheck-assert-error-list-p3166,119737
(defvar-local flycheck-current-errors nilflycheck-current-errors3181,120231
(defun flycheck-report-current-errors (errors)flycheck-report-current-errors3184,120336
(defun flycheck-clear-errors ()flycheck-clear-errors3197,120875
(defun flycheck-fill-and-expand-error-file-names (errors directory)flycheck-fill-and-expand-error-file-names3202,121044
(defun flycheck-relevant-error-other-file-p (err)flycheck-relevant-error-other-file-p3218,121644
(defun flycheck-relevant-error-p (err)flycheck-relevant-error-p3226,121988
(defun flycheck-relevant-errors (errors)flycheck-relevant-errors3247,122777
(defun flycheck-related-errors (err &optional error-set)flycheck-related-errors3254,122993
(defvar-local flycheck-last-status-change 'not-checkedflycheck-last-status-change3272,123687
(defun flycheck-report-failed-syntax-check (&optional status)flycheck-report-failed-syntax-check3275,123794
(defun flycheck-report-status (status)flycheck-report-status3288,124245
(defun flycheck-mode-line-status-text (&optional status)flycheck-mode-line-status-text3322,125090
(defun flycheck-define-error-level (level &rest properties)flycheck-define-error-level3344,125868
(defun flycheck-error-level-p (level)flycheck-error-level-p3406,128370
(defun flycheck-error-level-severity (level)flycheck-error-level-severity3410,128501
(defun flycheck-error-level-compilation-level (level)flycheck-error-level-compilation-level3414,128633
(defun flycheck-error-level-overlay-category (level)flycheck-error-level-overlay-category3418,128772
(defun flycheck-error-level-fringe-bitmap (level)flycheck-error-level-fringe-bitmap3422,128908
(defun flycheck-error-level-fringe-face (level)flycheck-error-level-fringe-face3426,129048
(defun flycheck-error-level-error-list-face (level)flycheck-error-level-error-list-face3430,129169
(defun flycheck-error-level-make-fringe-icon (level side)flycheck-error-level-make-fringe-icon3434,129302
(defun flycheck-filter-errors (errors checker)flycheck-filter-errors3511,131706
(defun flycheck-sanitize-errors (errors)flycheck-sanitize-errors3521,132073
(defun flycheck-remove-error-file-names (file-name errors)flycheck-remove-error-file-names3544,132864
(defun flycheck-increment-error-columns (errors &optional offset)flycheck-increment-error-columns3558,133344
(defun flycheck-collapse-error-message-whitespace (errors)flycheck-collapse-error-message-whitespace3571,133768
(defun flycheck-dedent-error-messages (errors)flycheck-dedent-error-messages3582,134177
(defun flycheck-fold-include-levels (errors sentinel-message)flycheck-fold-include-levels3613,135449
(defun flycheck-dequalify-error-ids (errors)flycheck-dequalify-error-ids3669,138287
(defun flycheck-remove-error-ids (errors)flycheck-remove-error-ids3693,139235
(defun flycheck-fill-empty-line-numbers (errors)flycheck-fill-empty-line-numbers3698,139394
(defun flycheck-count-errors (errors)flycheck-count-errors3713,139755
(defun flycheck-has-max-errors-p (errors level)flycheck-has-max-errors-p3728,140251
(defun flycheck-has-max-current-errors-p (level)flycheck-has-max-current-errors-p3736,140618
(defun flycheck-has-errors-p (errors level)flycheck-has-errors-p3740,140792
(defun flycheck-has-current-errors-p (&optional level)flycheck-has-current-errors-p3744,140957
(defun flycheck-add-overlay (err)flycheck-add-overlay3754,141291
(defun flycheck-help-echo (_window object pos)flycheck-help-echo3787,142880
(defun flycheck-help-echo-all-error-messages (errs)flycheck-help-echo-all-error-messages3803,143551
(defun flycheck-filter-overlays (overlays)flycheck-filter-overlays3813,143881
(defun flycheck-overlays-at (pos)flycheck-overlays-at3817,144042
(defun flycheck-overlays-in (beg end)flycheck-overlays-in3821,144163
(defun flycheck-overlay-errors-at (pos)flycheck-overlay-errors-at3825,144305
(defun flycheck-overlay-errors-in (beg end)flycheck-overlay-errors-in3830,144501
(defvar-local flycheck-overlays-to-delete nilflycheck-overlays-to-delete3835,144718
(defun flycheck-delete-all-overlays ()flycheck-delete-all-overlays3839,144886
(defun flycheck-mark-all-overlays-for-deletion ()flycheck-mark-all-overlays-for-deletion3847,145162
(defun flycheck-delete-marked-overlays ()flycheck-delete-marked-overlays3853,145403
(defun flycheck-error-level-interesting-at-pos-p (pos)flycheck-error-level-interesting-at-pos-p3861,145667
(defun flycheck-error-level-interesting-p (err)flycheck-error-level-interesting-p3865,145883
(defun flycheck-next-error-pos (n &optional reset)flycheck-next-error-pos3873,146228
(defun flycheck-next-error-function (n reset)flycheck-next-error-function3919,148312
(defun flycheck-next-error (&optional n reset)flycheck-next-error3933,148836
(defun flycheck-previous-error (&optional n)flycheck-previous-error3947,149309
(defun flycheck-first-error (&optional n)flycheck-first-error3955,149555
(defconst flycheck-error-list-buffer "*Flycheck errors*"flycheck-error-list-buffer3965,149833
(defvar flycheck-error-list-mode-mapflycheck-error-list-mode-map3968,149940
(defun flycheck-error-list-make-last-column (message checker)flycheck-error-list-make-last-column3980,150531
(defconst flycheck-error-list-formatflycheck-error-list-format3990,150966
(defconst flycheck-error-list-padding 1flycheck-error-list-padding3999,151283
(defconst flycheck--error-list-msg-offsetflycheck--error-list-msg-offset4002,151357
(define-derived-mode flycheck-error-list-mode tabulated-list-modeflycheck-error-list-mode4012,151733
(defvar-local flycheck-error-list-source-buffer nilflycheck-error-list-source-buffer4032,152660
(defun flycheck-error-list-set-source (buffer)flycheck-error-list-set-source4038,152911
(defun flycheck-error-list-update-source ()flycheck-error-list-update-source4047,153318
(defun flycheck-error-list-check-source ()flycheck-error-list-check-source4054,153643
(define-button-type 'flycheck-error-listflycheck-error-list4062,153932
(defun flycheck-error-list-button-goto-error (button)flycheck-error-list-button-goto-error4066,154065
(define-button-type 'flycheck-error-list-explain-errorflycheck-error-list-explain-error4070,154209
(defun flycheck-error-list-button-explain-error (button)flycheck-error-list-button-explain-error4074,154362
(defsubst flycheck-error-list-make-cell (text &optional face help-echo type)flycheck-error-list-make-cell4078,154514
(defsubst flycheck-error-list-make-number-cell (number face)flycheck-error-list-make-number-cell4098,155365
(defun flycheck-error-list-make-entry (error)flycheck-error-list-make-entry4107,155671
(defun flycheck-flush-multiline-message (msg)flycheck-flush-multiline-message4146,157600
(defun flycheck-error-list-current-errors ()flycheck-error-list-current-errors4156,158065
(defun flycheck-error-list-entries ()flycheck-error-list-entries4162,158347
(defun flycheck-error-list-entry-< (entry1 entry2)flycheck-error-list-entry-<4168,158617
(defun flycheck-error-list-entry-level-< (entry1 entry2)flycheck-error-list-entry-level-<4174,158801
(defvar flycheck-error-list-mode-line-mapflycheck-error-list-mode-line-map4180,159006
(defun flycheck-error-list-propertized-source-name ()flycheck-error-list-propertized-source-name4187,159224
(defun flycheck-error-list-mouse-switch-to-source (event)flycheck-error-list-mouse-switch-to-source4201,159848
(defun flycheck-get-error-list-window-list (&optional all-frames)flycheck-get-error-list-window-list4210,160219
(defun flycheck-get-error-list-window (&optional all-frames)flycheck-get-error-list-window4218,160520
(defun flycheck-error-list-recenter-at (pos)flycheck-error-list-recenter-at4226,160815
(defun flycheck-error-list-refresh ()flycheck-error-list-refresh4234,161072
(defun flycheck-error-list-mode-line-filter-indicator ()flycheck-error-list-mode-line-filter-indicator4254,161953
(defun flycheck-error-list-set-filter (level)flycheck-error-list-set-filter4260,162184
(defun flycheck-error-list-reset-filter ()flycheck-error-list-reset-filter4275,162828
(defun flycheck-error-list-apply-filter (errors)flycheck-error-list-apply-filter4280,163006
(defun flycheck-error-list-goto-error (&optional pos)flycheck-error-list-goto-error4290,163476
(defun flycheck-jump-to-error (error)flycheck-jump-to-error4298,163724
(defun flycheck-jump-in-buffer (buffer error)flycheck-jump-in-buffer4312,164339
(defun flycheck-error-list-explain-error (&optional pos)flycheck-error-list-explain-error4328,164980
(defun flycheck-error-list-next-error-pos (pos &optional n)flycheck-error-list-next-error-pos4339,165436
(defun flycheck-error-list-previous-error (n)flycheck-error-list-previous-error4363,166343
(defun flycheck-error-list-next-error (n)flycheck-error-list-next-error4368,166512
(defvar-local flycheck-error-list-highlight-overlays nilflycheck-error-list-highlight-overlays4380,166997
(defun flycheck-error-list-highlight-errors (&optional preserve-pos)flycheck-error-list-highlight-errors4384,167176
(defun flycheck-list-errors ()flycheck-list-errors4429,169563
(defalias 'list-flycheck-errors 'flycheck-list-errors)list-flycheck-errors4446,170259
(defun flycheck-display-errors (errors)flycheck-display-errors4450,170361
(defvar-local flycheck-display-error-at-point-timer nilflycheck-display-error-at-point-timer4455,170560
(defun flycheck-cancel-error-display-error-at-point-timer ()flycheck-cancel-error-display-error-at-point-timer4458,170684
(defun flycheck-display-error-at-point ()flycheck-display-error-at-point4464,170963
(defun flycheck-display-error-at-point-soon ()flycheck-display-error-at-point-soon4475,171417
(defconst flycheck-error-message-buffer "*Flycheck error messages*"flycheck-error-message-buffer4485,171826
(defun flycheck-error-message-buffer ()flycheck-error-message-buffer4488,171955
(defun flycheck-may-use-echo-area-p ()flycheck-may-use-echo-area-p4495,172204
(defun flycheck-display-error-messages (errors)flycheck-display-error-messages4502,172478
(defun flycheck-display-error-messages-unless-error-list (errors)flycheck-display-error-messages-unless-error-list4519,173270
(defun flycheck-hide-error-buffer ()flycheck-hide-error-buffer4528,173652
(defun flycheck-copy-errors-as-kill (pos &optional formatter)flycheck-copy-errors-as-kill4542,174188
(defun flycheck-explain-error-at-point ()flycheck-explain-error-at-point4563,175181
(defconst flycheck-explain-error-buffer "*Flycheck error explanation*"flycheck-explain-error-buffer4583,176163
(defun flycheck-display-error-explanation (explanation)flycheck-display-error-explanation4586,176291
(defun flycheck-command-argument-p (arg)flycheck-command-argument-p4593,176543
(defun flycheck-compute-working-directory (checker)flycheck-compute-working-directory4625,177718
(defun flycheck-define-command-checker (symbol docstring &rest properties)flycheck-define-command-checker4648,178752
(defun flycheck-checker-default-executable (checker)flycheck-checker-default-executable4799,185195
(defun flycheck-checker-executable (checker)flycheck-checker-executable4803,185341
(defun flycheck-find-checker-executable (checker)flycheck-find-checker-executable4813,185768
(defun flycheck-checker-arguments (checker)flycheck-checker-arguments4820,186049
(defun flycheck-substitute-argument (arg checker)flycheck-substitute-argument4824,186185
(defun flycheck-checker-substituted-arguments (checker)flycheck-checker-substituted-arguments5007,194095
(defun flycheck--process-send-buffer-contents-chunked (process)flycheck--process-send-buffer-contents-chunked5017,194478
(defvar flycheck-chunked-process-inputflycheck-chunked-process-input5030,195015
(defun flycheck-process-send-buffer (process)flycheck-process-send-buffer5048,195778
(defun flycheck-start-command-checker (checker callback)flycheck-start-command-checker5066,196478
(defun flycheck-interrupt-command-checker (_checker process)flycheck-interrupt-command-checker5119,199405
(defun flycheck-command-checker-print-doc (checker)flycheck-command-checker-print-doc5125,199618
(defun flycheck-verify-command-checker (checker)flycheck-verify-command-checker5157,200906
(defun flycheck-receive-checker-output (process output)flycheck-receive-checker-output5185,202192
(defun flycheck-get-output (process)flycheck-get-output5189,202359
(defun flycheck-handle-signal (process _event)flycheck-handle-signal5195,202631
(defun flycheck-finish-checker-processflycheck-finish-checker-process5221,203728
(defmacro flycheck-def-executable-var (checker default-executable)flycheck-def-executable-var5252,205196
(defun flycheck-set-checker-executable (checker &optional executable)flycheck-set-checker-executable5277,206168
(defun flycheck-register-config-file-var (var checkers)flycheck-register-config-file-var5315,207977
(defmacro flycheck-def-config-file-var (symbol checker &optional file-nameflycheck-def-config-file-var5325,208313
(defun flycheck-locate-config-file (filename checker)flycheck-locate-config-file5361,209788
(defun flycheck-locate-config-file-by-path (filepath _checker)flycheck-locate-config-file-by-path5375,210289
(defun flycheck-locate-config-file-ancestor-directories (filename _checker)flycheck-locate-config-file-ancestor-directories5388,210795
(defun flycheck-locate-config-file-home (filename _checker)flycheck-locate-config-file-home5401,211340
(defun flycheck-register-option-var (var checkers)flycheck-register-option-var5416,211916
(defmacro flycheck-def-option-var (symbol init-value checkers docstringflycheck-def-option-var5428,212338
(defun flycheck-option-int (value)flycheck-option-int5457,213419
(defun flycheck-option-symbol (value)flycheck-option-symbol5464,213622
(defun flycheck-option-comma-separated-list (value &optional separator filter)flycheck-option-comma-separated-list5471,213817
(defmacro flycheck-def-args-var (symbol checkers &rest custom-args)flycheck-def-args-var5491,214603
(defun flycheck-checker-pattern-to-error-regexp (pattern)flycheck-checker-pattern-to-error-regexp5513,215389
(defun flycheck-checker-compilation-error-regexp-alist (checker)flycheck-checker-compilation-error-regexp-alist5523,215765
(defun flycheck-checker-shell-command (checker)flycheck-checker-shell-command5531,216115
(defun flycheck-compile-name (_name)flycheck-compile-name5560,217475
(defun flycheck-compile (checker)flycheck-compile5566,217629
(defun flycheck-parse-output (output checker buffer)flycheck-parse-output5598,219127
(defun flycheck-fix-error-filename (err buffer-files cwd)flycheck-fix-error-filename5607,219474
(defun flycheck-parse-xml-region (beg end)flycheck-parse-xml-region5630,220457
(defun flycheck-parse-xml-region-with-fallback (beg end)flycheck-parse-xml-region-with-fallback5639,220792
(defvar flycheck-xml-parser 'flycheck-parse-xml-region-with-fallbackflycheck-xml-parser5652,221412
(defun flycheck-parse-xml-string (xml)flycheck-parse-xml-string5658,221635
(defun flycheck-parse-checkstyle (output checker buffer)flycheck-parse-checkstyle5670,222119
(defun flycheck-parse-cppcheck (output checker buffer)flycheck-parse-cppcheck5707,223632
(defun flycheck-parse-phpmd (output checker buffer)flycheck-parse-phpmd5751,225507
(defun flycheck-parse-reek (output checker buffer)flycheck-parse-reek5781,226638
(defun flycheck-parse-tslint (output checker buffer)flycheck-parse-tslint5805,227360
(defun flycheck-parse-rust-collect-spans (span)flycheck-parse-rust-collect-spans5828,228209
(defun flycheck-parse-rustc-diagnostic (diagnostic checker buffer)flycheck-parse-rustc-diagnostic5845,228887
(defun flycheck-parse-json (output)flycheck-parse-json5971,234086
(defun flycheck-parse-rustc (output checker buffer)flycheck-parse-rustc5992,234754
(defun flycheck-parse-cargo-rustc (output checker buffer)flycheck-parse-cargo-rustc6009,235509
(defun flycheck-get-regexp (patterns)flycheck-get-regexp6034,236629
(defun flycheck-tokenize-output-with-patterns (output patterns)flycheck-tokenize-output-with-patterns6039,236829
(defun flycheck-try-parse-error-with-pattern (err pattern checker)flycheck-try-parse-error-with-pattern6057,237503
(defun flycheck-parse-error-with-patterns (err patterns checker)flycheck-parse-error-with-patterns6081,238414
(defun flycheck-parse-with-patterns (output checker buffer)flycheck-parse-with-patterns6096,239000
(defmacro flycheck-define-checker (symbol docstring &rest properties)flycheck-define-checker6116,239795
(defun flycheck-c/c++-quoted-include-directory ()flycheck-c/c++-quoted-include-directory6393,250204
(defconst flycheck-stylelint-args '("--formatter" "json")flycheck-stylelint-args6835,268368
(defconst flycheck-stylelint-error-reflycheck-stylelint-error-re6851,268871
(defun flycheck-parse-stylelint (output checker buffer)flycheck-parse-stylelint6855,269004
(defun flycheck-parse-stylelint-json (output checker buffer)flycheck-parse-stylelint-json6881,269947
(defconst flycheck-d-module-reflycheck-d-module-re6977,273561
(defun flycheck-d-base-directory ()flycheck-d-base-directory6984,273805
(defconst flycheck-this-emacs-executableflycheck-this-emacs-executable7050,276350
(defconst flycheck-emacs-args '("-Q" "--batch")flycheck-emacs-args7054,276497
(defmacro flycheck-prepare-emacs-lisp-form (&rest body)flycheck-prepare-emacs-lisp-form7057,276590
(defconst flycheck-emacs-lisp-check-formflycheck-emacs-lisp-check-form7075,277392
(defconst flycheck-emacs-lisp-package-initialize-formflycheck-emacs-lisp-package-initialize-form7134,279918
(defun flycheck-option-emacs-lisp-package-initialize (value)flycheck-option-emacs-lisp-package-initialize7140,280135
(defun flycheck-option-emacs-lisp-package-user-dir (value)flycheck-option-emacs-lisp-package-user-dir7172,281677
(defun flycheck-option-emacs-lisp-check-declare (value)flycheck-option-emacs-lisp-check-declare7186,282336
(defconst flycheck-emacs-lisp-checkdoc-formflycheck-emacs-lisp-checkdoc-form7262,286074
(defconst flycheck-emacs-lisp-checkdoc-variablesflycheck-emacs-lisp-checkdoc-variables7293,287572
(defun flycheck-emacs-lisp-checkdoc-variables-form ()flycheck-emacs-lisp-checkdoc-variables-form7306,288035
(defun contains-rebar-config (dir-name)contains-rebar-config7375,290857
(defun locate-rebar3-project-root (file-name &optional prev-file-name acc)locate-rebar3-project-root7380,291048
(defun flycheck-rebar3-project-root (&optional _checker)flycheck-rebar3-project-root7403,291868
(defun flycheck-option-gfortran-layout (value)flycheck-option-gfortran-layout7487,294978
(defconst flycheck-haskell-module-reflycheck-haskell-module-re7844,308958
(defvar flycheck-haskell-ghc-cache-directory nilflycheck-haskell-ghc-cache-directory7913,311614
(defun flycheck-haskell-ghc-cache-directory ()flycheck-haskell-ghc-cache-directory7916,311707
(defun flycheck--locate-dominating-file-matching (directory regexp)flycheck--locate-dominating-file-matching7925,312081
(defun flycheck-haskell--find-default-directory (checker)flycheck-haskell--find-default-directory7935,312420
(defun flycheck-eslint-config-exists-p ()flycheck-eslint-config-exists-p8209,323241
(defun flycheck-parse-eslint (output checker buffer)flycheck-parse-eslint8216,323595
(defun flycheck-eslint--find-working-directory (_checker)flycheck-eslint--find-working-directory8240,324373
(defun flycheck-proselint-parse-errors (output checker buffer)flycheck-proselint-parse-errors8617,338527
(defun flycheck-puppet-lint-disabled-arg-name (check)flycheck-puppet-lint-disabled-arg-name8745,343407
(defun flycheck-python-find-module (checker module)flycheck-python-find-module8773,344749
(defun flycheck-python-needs-module-p (checker)flycheck-python-needs-module-p8784,345292
(defun flycheck-python-verify-module (checker module)flycheck-python-verify-module8793,345736
(defun flycheck-python-module-args (checker module-name)flycheck-python-module-args8804,346299
(defun flycheck-flake8-fix-error-level (err)flycheck-flake8-fix-error-level8875,349412
(defun flycheck-r-has-lintr (R)flycheck-r-has-lintr9040,356165
(defun flycheck-racket-has-expand-p (checker)flycheck-racket-has-expand-p9086,358046
(defun flycheck-locate-sphinx-source-directory ()flycheck-locate-sphinx-source-directory9273,364747
(defun flycheck-ruby--find-project-root (_checker)flycheck-ruby--find-project-root9329,367004
(defun flycheck-rust-error-explainer (error)flycheck-rust-error-explainer9553,375850
(defun flycheck-rust-error-filter (errors)flycheck-rust-error-filter9559,376123
(defun flycheck-rust-manifest-directory ()flycheck-rust-manifest-directory9578,376825
(defun flycheck-rust-cargo-metadata ()flycheck-rust-cargo-metadata9588,377241
(defun flycheck-rust-cargo-workspace-root ()flycheck-rust-cargo-workspace-root9595,377541
(defun flycheck-rust-cargo-has-command-p (command)flycheck-rust-cargo-has-command-p9603,377807
(defun flycheck-rust-valid-crate-type-p (crate-type)flycheck-rust-valid-crate-type-p9611,378164
(defvar flycheck-sass-scss-cache-directory nilflycheck-sass-scss-cache-directory9734,383525
(defun flycheck-sass-scss-cache-location ()flycheck-sass-scss-cache-location9737,383621
(defconst flycheck-scss-lint-checkstyle-reflycheck-scss-lint-checkstyle-re9912,390413
(defun flycheck-parse-scss-lint (output checker buffer)flycheck-parse-scss-lint9916,390596
(defconst flycheck-shellcheck-supported-shells '(bash ksh88 sh)flycheck-shellcheck-supported-shells10091,396918

elpa/flycheck-20180610.1331/flycheck-ert.el,2233
(defvar flycheck-ert--resource-directory nilflycheck-ert--resource-directory91,3161
(defmacro flycheck-ert-with-temp-buffer (&rest body)flycheck-ert-with-temp-buffer97,3302
(defmacro flycheck-ert-with-file-buffer (file-name &rest body)flycheck-ert-with-file-buffer113,3958
(defmacro flycheck-ert-with-help-buffer (&rest body)flycheck-ert-with-help-buffer131,4624
(defmacro flycheck-ert-with-global-mode (&rest body)flycheck-ert-with-global-mode141,4957
(defmacro flycheck-ert-with-env (env &rest body)flycheck-ert-with-env153,5334
(defun flycheck-ert-resource-filename (resource-file)flycheck-ert-resource-filename170,5848
(defmacro flycheck-ert-with-resource-buffer (resource-file &rest body)flycheck-ert-with-resource-buffer177,6107
(defun flycheck-ert-initialize (resource-dir)flycheck-ert-initialize190,6496
(defmacro flycheck-ert-def-checker-test (checker language nameflycheck-ert-def-checker-test216,7519
(defun flycheck-ert-syntax-check-timed-out-p (result)flycheck-ert-syntax-check-timed-out-p273,10040
(defvar-local flycheck-ert-syntax-checker-finished nilflycheck-ert-syntax-checker-finished284,10347
(defconst flycheck-ert-checker-wait-time 10flycheck-ert-checker-wait-time290,10567
(define-error 'flycheck-ert-syntax-check-timed-out "Syntax check timed out.")flycheck-ert-syntax-check-timed-out296,10777
(defun flycheck-ert-wait-for-syntax-checker ()flycheck-ert-wait-for-syntax-checker298,10856
(defun flycheck-ert-buffer-sync ()flycheck-ert-buffer-sync309,11369
(defun flycheck-ert-ensure-clear ()flycheck-ert-ensure-clear323,12060
(defun flycheck-error-without-group (err)flycheck-error-without-group335,12410
(defun flycheck-ert-should-overlay (error)flycheck-ert-should-overlay341,12609
(defun flycheck-ert-should-errors (&rest errors)flycheck-ert-should-errors375,14400
(define-error 'flycheck-ert-suspicious-checker "Suspicious state from checker")flycheck-ert-suspicious-checker405,15845
(defun flycheck-ert-should-syntax-check (resource-file modes &rest errors)flycheck-ert-should-syntax-check407,15926
(defun flycheck-ert-at-nth-error (n)flycheck-ert-at-nth-error457,18176
(defun flycheck-ert-explain--at-nth-error (n)flycheck-ert-explain--at-nth-error468,18636

elpa/flycheck-20180610.1331/flycheck-buttercup.el,98
(defun flycheck-buttercup-format-error-list (errors)flycheck-buttercup-format-error-list49,1608

elpa/flycheck-20180610.1331/flycheck-pkg.el,87
(define-package "flycheck" "20180610.1331" "On-the-fly syntax checking""flycheck"1,0

elpa/flycheck-20180610.1331/flycheck-autoloads.el,65
(defvar global-flycheck-mode nil "\global-flycheck-mode37,1037

elpa/mozc-20180101.0/mozc-autoloads.el,2171
(defvar mozc-mode-map (let ((map (make-sparse-keymap))) (prog1 map (mapc (lambda (command) (mapc (lambda (key-sequence) (and (= (length key-sequence) 1) (integerp (aref key-sequence 0)) (define-key map key-sequence command))) (where-is-internal command global-map))) '(execute-extended-command toggle-input-method)) (mapc (lambda (event) (define-key map (vector event) nil)) '(delete-frame iconify-frame make-frame-visible select-window switch-frame)) (define-key map [t] #'mozc-handle-event))) "\mozc-mode-map12,385
(defvar mozc-mode nil "\mozc-mode15,919
(defvar mozc-keymap-kana-106jp (mozc-keymap-make-keymap-from-flat-list '(49 "ぬ" 50 "ふ" 51 "あ" 52 "う" 53 "え" 54 "お" 55 "や" 56 "ゆ" 57 "よ" 48 "わ" 45 "ほ" 94 "へ" 124 "ー" 113 "た" 119 "て" 101 "い" 114 "す" 116 "か" 121 "ん" 117 "な" 105 "に" 111 "ら" 112 "せ" 64 "゛" 91 "゜" 97 "ち" 115 "と" 100 "し" 102 "は" 103 "き" 104 "く" 106 "ま" 107 "の" 108 "り" 59 "れ" 58 "け" 93 "む" 122 "つ" 120 "さ" 99 "そ" 118 "ひ" 98 "こ" 110 "み" 109 "も" 44 "ね" 46 "る" 47 "め" 92 "ろ" 35 "ぁ" 69 "ぃ" 36 "ぅ" 37 "ぇ" 38 "ぉ" 39 "ゃ" 40 "ゅ" 41 "ょ" 126 "を" 90 "っ" 60 "、" 62 "。" 63 "・" 123 "「" 125 "」" 80 "『" 43 "』" 95 "ろ" 70 "ゎ" 84 "ヵ" 42 "ヶ")) "\mozc-keymap-kana-106jp113,4348
(defvar mozc-keymap-kana-101us (mozc-keymap-make-keymap-from-flat-list '(49 "ぬ" 50 "ふ" 51 "あ" 52 "う" 53 "え" 54 "お" 55 "や" 56 "ゆ" 57 "よ" 48 "わ" 45 "ほ" 61 "へ" 96 "ろ" 113 "た" 119 "て" 101 "い" 114 "す" 116 "か" 121 "ん" 117 "な" 105 "に" 111 "ら" 112 "せ" 91 "゛" 93 "゜" 92 "む" 97 "ち" 115 "と" 100 "し" 102 "は" 103 "き" 104 "く" 106 "ま" 107 "の" 108 "り" 59 "れ" 39 "け" 122 "つ" 120 "さ" 99 "そ" 118 "ひ" 98 "こ" 110 "み" 109 "も" 44 "ね" 46 "る" 47 "め" 35 "ぁ" 69 "ぃ" 36 "ぅ" 37 "ぇ" 94 "ぉ" 38 "ゃ" 42 "ゅ" 40 "ょ" 41 "を" 90 "っ" 60 "、" 62 "。" 63 "・" 123 "「" 125 "」" 80 "『" 58 "』" 95 "ー" 124 "ー" 70 "ゎ" 86 "ゐ" 43 "ゑ" 84 "ヵ" 34 "ヶ")) "\mozc-keymap-kana-101us116,5146
(defvar mozc-keymap-kana mozc-keymap-kana-106jp "\mozc-keymap-kana119,5961

elpa/mozc-20180101.0/mozc-pkg.el,101
(define-package "mozc" "20180101.0" "minor mode to input Japanese with Mozc" (quote nil))"mozc"1,0

elpa/mozc-20180101.0/mozc.el,11253
(defgroup mozc nilmozc130,4881
(defgroup mozc-faces nilmozc-faces134,4957
(defvar mozc-mode-mapmozc-mode-map143,5079
(defconst mozc-empty-map (make-sparse-keymap)mozc-empty-map177,6569
(defsubst mozc-enable-keymap ()mozc-enable-keymap181,6721
(defsubst mozc-disable-keymap ()mozc-disable-keymap186,6859
(defvar mozc-mode nilmozc-mode197,7067
(defvar mozc-mode-hook nilmozc-mode-hook202,7221
(defun mozc-mode (&optional arg)mozc-mode207,7338
(defun mozc-abort ()mozc-abort278,9655
(defcustom mozc-mode-string nilmozc-mode-string283,9759
(defmacro mozc-with-undo-list-unchanged (&rest body)mozc-with-undo-list-unchanged300,10291
(defmacro mozc-with-buffer-modified-p-unchanged (&rest body)mozc-with-buffer-modified-p-unchanged306,10513
(defmacro mozc-characterp (object)mozc-characterp314,10843
(defun mozc-handle-event (event)mozc-handle-event327,11176
(defun mozc-send-key-event (event)mozc-send-key-event376,13333
(defun mozc-key-event-to-key-and-modifiers (event)mozc-key-event-to-key-and-modifiers389,13922
(defun mozc-fall-back-on-default-binding (last-event)mozc-fall-back-on-default-binding442,16016
(defun mozc-clean-up-session ()mozc-clean-up-session474,17259
(defun mozc-clean-up-changes-on-buffer ()mozc-clean-up-changes-on-buffer480,17474
(defvar mozc-buffer-placeholder-char ?*mozc-buffer-placeholder-char490,17699
(defmacro mozc-buffer-placeholder-setq (symbol &rest args)mozc-buffer-placeholder-setq493,17808
(defmacro mozc-buffer-placeholder-setq-char (symbol &optional character count)mozc-buffer-placeholder-setq-char501,18115
(defmacro mozc-buffer-placeholder-push (symbol &rest args)mozc-buffer-placeholder-push510,18524
(defmacro mozc-buffer-placeholder-push-char (symbol &optional character count)mozc-buffer-placeholder-push-char516,18775
(defmacro mozc-buffer-placeholder-delete (symbol)mozc-buffer-placeholder-delete523,19128
(defmacro mozc-buffer-placeholder-delete-all (symbol)mozc-buffer-placeholder-delete-all530,19344
(defun mozc-buffer-insert (&rest args)mozc-buffer-insert537,19561
(defun mozc-buffer-insert-char (&optional character count)mozc-buffer-insert-char552,20101
(defun mozc-buffer-delete-region (region)mozc-buffer-delete-region565,20646
(defun mozc-buffer-delete-all-regions (regions)mozc-buffer-delete-all-regions572,20870
(defvar mozc-cached-header-line-height nilmozc-cached-header-line-height581,21091
(defun mozc-posn-at-point (&optional pos window)mozc-posn-at-point584,21174
(defsubst mozc-posn-col (position)mozc-posn-col626,22966
(defsubst mozc-posn-row (position)mozc-posn-row630,23077
(defsubst mozc-posn-x (position)mozc-posn-x634,23185
(defsubst mozc-posn-y (position)mozc-posn-y638,23289
(defsubst mozc-window-width (&optional window)mozc-window-width661,24339
(defun mozc-header-line-height ()mozc-header-line-height667,24555
(defun mozc-clear-cached-header-line-height ()mozc-clear-cached-header-line-height674,24798
(defvar mozc-preedit-in-session-flag nilmozc-preedit-in-session-flag682,24955
(defvar mozc-preedit-point-origin nilmozc-preedit-point-origin686,25117
(defvar mozc-preedit-posn-origin nilmozc-preedit-posn-origin690,25275
(defvar mozc-preedit-style nilmozc-preedit-style694,25440
(defun mozc-preedit-init ()mozc-preedit-init700,25630
(defun mozc-preedit-clean-up ()mozc-preedit-clean-up710,25991
(defun mozc-preedit-clear ()mozc-preedit-clear718,26267
(defun mozc-preedit-update (preedit &optional candidates)mozc-preedit-update725,26532
(defvar mozc-preedit-overlay nilmozc-preedit-overlay761,28173
(defvar mozc-preedit-overlay-placeholder-region nilmozc-preedit-overlay-placeholder-region765,28299
(defun mozc-preedit-overlay-make-overlay (origin)mozc-preedit-overlay-make-overlay771,28587
(defun mozc-preedit-overlay-put-text (text)mozc-preedit-overlay-put-text784,29166
(defun mozc-preedit-overlay-delete-overlay ()mozc-preedit-overlay-delete-overlay788,29327
(defun mozc-preedit-make-text (preedit &optional decor-left decor-rightmozc-preedit-make-text795,29617
(defun mozc-preedit-make-segmented-text (preeditmozc-preedit-make-segmented-text814,30591
(defun mozc-preedit-put-cursor-at (text cursor-pos)mozc-preedit-put-cursor-at837,31570
(defface mozc-preedit-selected-facemozc-preedit-selected-face848,32068
(defface mozc-preedit-facemozc-preedit-face858,32423
(defcustom mozc-candidate-style 'overlaymozc-candidate-style872,32737
(defvar mozc-candidate-dispatch-tablemozc-candidate-dispatch-table882,33152
(defun mozc-candidate-dispatch (method &rest args)mozc-candidate-dispatch894,33732
(defun mozc-candidate-clean-up ()mozc-candidate-clean-up909,34395
(defun mozc-candidate-clear ()mozc-candidate-clear913,34513
(defun mozc-candidate-update (candidates)mozc-candidate-update919,34750
(defvar mozc-cand-echo-area-placeholder-region nilmozc-cand-echo-area-placeholder-region928,34983
(defun mozc-cand-echo-area-clean-up ()mozc-cand-echo-area-clean-up932,35175
(defun mozc-cand-echo-area-clear ()mozc-cand-echo-area-clear936,35290
(defun mozc-cand-echo-area-update (candidates)mozc-cand-echo-area-update940,35432
(defun mozc-cand-echo-area-make-contents (candidates)mozc-cand-echo-area-make-contents959,36197
(defface mozc-cand-echo-area-focused-facemozc-cand-echo-area-focused-face997,37924
(defface mozc-cand-echo-area-candidate-facemozc-cand-echo-area-candidate-face1007,38311
(defface mozc-cand-echo-area-shortcut-facemozc-cand-echo-area-shortcut-face1017,38643
(defface mozc-cand-echo-area-annotation-facemozc-cand-echo-area-annotation-face1025,38948
(defface mozc-cand-echo-area-stats-facemozc-cand-echo-area-stats-face1033,39253
(defvar mozc-cand-overlay-placeholder-regions nilmozc-cand-overlay-placeholder-regions1048,39714
(defvar mozc-cand-overlay-overlays nilmozc-cand-overlay-overlays1052,39905
(defsubst mozc-cand-overlay-make-overlay (beg end)mozc-cand-overlay-make-overlay1056,40061
(defsubst mozc-cand-overlay-put-text (overlay text &optional face)mozc-cand-overlay-put-text1064,40355
(defsubst mozc-cand-overlay-put-space (overlay width &optional face)mozc-cand-overlay-put-space1071,40621
(defun mozc-cand-overlay-delete-overlays ()mozc-cand-overlay-delete-overlays1078,40946
(defun mozc-cand-overlay-clean-up ()mozc-cand-overlay-clean-up1083,41141
(defun mozc-cand-overlay-clear ()mozc-cand-overlay-clear1088,41300
(defun mozc-cand-overlay-update (candidates)mozc-cand-overlay-update1095,41574
(defun mozc-cand-overlay-make-contents (candidates)mozc-cand-overlay-make-contents1111,42179
(defun mozc-cand-overlay-draw (contents)mozc-cand-overlay-draw1143,43747
(defun mozc-cand-overlay-estimate-max-width (contents &optional space-width)mozc-cand-overlay-estimate-max-width1182,45532
(defun mozc-cand-overlay-estimate-widthmozc-cand-overlay-estimate-width1206,46666
(defun mozc-cand-overlay-draw-internal (contents x width relative-start-rowmozc-cand-overlay-draw-internal1230,47692
(defun mozc-cand-overlay-insert-placeholder-newlines (contents-lines)mozc-cand-overlay-insert-placeholder-newlines1273,49737
(defun mozc-cand-overlay-draw-row (left-text right-text face x width)mozc-cand-overlay-draw-row1283,50218
(defface mozc-cand-overlay-focused-facemozc-cand-overlay-focused-face1367,54536
(defface mozc-cand-overlay-odd-facemozc-cand-overlay-odd-face1377,54925
(defface mozc-cand-overlay-even-facemozc-cand-overlay-even-face1387,55307
(defface mozc-cand-overlay-footer-facemozc-cand-overlay-footer-face1397,55691
(defvar mozc-session-process nilmozc-session-process1411,56113
(defvar mozc-session-id nilmozc-session-id1418,56478
(defvar mozc-session-seq 0mozc-session-seq1424,56692
(defun mozc-session-create (&optional forcep)mozc-session-create1432,57009
(defun mozc-session-connect-to-helper-process ()mozc-session-connect-to-helper-process1447,57441
(defun mozc-session-delete ()mozc-session-delete1455,57802
(defun mozc-session-sendkey (key-list)mozc-session-sendkey1464,58153
(defun mozc-session-execute-command (command &rest args)mozc-session-execute-command1475,58649
(defun mozc-session-recv-corresponding-response (seq)mozc-session-recv-corresponding-response1511,60102
(defun mozc-session-seq-inc ()mozc-session-seq-inc1524,60603
(defvar mozc-config-protobuf nilmozc-config-protobuf1537,60965
(defvar mozc-helper-program-name "mozc_emacs_helper"mozc-helper-program-name1544,61138
(defvar mozc-helper-program-args '("--suppress_stderr")mozc-helper-program-args1549,61350
(defvar mozc-helper-process-timeout-sec 1mozc-helper-process-timeout-sec1552,61462
(defvar mozc-helper-process nilmozc-helper-process1555,61566
(defvar mozc-helper-process-version nilmozc-helper-process-version1558,61642
(defvar mozc-helper-process-message-queue nilmozc-helper-process-message-queue1561,61728
(defvar mozc-helper-process-string-buf nilmozc-helper-process-string-buf1564,61827
(defun mozc-helper-process ()mozc-helper-process1570,62095
(defun mozc-helper-process-start (&optional forcep)mozc-helper-process-start1574,62198
(defun mozc-helper-process-recv-greeting (proc)mozc-helper-process-recv-greeting1611,64019
(defun mozc-helper-process-stop ()mozc-helper-process-stop1632,64877
(defun mozc-helper-process-sentinel (proc message)mozc-helper-process-sentinel1640,65197
(defun mozc-helper-process-filter (proc output-string)mozc-helper-process-filter1649,65555
(defun mozc-helper-process-send-sexpr (&rest args)mozc-helper-process-send-sexpr1675,66917
(defun mozc-helper-process-recv-sexpr ()mozc-helper-process-recv-sexpr1682,67213
(defun mozc-helper-process-recv-response ()mozc-helper-process-recv-response1707,68343
(defun mozc-protobuf-get (alist key &rest keys)mozc-protobuf-get1721,68752
(defun mozc-split-at-last (list &optional n)mozc-split-at-last1742,69450
(defun mozc-string-match-p (regexp string &optional start)mozc-string-match-p1757,70055
(defvar mozc-keymap-preedit-method-to-keymap-name-mapmozc-keymap-preedit-method-to-keymap-name-map1770,70451
(defun mozc-keymap-current-active-keymap ()mozc-keymap-current-active-keymap1776,70681
(defun mozc-keymap-make-keymap ()mozc-keymap-make-keymap1788,71148
(defun mozc-keymap-make-keymap-from-flat-list (list)mozc-keymap-make-keymap-from-flat-list1793,71285
(defun mozc-keymap-fill-entries-from-flat-list (keymap list)mozc-keymap-fill-entries-from-flat-list1799,71565
(defun mozc-keymap-get-entry (keymap keycode &optional default)mozc-keymap-get-entry1809,72036
(defun mozc-keymap-put-entry (keymap keycode mapped-string)mozc-keymap-put-entry1820,72561
(defun mozc-keymap-remove-entry (keymap keycode)mozc-keymap-remove-entry1831,73035
(defvar mozc-keymap-kana-106jpmozc-keymap-kana-106jp1839,73363
(defvar mozc-keymap-kana-101usmozc-keymap-kana-101us1883,75288
(defvar mozc-keymap-kana mozc-keymap-kana-106jpmozc-keymap-kana1925,77244
(defmacro mozc-define-error (symbol-name message &rest conditions)mozc-define-error1932,77360
(defun mozc-leim-activate (input-method)mozc-leim-activate1965,78584
(defun mozc-leim-deactivate ()mozc-leim-deactivate1975,78975
(defcustom mozc-leim-title "[Mozc]"mozc-leim-title1979,79072
(defun mozc-leim-register-input-method ()mozc-leim-register-input-method1986,79344

elpa/company-20180501.11/company-dabbrev.el,1381
(defgroup company-dabbrev nilcompany-dabbrev31,951
(defcustom company-dabbrev-other-buffers 'allcompany-dabbrev-other-buffers35,1038
(defcustom company-dabbrev-ignore-buffers "\\`[ *]"company-dabbrev-ignore-buffers43,1436
(defcustom company-dabbrev-time-limit .1company-dabbrev-time-limit50,1721
(defcustom company-dabbrev-char-regexp "\\sw"company-dabbrev-char-regexp55,1921
(defcustom company-dabbrev-ignore-case 'keep-prefixcompany-dabbrev-ignore-case59,2063
(defcustom company-dabbrev-downcase 'case-replacecompany-dabbrev-downcase68,2494
(defcustom company-dabbrev-minimum-length 4company-dabbrev-minimum-length82,2996
(defcustom company-dabbrev-ignore-invisible nilcompany-dabbrev-ignore-invisible88,3240
(defmacro company-dabbrev--time-limit-while (test start limit freq &rest body)company-dabbrev--time-limit-while93,3383
(defun company-dabbrev--make-regexp ()company-dabbrev--make-regexp105,3850
(defun company-dabbrev--search-buffer (regexp pos symbols start limitcompany-dabbrev--search-buffer108,3945
(defun company-dabbrev--search (regexp &optional limit other-buffer-modescompany-dabbrev--search147,5890
(defun company-dabbrev--prefix ()company-dabbrev--prefix169,6998
(defun company-dabbrev--filter (prefix candidates)company-dabbrev--filter177,7322
(defun company-dabbrev (command &optional arg &rest ignored)company-dabbrev182,7493

elpa/company-20180501.11/company-tng.el,517
(defvar-local company-tng--overlay nil)company-tng--overlay72,2754
(defun company-tng-frontend (command)company-tng-frontend75,2810
(defun company-tng-configure-default ()company-tng-configure-default109,4413
(defun company-tng--allow-unselected (&optional arg)company-tng--allow-unselected123,5066
(defun company-tng--adjust-tooltip-highlight (args)company-tng--adjust-tooltip-highlight155,6227
(defun company-tng--supress-post-completion (command &rest args)company-tng--supress-post-completion163,6549

elpa/company-20180501.11/company-etags.el,773
(defgroup company-etags nilcompany-etags32,922
(defcustom company-etags-use-main-table-list tcompany-etags-use-main-table-list36,1004
(defcustom company-etags-ignore-case nilcompany-etags-ignore-case43,1274
(defcustom company-etags-everywhere nilcompany-etags-everywhere48,1427
(defvar company-etags-modes '(prog-mode c-mode objc-mode c++-mode java-modecompany-etags-modes57,1804
(defvar-local company-etags-buffer-table 'unknown)company-etags-buffer-table60,1956
(defun company-etags-find-table ()company-etags-find-table62,2008
(defun company-etags-buffer-table ()company-etags-buffer-table71,2334
(defun company-etags--candidates (prefix)company-etags--candidates77,2594
(defun company-etags (command &optional arg &rest ignored)company-etags88,3020

elpa/company-20180501.11/company-nxml.el,1027
(defvar rng-open-elements)rng-open-elements32,963
(defvar rng-validate-mode)rng-validate-mode33,990
(defvar rng-in-attribute-regex)rng-in-attribute-regex34,1017
(defvar rng-in-attribute-value-regex)rng-in-attribute-value-regex35,1049
(defconst company-nxml-token-regexpcompany-nxml-token-regexp43,1462
(defvar company-nxml-in-attribute-value-regexpcompany-nxml-in-attribute-value-regexp46,1544
(defvar company-nxml-in-tag-name-regexpcompany-nxml-in-tag-name-regexp55,1859
(defun company-nxml-all-completions (prefix alist)company-nxml-all-completions59,2021
(defmacro company-nxml-prepared (&rest body)company-nxml-prepared72,2503
(defun company-nxml-tag (command &optional arg &rest ignored)company-nxml-tag79,2747
(defun company-nxml-attribute (command &optional arg &rest ignored)company-nxml-attribute89,3142
(defun company-nxml-attribute-value (command &optional arg &rest ignored)company-nxml-attribute-value102,3723
(defun company-nxml (command &optional arg &rest ignored)company-nxml124,4855

elpa/company-20180501.11/company-eclim.el,1239
(defgroup company-eclim nilcompany-eclim37,1253
(defun company-eclim-executable-find ()company-eclim-executable-find41,1335
(defcustom company-eclim-executablecompany-eclim-executable50,1782
(defcustom company-eclim-auto-save tcompany-eclim-auto-save57,1981
(defvar-local company-eclim--project-dir 'unknown)company-eclim--project-dir65,2317
(defvar-local company-eclim--project-name nil)company-eclim--project-name67,2369
(defvar json-array-type)json-array-type70,2453
(defun company-eclim--call-process (&rest args)company-eclim--call-process72,2479
(defun company-eclim--project-list ()company-eclim--project-list87,3035
(defun company-eclim--project-dir ()company-eclim--project-dir90,3122
(defun company-eclim--project-name ()company-eclim--project-name99,3454
(defun company-eclim--candidates (prefix)company-eclim--candidates108,3843
(defun company-eclim--search-point (prefix)company-eclim--search-point137,5234
(defun company-eclim--meta (candidate)company-eclim--meta142,5372
(defun company-eclim--annotation (candidate)company-eclim--annotation145,5453
(defun company-eclim--prefix ()company-eclim--prefix150,5654
(defun company-eclim (command &optional arg &rest ignored)company-eclim158,5914

elpa/company-20180501.11/company-semantic.el,1412
(defvar semantic-idle-summary-function)semantic-idle-summary-function32,946
(defgroup company-semantic nilcompany-semantic44,1607
(defcustom company-semantic-metadata-function 'company-semantic-summary-and-doccompany-semantic-metadata-function48,1697
(defcustom company-semantic-begin-after-member-access tcompany-semantic-begin-after-member-access52,1859
(defcustom company-semantic-insert-arguments tcompany-semantic-insert-arguments62,2249
(defvar company-semantic-modes '(c-mode c++-mode jde-mode java-mode))company-semantic-modes67,2431
(defvar-local company-semantic--current-tags nilcompany-semantic--current-tags69,2502
(defun company-semantic-documentation-for-tag (tag)company-semantic-documentation-for-tag72,2587
(defun company-semantic-doc-or-summary (tag)company-semantic-doc-or-summary77,2790
(defun company-semantic-summary-and-doc (tag)company-semantic-summary-and-doc83,3036
(defun company-semantic-doc-buffer (tag)company-semantic-doc-buffer96,3514
(defsubst company-semantic-completions (prefix)company-semantic-completions104,3766
(defun company-semantic-completions-raw (prefix)company-semantic-completions-raw112,4107
(defun company-semantic-annotation (argument tags)company-semantic-annotation119,4438
(defun company-semantic--prefix ()company-semantic--prefix127,4794
(defun company-semantic (command &optional arg &rest ignored)company-semantic133,4973

elpa/company-20180501.11/company-abbrev.el,149
(defun company-abbrev-insert (match)company-abbrev-insert32,925
(defun company-abbrev (command &optional arg &rest ignored)company-abbrev37,1041

elpa/company-20180501.11/company-dabbrev-code.el,676
(defgroup company-dabbrev-code nilcompany-dabbrev-code32,969
(defcustom company-dabbrev-code-modescompany-dabbrev-code-modes36,1070
(defcustom company-dabbrev-code-other-buffers tcompany-dabbrev-code-other-buffers48,1652
(defcustom company-dabbrev-code-time-limit .1company-dabbrev-code-time-limit59,2226
(defcustom company-dabbrev-code-everywhere nilcompany-dabbrev-code-everywhere64,2428
(defcustom company-dabbrev-code-ignore-case nilcompany-dabbrev-code-ignore-case68,2552
(defun company-dabbrev-code--make-regexp (prefix)company-dabbrev-code--make-regexp72,2685
(defun company-dabbrev-code (command &optional arg &rest ignored)company-dabbrev-code79,2914

elpa/company-20180501.11/company-gtags.el,690
(defgroup company-gtags nilcompany-gtags32,938
(defcustom company-gtags-executablecompany-gtags-executable36,1025
(defcustom company-gtags-insert-arguments tcompany-gtags-insert-arguments45,1260
(defvar-local company-gtags--tags-available-p 'unknown)company-gtags--tags-available-p50,1439
(defcustom company-gtags-modes '(prog-mode jde-mode)company-gtags-modes52,1496
(defun company-gtags--tags-available-p ()company-gtags--tags-available-p59,1756
(defun company-gtags--fetch-tags (prefix)company-gtags--fetch-tags65,1996
(defun company-gtags--annotation (arg)company-gtags--annotation88,3143
(defun company-gtags (command &optional arg &rest ignored)company-gtags94,3335

elpa/company-20180501.11/company.el,20919
(defgroup company nilcompany81,3072
(defface company-tooltipcompany-tooltip87,3202
(defface company-tooltip-selectioncompany-tooltip-selection95,3466
(defface company-tooltip-searchcompany-tooltip-search103,3756
(defface company-tooltip-search-selectioncompany-tooltip-search-selection107,3876
(defface company-tooltip-mousecompany-tooltip-mouse111,4027
(defface company-tooltip-commoncompany-tooltip-common115,4146
(defface company-tooltip-common-selectioncompany-tooltip-common-selection122,4340
(defface company-tooltip-annotationcompany-tooltip-annotation126,4496
(defface company-tooltip-annotation-selectioncompany-tooltip-annotation-selection133,4702
(defface company-scrollbar-fgcompany-scrollbar-fg137,4870
(defface company-scrollbar-bgcompany-scrollbar-bg144,5053
(defface company-previewcompany-preview151,5240
(defface company-preview-commoncompany-preview-common159,5471
(defface company-preview-searchcompany-preview-search167,5720
(defface company-echo nilcompany-echo175,5973
(defface company-echo-commoncompany-echo-common178,6049
(defun company-frontends-set (variable value)company-frontends-set183,6255
(defcustom company-frontends '(company-pseudo-tooltip-unless-just-one-frontendcompany-frontends210,7790
(defcustom company-tooltip-limit 10company-tooltip-limit251,9807
(defcustom company-tooltip-minimum 6company-tooltip-minimum255,9915
(defcustom company-tooltip-minimum-width 0company-tooltip-minimum-width260,10085
(defcustom company-tooltip-maximum-width most-positive-fixnumcompany-tooltip-maximum-width266,10291
(defcustom company-tooltip-margin 1company-tooltip-margin272,10516
(defcustom company-tooltip-offset-display 'scrollbarcompany-tooltip-offset-display276,10626
(defcustom company-tooltip-align-annotations nilcompany-tooltip-align-annotations283,10982
(defcustom company-tooltip-flip-when-above nilcompany-tooltip-flip-when-above288,11155
(defvar company-safe-backendscompany-safe-backends293,11327
(defun company-safe-backends-p (backends)company-safe-backends-p316,12149
(defcustom company-backends `(,@(unless (version< "24.3.51" emacs-version)company-backends324,12457
(defcustom company-transformers nilcompany-transformers476,19619
(defcustom company-completion-started-hook nilcompany-completion-started-hook491,20278
(defcustom company-completion-cancelled-hook nilcompany-completion-cancelled-hook497,20479
(defcustom company-completion-finished-hook nilcompany-completion-finished-hook503,20683
(defcustom company-minimum-prefix-length 3company-minimum-prefix-length511,20991
(defcustom company-abort-manual-when-too-short nilcompany-abort-manual-when-too-short515,21127
(defcustom company-require-match 'company-explicit-action-pcompany-require-match522,21411
(defcustom company-auto-complete nilcompany-auto-complete534,21973
(defcustom company-auto-complete-chars '(?\  ?\) ?.)company-auto-complete-chars545,22455
(defcustom company-idle-delay .5company-idle-delay573,23946
(defcustom company-tooltip-idle-delay .5company-tooltip-idle-delay581,24317
(defcustom company-begin-commands '(self-insert-commandcompany-begin-commands588,24624
(defcustom company-continue-commands '(not save-buffer save-some-bufferscompany-continue-commands606,25521
(defcustom company-show-numbers nilcompany-show-numbers622,26438
(defcustom company-selection-wrap-around nilcompany-selection-wrap-around627,26626
(defvar company-async-wait 0.03company-async-wait632,26823
(defvar company-async-timeout 2company-async-timeout636,26965
(defvar company-mode-map (make-sparse-keymap)company-mode-map641,27151
(defvar company-active-mapcompany-active-map644,27234
(defvar company--disabled-backends nil)company--disabled-backends674,28809
(defun company-init-backend (backend)company-init-backend676,28850
(defun company--maybe-init-backend (backend)company--maybe-init-backend700,29626
(defcustom company-lighter-base "company"company-lighter-base706,29827
(defvar company-lighter '(" "company-lighter711,29983
(define-minor-mode company-modecompany-mode728,30677
(defcustom company-global-modes tcompany-global-modes766,32224
(define-globalized-minor-mode global-company-mode company-mode company-mode-on)global-company-mode784,33100
(defun company-mode-on ()company-mode-on786,33181
(defsubst company-assert-enabled ()company-assert-enabled795,33571
(defvar-local company-my-keymap nil)company-my-keymap802,33782
(defvar company-emulation-alist '((t . nil)))company-emulation-alist804,33820
(defsubst company-enable-overriding-keymap (keymap)company-enable-overriding-keymap806,33867
(defun company-ensure-emulation-alist ()company-ensure-emulation-alist810,33981
(defun company-install-map ()company-install-map816,34250
(defun company-uninstall-map ()company-uninstall-map821,34428
(defun company--company-command-p (keys)company--company-command-p824,34506
(defun company-ignore ()company-ignore833,34920
(defun company-input-noop ()company-input-noop839,35055
(defun company--posn-col-row (posn)company--posn-col-row845,35231
(defun company--col-row (&optional pos)company--col-row859,35903
(defun company--row (&optional pos)company--row862,35991
(defvar-local company-backend nil)company-backend867,36142
(defun company-grab (regexp &optional expression limit)company-grab869,36178
(defun company-grab-line (regexp &optional expression)company-grab-line873,36332
(defun company-grab-symbol ()company-grab-symbol881,36697
(defun company-grab-word ()company-grab-word890,37093
(defun company-grab-symbol-cons (idle-begin-after-re &optional max-len)company-grab-symbol-cons899,37475
(defun company-in-string-or-comment ()company-in-string-or-comment913,38107
(defun company-call-backend (&rest args)company-call-backend920,38339
(defun company--force-sync (fun args backend)company--force-sync923,38454
(defun company-call-backend-raw (&rest args)company-call-backend-raw944,39443
(defun company--multi-backend-adapter (backends command &rest args)company--multi-backend-adapter955,39952
(defun company--multi-backend-adapter-candidates (backends prefix separate)company--multi-backend-adapter-candidates985,41126
(defun company--multi-candidates-mapper (backend separate tag)company--multi-candidates-mapper1001,42113
(defun company--merge-async (pairs merger)company--merge-async1015,42530
(defun company--prefix-str (prefix)company--prefix-str1046,43849
(defvar-local company-prefix nil)company-prefix1051,44001
(defvar-local company-candidates nil)company-candidates1053,44036
(defvar-local company-candidates-length nil)company-candidates-length1055,44075
(defvar-local company-candidates-cache nil)company-candidates-cache1057,44121
(defvar-local company-candidates-predicate nil)company-candidates-predicate1059,44166
(defvar-local company-common nil)company-common1061,44215
(defvar-local company-selection 0)company-selection1063,44250
(defvar-local company-selection-changed nil)company-selection-changed1065,44286
(defvar-local company--manual-action nilcompany--manual-action1067,44332
(defvar-local company--manual-prefix nil)company--manual-prefix1070,44421
(defvar company--auto-completion nilcompany--auto-completion1072,44464
(defvar-local company--point-max nil)company--point-max1076,44610
(defvar-local company-point nil)company-point1078,44649
(defvar company-timer nil)company-timer1080,44683
(defvar company-tooltip-timer nil)company-tooltip-timer1081,44710
(defsubst company-strip-prefix (str)company-strip-prefix1083,44746
(defun company--insert-candidate (candidate)company--insert-candidate1086,44827
(defmacro company-with-candidate-inserted (candidate &rest body)company-with-candidate-inserted1096,45282
(defun company-explicit-action-p ()company-explicit-action-p1110,45831
(defun company-reformat (candidate)company-reformat1115,46000
(defun company--should-complete ()company--should-complete1123,46389
(defun company--should-continue ()company--should-continue1132,46768
(defun company-call-frontends (command)company-call-frontends1142,47232
(defun company-set-selection (selection &optional force-update)company-set-selection1149,47523
(defun company--group-lighter (candidate base)company--group-lighter1159,47953
(defun company-update-candidates (candidates)company-update-candidates1168,48412
(defun company-calculate-candidates (prefix)company-calculate-candidates1202,50001
(defun company--fetch-candidates (prefix)company--fetch-candidates1231,51309
(defun company--flyspell-workaround-p ()company--flyspell-workaround-p1262,52549
(defun company--preprocess-candidates (candidates)company--preprocess-candidates1267,52705
(defun company--postprocess-candidates (candidates)company--postprocess-candidates1275,52995
(defun company--strip-duplicates (candidates)company--strip-duplicates1282,53326
(defun company--transform-candidates (candidates)company--transform-candidates1305,54244
(defcustom company-occurrence-weight-functioncompany-occurrence-weight-function1311,54396
(defun company-occurrence-prefer-closest-above (pos match-beg match-end)company-occurrence-prefer-closest-above1322,54890
(defun company-occurrence-prefer-any-closest (pos _match-beg match-end)company-occurrence-prefer-any-closest1328,55117
(defun company-sort-by-occurrence (candidates)company-sort-by-occurrence1332,55272
(defun company--occurrence-predicate ()company--occurrence-predicate1366,56659
(defun company-sort-by-backend-importance (candidates)company-sort-by-backend-importance1387,57613
(defun company-sort-prefer-same-case-prefix (candidates)company-sort-prefer-same-case-prefix1405,58437
(defun company-idle-begin (buf win tick pos)company-idle-begin1415,58915
(defun company-auto-begin ()company-auto-begin1425,59251
(defun company-manual-begin ()company-manual-begin1440,59769
(defun company-other-backend (&optional backward)company-other-backend1451,60083
(defun company-require-match-p ()company-require-match-p1468,60754
(defun company-auto-complete-p (input)company-auto-complete-p1476,61075
(defun company--incremental-p ()company--incremental-p1489,61675
(defun company--continue-failed (new-prefix)company--continue-failed1497,61999
(defun company--good-prefix-p (prefix)company--good-prefix-p1517,62773
(defun company--continue ()company--continue1528,63342
(defun company--begin-new ()company--begin-new1563,64765
(defun company--perform ()company--perform1597,66233
(defun company-cancel (&optional result)company-cancel1608,66645
(defun company-abort ()company-abort1641,67877
(defun company-finish (result)company-finish1645,67945
(defsubst company-keep (command)company-keep1649,68041
(defun company-pre-command ()company-pre-command1652,68130
(defun company-post-command ()company-post-command1669,68736
(defun company--idle-delay ()company--idle-delay1701,70164
(defvar company--begin-inhibit-commands '(company-abortcompany--begin-inhibit-commands1706,70275
(defun company--should-begin ()company--should-begin1715,70764
(defcustom company-search-regexp-function #'regexp-quotecompany-search-regexp-function1724,71106
(defvar-local company-search-string "")company-search-string1737,71808
(defvar company-search-lighter '(" "company-search-lighter1739,71849
(defvar-local company-search-filtering nilcompany-search-filtering1745,72100
(defvar-local company--search-old-selection 0)company--search-old-selection1748,72214
(defvar-local company--search-old-changed nil)company--search-old-changed1750,72262
(defun company-search-words-regexp (input)company-search-words-regexp1752,72310
(defun company-search-words-in-any-order-regexp (input)company-search-words-in-any-order-regexp1756,72471
(defun company-search-flex-regexp (input)company-search-flex-regexp1765,72852
(defun company--permutations (lst)company--permutations1774,73184
(defun company--search (text lines)company--search1783,73406
(defun company-search-keypad ()company-search-keypad1791,73650
(defun company-search-printing-char ()company-search-printing-char1797,73847
(defun company--search-update-predicate (ss)company--search-update-predicate1805,74132
(defun company--search-update-string (new)company--search-update-string1815,74556
(defun company--search-assert-input ()company--search-assert-input1822,74818
(defun company-search-repeat-forward ()company-search-repeat-forward1827,74977
(defun company-search-repeat-backward ()company-search-repeat-backward1838,75412
(defun company-search-toggle-filtering ()company-search-toggle-filtering1850,75920
(defun company-search-abort ()company-search-abort1859,76237
(defun company-search-other-char ()company-search-other-char1867,76515
(defun company-search-delete-char ()company-search-delete-char1873,76668
(defvar company-search-mapcompany-search-map1883,76994
(define-minor-mode company-search-modecompany-search-mode1926,79056
(defun company--search-assert-enabled ()company--search-assert-enabled1948,80013
(defun company-search-candidates ()company-search-candidates1954,80188
(defvar company-filter-mapcompany-filter-map1973,80953
(defun company-filter-candidates ()company-filter-candidates1981,81244
(defun company-select-next (&optional arg)company-select-next1991,81617
(defun company-select-previous (&optional arg)company-select-previous1999,81857
(defun company-select-next-or-abort (&optional arg)company-select-next-or-abort2006,82056
(defun company-select-previous-or-abort (&optional arg)company-select-previous-or-abort2017,82390
(defun company-next-page ()company-next-page2028,82736
(defun company-previous-page ()company-previous-page2039,83156
(defvar company-pseudo-tooltip-overlay)company-pseudo-tooltip-overlay2050,83582
(defvar company-tooltip-offset)company-tooltip-offset2052,83623
(defun company--inside-tooltip-p (event-col-row row height)company--inside-tooltip-p2054,83656
(defun company--event-col-row (event)company--event-col-row2068,84200
(defun company-select-mouse (event)company-select-mouse2071,84286
(defun company-complete-mouse (event)company-complete-mouse2097,85473
(defun company-complete-selection ()company-complete-selection2103,85650
(defun company-complete-common ()company-complete-common2110,85866
(defun company-complete-common-or-cycle (&optional arg)company-complete-common-or-cycle2119,86189
(defun company-indent-or-complete-common ()company-indent-or-complete-common2132,86701
(defun company-select-next-if-tooltip-visible-or-complete-selection ()company-select-next-if-tooltip-visible-or-complete-selection2149,87329
(defun company-complete ()company-complete2159,87778
(defun company-complete-number (n)company-complete-number2172,88334
(defconst company-space-strings-limit 100)company-space-strings-limit2196,89429
(defconst company-space-stringscompany-space-strings2198,89473
(defun company-space-string (len)company-space-string2204,89663
(defun company-safe-substring (str from &optional to)company-safe-substring2209,89807
(defvar-local company-last-metadata nil)company-last-metadata2229,90535
(defun company-fetch-metadata ()company-fetch-metadata2231,90577
(defun company-doc-buffer (&optional string)company-doc-buffer2238,90864
(defvar company--electric-saved-window-configuration nil)company--electric-saved-window-configuration2246,91086
(defvar company--electric-commandscompany--electric-commands2248,91145
(defun company--electric-restore-window-configuration ()company--electric-restore-window-configuration2252,91310
(defmacro company--electric-do (&rest body)company--electric-do2259,91691
(defun company--unread-this-command-keys ()company--unread-this-command-keys2271,92197
(defun company-show-doc-buffer ()company-show-doc-buffer2278,92491
(defun company-show-location ()company-show-location2295,93251
(defvar-local company-callback nil)company-callback2318,94274
(defun company-remove-callback (&optional ignored)company-remove-callback2320,94311
(defun company-begin-backend (backend &optional callback)company-begin-backend2325,94588
(defun company-begin-with (candidatescompany-begin-with2341,95361
(defun company-version (&optional show-version)company-version2368,96362
(defun company-diag ()company-diag2381,96761
(defvar-local company-pseudo-tooltip-overlay nil)company-pseudo-tooltip-overlay2426,98487
(defvar-local company-tooltip-offset 0)company-tooltip-offset2428,98538
(defun company-tooltip--lines-update-offset (selection num-lines limit)company-tooltip--lines-update-offset2430,98579
(defun company-tooltip--simple-update-offset (selection _num-lines limit)company-tooltip--simple-update-offset2450,99165
(defsubst company-round-tab (arg)company-round-tab2459,99438
(defun company-plainify (str)company-plainify2462,99522
(defun company-fill-propertize (value annotation width selected left right)company-fill-propertize2475,100051
(defun company--search-chunks ()company--search-chunks2546,103600
(defun company--pre-render (str &optional annotation-p)company--pre-render2556,103870
(defun company--clean-string (str)company--clean-string2567,104372
(defun company-buffer-lines (beg end)company-buffer-lines2588,104924
(defun company-modify-line (old new offset)company-modify-line2612,105925
(defsubst company--window-height ()company--window-height2617,106097
(defun company--window-width ()company--window-width2622,106234
(defun company--replacement-string (lines old column nl &optional align-top)company--replacement-string2647,107179
(defun company--offset-line (line offset)company--offset-line2686,108533
(defun company--create-lines (selection limit)company--create-lines2691,108641
(defun company--scrollbar-bounds (offset limit length)company--scrollbar-bounds2785,112328
(defun company--scrollbar (i bounds)company--scrollbar2792,112593
(defun company--scrollpos-line (text width)company--scrollpos-line2798,112800
(defun company--pseudo-tooltip-height ()company--pseudo-tooltip-height2806,113090
(defun company-pseudo-tooltip-show (row column selection)company-pseudo-tooltip-show2816,113553
(defun company-pseudo-tooltip-show-at-point (pos column-offset)company-pseudo-tooltip-show-at-point2848,114697
(defun company-pseudo-tooltip-edit (selection)company-pseudo-tooltip-edit2854,114963
(defun company-pseudo-tooltip-hide ()company-pseudo-tooltip-hide2865,115548
(defun company-pseudo-tooltip-hide-temporarily ()company-pseudo-tooltip-hide-temporarily2870,115726
(defun company-pseudo-tooltip-unhide ()company-pseudo-tooltip-unhide2877,116088
(defun company-pseudo-tooltip-guard ()company-pseudo-tooltip-guard2894,116818
(defun company-pseudo-tooltip-frontend (command)company-pseudo-tooltip-frontend2906,117279
(defun company-pseudo-tooltip-unless-just-one-frontend (command)company-pseudo-tooltip-unless-just-one-frontend2930,118462
(defun company-pseudo-tooltip-unless-just-one-frontend-with-delay (command)company-pseudo-tooltip-unless-just-one-frontend-with-delay2936,118735
(defvar-local company-preview-overlay nil)company-preview-overlay2962,119910
(defun company-preview-show-at-point (pos completion)company-preview-show-at-point2964,119954
(defun company-preview-hide ()company-preview-hide3009,121799
(defun company-preview-frontend (command)company-preview-frontend3014,121949
(defun company-preview-if-just-one-frontend (command)company-preview-if-just-one-frontend3022,122319
(defun company--show-inline-p ()company--show-inline-p3028,122568
(defun company-tooltip-visible-p ()company-tooltip-visible-p3034,122789
(defun company-preview-common--show-p ()company-preview-common--show-p3039,122988
(defun company-preview-common-frontend (command)company-preview-common-frontend3045,123242
(defvar-local company-echo-last-msg nil)company-echo-last-msg3056,123712
(defvar company-echo-timer nil)company-echo-timer3058,123754
(defvar company-echo-delay .01)company-echo-delay3060,123787
(defcustom company-echo-truncate-lines tcompany-echo-truncate-lines3062,123820
(defun company-echo-show (&optional getter)company-echo-show3067,123996
(defun company-echo-show-soon (&optional getter)company-echo-show-soon3076,124296
(defun company-echo-cancel (&optional unset)company-echo-cancel3080,124448
(defun company-echo-show-when-idle (&optional getter)company-echo-show-when-idle3086,124610
(defun company-echo-format ()company-echo-format3091,124797
(defun company-echo-strip-common-format ()company-echo-strip-common-format3121,125867
(defun company-echo-hide ()company-echo-hide3146,126706
(defun company-echo-frontend (command)company-echo-frontend3151,126840
(defun company-echo-strip-common-frontend (command)company-echo-strip-common-frontend3157,127066
(defun company-echo-metadata-frontend (command)company-echo-metadata-frontend3163,127318

elpa/company-20180501.11/company-css.el,1020
(defconst company-css-property-alistcompany-css-property-alist33,1061
(defconst company-css-value-classescompany-css-value-classes295,13358
(defconst company-css-html-tagscompany-css-html-tags318,14464
(defconst company-css-pseudo-classescompany-css-pseudo-classes333,15348
(defconst company-css-property-cache (make-hash-table :size 115 :test 'equal))company-css-property-cache338,15587
(defun company-css-property-values (attribute)company-css-property-values340,15667
(defconst company-css-braces-syntax-tablecompany-css-braces-syntax-table361,16545
(defun company-css-inside-braces-p ()company-css-inside-braces-p368,16761
(defconst company-css-tag-regexpcompany-css-tag-regexp376,17019
(defconst company-css-pseudo-regexpcompany-css-pseudo-regexp390,17505
(defun company-css-grab-property ()company-css-grab-property405,18022
(defconst company-css-property-value-regexpcompany-css-property-value-regexp412,18252
(defun company-css (command &optional arg &rest ignored)company-css417,18437

elpa/company-20180501.11/company-keywords.el,235
(defun company-keywords-upper-lower (&rest lst)company-keywords-upper-lower31,918
(defvar company-keywords-alistcompany-keywords-alist35,1057
(defun company-keywords (command &optional arg &rest ignored)company-keywords277,16660

elpa/company-20180501.11/company-xcode.el,705
(defgroup company-xcode nilcompany-xcode31,914
(defcustom company-xcode-xcodeindex-executable (executable-find "xcodeindex")company-xcode-xcodeindex-executable35,1005
(defvar company-xcode-tags nil)company-xcode-tags39,1138
(defun company-xcode-reset ()company-xcode-reset41,1171
(defcustom company-xcode-typescompany-xcode-types46,1278
(defvar-local company-xcode-project 'unknown)company-xcode-project65,2249
(defun company-xcode-fetch (project-bundle)company-xcode-fetch69,2378
(defun company-xcode-find-project ()company-xcode-find-project87,3246
(defun company-xcode-tags ()company-xcode-tags99,3680
(defun company-xcode (command &optional arg &rest ignored)company-xcode108,4099

elpa/company-20180501.11/company-clang.el,2617
(defgroup company-clang nilcompany-clang32,967
(defcustom company-clang-executablecompany-clang-executable36,1049
(defcustom company-clang-begin-after-member-access tcompany-clang-begin-after-member-access41,1163
(defcustom company-clang-arguments nilcompany-clang-arguments51,1550
(defcustom company-clang-prefix-guesser 'company-clang-guess-prefixcompany-clang-prefix-guesser57,1835
(defvar company-clang-modes '(c-mode c++-mode objc-mode)company-clang-modes61,2021
(defcustom company-clang-insert-arguments tcompany-clang-insert-arguments64,2122
(defvar company-clang--prefix nil)company-clang--prefix71,2383
(defsubst company-clang--guess-pch-file (file)company-clang--guess-pch-file73,2419
(defsubst company-clang--file-substring (file beg end)company-clang--file-substring79,2698
(defun company-clang-guess-prefix ()company-clang-guess-prefix84,2850
(defun company-clang-set-prefix (&optional prefix)company-clang-set-prefix93,3275
(defconst company-clang--completion-patterncompany-clang--completion-pattern113,4148
(defconst company-clang--error-buffer-name "*clang-error*")company-clang--error-buffer-name116,4260
(defun company-clang--lang-option ()company-clang--lang-option118,4321
(defun company-clang--parse-output (prefix _objc)company-clang--parse-output124,4556
(defun company-clang--meta (candidate)company-clang--meta144,5358
(defun company-clang--annotation (candidate)company-clang--annotation147,5439
(defun company-clang--annotation-1 (candidate)company-clang--annotation-1159,5822
(defun company-clang--strip-formatting (text)company-clang--strip-formatting175,6403
(defun company-clang--handle-error (res args)company-clang--handle-error181,6554
(defun company-clang--start-process (prefix callback &rest args)company-clang--start-process204,7554
(defsubst company-clang--build-location (pos)company-clang--build-location235,8835
(defsubst company-clang--build-complete-args (pos)company-clang--build-complete-args248,9227
(defun company-clang--candidates (prefix callback)company-clang--candidates259,9804
(defun company-clang--prefix ()company-clang--prefix274,10337
(defconst company-clang-required-version 1.1)company-clang-required-version281,10577
(defvar company-clang--version nil)company-clang--version283,10624
(defun company-clang--auto-save-p ()company-clang--auto-save-p285,10661
(defun company-clang--check-version (min apple-min)company-clang--check-version289,10750
(defsubst company-clang-version ()company-clang-version295,10971
(defun company-clang (command &optional arg &rest ignored)company-clang308,11448

elpa/company-20180501.11/company-files.el,941
(defgroup company-files nilcompany-files31,915
(defcustom company-files-exclusions nilcompany-files-exclusions35,1002
(defun company-files--directory-files (dir prefix)company-files--directory-files41,1238
(defun company-files--exclusions-filtered (completions)company-files--exclusions-filtered53,1758
(defvar company-files--regexpscompany-files--regexps66,2438
(defun company-files--grab-existing-name ()company-files--grab-existing-name75,2801
(defun company-files--connected-p (file)company-files--connected-p88,3263
(defun company-files--trailing-slash-p (file)company-files--trailing-slash-p92,3373
(defvar company-files--completion-cache nil)company-files--completion-cache98,3652
(defun company-files--complete (prefix)company-files--complete100,3698
(defun company-file--keys-match-p (new old)company-file--keys-match-p126,5172
(defun company-files (command &optional arg &rest ignored)company-files131,5314

elpa/company-20180501.11/company-tempo.el,392
(defgroup company-tempo nilcompany-tempo32,922
(defcustom company-tempo-expand nilcompany-tempo-expand36,1000
(defsubst company-tempo-lookup (match)company-tempo-lookup41,1168
(defun company-tempo-insert (match)company-tempo-insert44,1256
(defsubst company-tempo-meta (match)company-tempo-meta51,1479
(defun company-tempo (command &optional arg &rest ignored)company-tempo59,1693

elpa/company-20180501.11/company-cmake.el,1275
(defgroup company-cmake nilcompany-cmake31,1039
(defcustom company-cmake-executablecompany-cmake-executable35,1121
(defvar company-cmake-executable-argumentscompany-cmake-executable-arguments40,1235
(defvar company-cmake--completion-patterncompany-cmake--completion-pattern47,1476
(defvar company-cmake-modes '(cmake-mode)company-cmake-modes51,1587
(defvar company-cmake--candidates-cache nilcompany-cmake--candidates-cache54,1676
(defvar company-cmake--meta-command-cache nilcompany-cmake--meta-command-cache57,1756
(defun company-cmake--replace-tags (rlt)company-cmake--replace-tags60,1881
(defun company-cmake--fill-candidates-cache (arg)company-cmake--fill-candidates-cache78,2599
(defun company-cmake--parse (prefix content cmd)company-cmake--parse95,3262
(defun company-cmake--candidates (prefix)company-cmake--candidates111,3812
(defun company-cmake--unexpand-candidate (candidate)company-cmake--unexpand-candidate129,4403
(defun company-cmake--meta (candidate)company-cmake--meta148,5205
(defun company-cmake--doc-buffer (candidate)company-cmake--doc-buffer166,6004
(defun company-cmake-prefix-dollar-brace-p ()company-cmake-prefix-dollar-brace-p180,6589
(defun company-cmake (command &optional arg &rest ignored)company-cmake187,6816

elpa/company-20180501.11/company-template.el,1831
(defface company-template-fieldcompany-template-field26,870
(defvar company-template-nav-mapcompany-template-nav-map32,1114
(defvar company-template-field-mapcompany-template-field-map38,1330
(defvar-local company-template--buffer-templates nil)company-template--buffer-templates44,1540
(defun company-template-templates-at (pos)company-template-templates-at48,1677
(defun company-template-move-to-first (templ)company-template-move-to-first57,1976
(defun company-template-forward-field ()company-template-forward-field62,2111
(defun company-template-clear-field ()company-template-clear-field70,2377
(defun company-template--after-clear-c-like-field ()company-template--after-clear-c-like-field81,2744
(defun company-template-find-next-field ()company-template-find-next-field99,3695
(defun company-template-field-at (&optional point)company-template-field-at111,4175
(defun company-template-declare-template (beg end)company-template-declare-template118,4447
(defun company-template-remove-template (templ)company-template-remove-template128,4829
(defun company-template-add-field (templ beg end &optional display after-clear-fn)company-template-add-field135,5097
(defun company-template-remove-field (ovl &optional clear)company-template-remove-field160,6266
(defun company-template-clean-up (&optional pos)company-template-clean-up171,6724
(defun company-template-insert-hook (ovl after-p &rest _ignore)company-template-insert-hook180,7104
(defun company-template-post-command ()company-template-post-command185,7283
(defun company-template-c-like-templatify (call)company-template-c-like-templatify192,7553
(defun company-template--c-like-args (templ end)company-template--c-like-args223,8767
(defun company-template-objc-templatify (selector)company-template-objc-templatify234,9266

elpa/company-20180501.11/company-autoloads.el,63
(defvar global-company-mode nil "\global-company-mode41,1416

elpa/company-20180501.11/company-pkg.el,90
(define-package "company" "20180501.11" "Modular text completion framework""company"1,0

elpa/company-20180501.11/company-ispell.el,430
(defgroup company-ispell nilcompany-ispell32,932
(defcustom company-ispell-dictionary nilcompany-ispell-dictionary36,1018
(defvar company-ispell-available 'unknown)company-ispell-available42,1241
(defalias 'company-ispell--lookup-wordscompany-ispell--lookup-words44,1285
(defun company-ispell-available ()company-ispell-available49,1410
(defun company-ispell (command &optional arg &rest ignored)company-ispell61,1789

elpa/company-20180501.11/company-elisp.el,1676
(defgroup company-elisp nilcompany-elisp34,1046
(defcustom company-elisp-detect-function-context tcompany-elisp-detect-function-context38,1133
(defcustom company-elisp-show-locals-first tcompany-elisp-show-locals-first44,1389
(defun company-elisp--prefix ()company-elisp--prefix50,1612
(defun company-elisp--predicate (symbol)company-elisp--predicate59,1899
(defun company-elisp--fns-regexp (&rest names)company-elisp--fns-regexp65,2033
(defvar company-elisp-parse-limit 30)company-elisp-parse-limit68,2142
(defvar company-elisp-parse-depth 100)company-elisp-parse-depth69,2180
(defvar company-elisp-defun-names '("defun" "defmacro" "defsubst"))company-elisp-defun-names71,2220
(defvar company-elisp-var-binding-regexpcompany-elisp-var-binding-regexp73,2289
(defvar company-elisp-var-binding-regexp-1company-elisp-var-binding-regexp-178,2509
(defvar company-elisp-fun-binding-regexpcompany-elisp-fun-binding-regexp82,2677
(defvar company-elisp-defuns-regexpcompany-elisp-defuns-regexp86,2832
(defun company-elisp--should-complete ()company-elisp--should-complete90,2965
(defun company-elisp--locals (prefix functions-p)company-elisp--locals108,3527
(defun company-elisp-candidates (prefix)company-elisp-candidates146,5169
(defun company-elisp--globals (prefix predicate)company-elisp--globals158,5713
(defun company-elisp--candidates-predicate (prefix)company-elisp--candidates-predicate161,5809
(defun company-elisp--before-binding-varlist-p ()company-elisp--before-binding-varlist-p180,6534
(defun company-elisp--doc (symbol)company-elisp--doc186,6728
(defun company-elisp (command &optional arg &rest ignored)company-elisp196,7058

elpa/company-20180501.11/company-yasnippet.el,381
(defun company-yasnippet--key-prefixes ()company-yasnippet--key-prefixes38,1208
(defun company-yasnippet--candidates (prefix)company-yasnippet--candidates65,2205
(defun company-yasnippet--completions-for-prefix (prefix key-prefix tables)company-yasnippet--completions-for-prefix76,2866
(defun company-yasnippet (command &optional arg &rest ignore)company-yasnippet101,3672

elpa/company-20180501.11/company-oddmuse.el,237
(defvar company-oddmuse-link-regexpcompany-oddmuse-link-regexp33,1006
(defun company-oddmuse-get-page-table ()company-oddmuse-get-page-table36,1111
(defun company-oddmuse (command &optional arg &rest ignored)company-oddmuse44,1407

elpa/company-20180501.11/company-capf.el,410
(defvar company--capf-cache nil)company--capf-cache35,1191
(defun company--capf-data ()company--capf-data37,1225
(defun company--capf-data-real ()company--capf-data-real48,1683
(defun company--capf-workaround ()company--capf-workaround63,2524
(defun company-capf (command &optional arg &rest _args)company-capf71,2918
(defun company--capf-post-completion (arg)company--capf-post-completion161,7001

elpa/company-20180501.11/company-bbdb.el,270
(defgroup company-bbdb nilcompany-bbdb30,1079
(defcustom company-bbdb-modes '(message-mode)company-bbdb-modes34,1159
(defun company-bbdb--candidates (arg)company-bbdb--candidates39,1346
(defun company-bbdb (command &optional arg &rest ignore)company-bbdb46,1624

elpa/pkg-info-20150517.443/pkg-info-autoloads.el,0

elpa/pkg-info-20150517.443/pkg-info.el,1852
(defvar url-http-end-of-headers)url-http-end-of-headers62,2050
(defun pkg-info-format-version (version)pkg-info-format-version66,2110
(defsubst pkg-info--show-version-and-return (version show)pkg-info--show-version-and-return73,2343
(defun pkg-info--read-library ()pkg-info--read-library83,2602
(defun pkg-info--read-function ()pkg-info--read-function90,2879
(defun pkg-info--read-package ()pkg-info--read-package95,3085
(defun pkg-info-library-source (library)pkg-info-library-source106,3535
(defun pkg-info-defining-library (function)pkg-info-defining-library115,3818
(defun pkg-info-x-original-version (file)pkg-info-x-original-version130,4327
(defun pkg-info-library-original-version (library &optional show)pkg-info-library-original-version143,4790
(defun pkg-info-library-version (library &optional show)pkg-info-library-version169,5730
(defun pkg-info-defining-library-original-version (function &optional show)pkg-info-defining-library-original-version188,6430
(defun pkg-info-defining-library-version (function &optional show)pkg-info-defining-library-version210,7260
(defun pkg-info-package-version (package &optional show)pkg-info-package-version228,7909
(defun pkg-info-version-info (library &optional package show)pkg-info-version-info242,8475
(defconst pkg-info-melpa-recipe-url "http://melpa.org/recipes.json"pkg-info-melpa-recipe-url284,10548
(defvar pkg-info-melpa-recipes nilpkg-info-melpa-recipes287,10665
(defun pkg-info-retrieve-melpa-recipes ()pkg-info-retrieve-melpa-recipes290,10733
(defun pkg-info-get-melpa-recipes ()pkg-info-get-melpa-recipes304,11351
(defun pkg-info-get-melpa-recipe (package)pkg-info-get-melpa-recipe310,11527
(defun pkg-info-get-melpa-fetcher (package)pkg-info-get-melpa-fetcher316,11702
(defun pkg-info-wiki-package-p (package)pkg-info-wiki-package-p320,11847

elpa/pkg-info-20150517.443/pkg-info-pkg.el,109
(define-package "pkg-info" "20150517.443" "Information about packages" (quote ((epl "0.8"))))"pkg-info"1,0

flycheck_init.el,587
(defun add-to-load-path (&rest paths)add-to-load-path29,581
(defun my-c-mode-common-conf ()my-c-mode-common-conf191,6367
(defun rainbow-delimiters-using-stronger-colors ()rainbow-delimiters-using-stronger-colors218,7172
(defvar my-lines-page-mode t)my-lines-page-mode264,8245
(defvar my-mode-line-format)my-mode-line-format265,8275
(define-key global-map (kbd "\C-cn") 'flycheck-next-error)global-map563,17544
(define-key global-map (kbd "\C-cp") 'flycheck-previous-error)global-map564,17603
(define-key global-map (kbd "\C-cd") 'flycheck-list-errors)global-map565,17666

init.el,587
(defun add-to-load-path (&rest paths)add-to-load-path29,581
(defun my-c-mode-common-conf ()my-c-mode-common-conf191,6367
(defun rainbow-delimiters-using-stronger-colors ()rainbow-delimiters-using-stronger-colors218,7172
(defvar my-lines-page-mode t)my-lines-page-mode264,8245
(defvar my-mode-line-format)my-mode-line-format265,8275
(define-key global-map (kbd "\C-cn") 'flycheck-next-error)global-map563,17544
(define-key global-map (kbd "\C-cp") 'flycheck-previous-error)global-map564,17603
(define-key global-map (kbd "\C-cd") 'flycheck-list-errors)global-map565,17666
